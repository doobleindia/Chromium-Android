// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: experiments_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Whether the favicon sync datatypes are enabled, and what parameters
 * they should operate under.
 * </pre>
 *
 * Protobuf type {@code sync_pb.FaviconSyncFlags}
 */
public  final class FaviconSyncFlags extends
    com.google.protobuf.GeneratedMessageLite<
        FaviconSyncFlags, FaviconSyncFlags.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.FaviconSyncFlags)
    FaviconSyncFlagsOrBuilder {
  private FaviconSyncFlags() {
    faviconSyncLimit_ = 200;
  }
  private int bitField0_;
  public static final int ENABLED_FIELD_NUMBER = 1;
  private boolean enabled_;
  /**
   * <code>optional bool enabled = 1;</code>
   */
  public boolean hasEnabled() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional bool enabled = 1;</code>
   */
  public boolean getEnabled() {
    return enabled_;
  }
  /**
   * <code>optional bool enabled = 1;</code>
   */
  private void setEnabled(boolean value) {
    bitField0_ |= 0x00000001;
    enabled_ = value;
  }
  /**
   * <code>optional bool enabled = 1;</code>
   */
  private void clearEnabled() {
    bitField0_ = (bitField0_ & ~0x00000001);
    enabled_ = false;
  }

  public static final int FAVICON_SYNC_LIMIT_FIELD_NUMBER = 2;
  private int faviconSyncLimit_;
  /**
   * <code>optional int32 favicon_sync_limit = 2 [default = 200];</code>
   */
  public boolean hasFaviconSyncLimit() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional int32 favicon_sync_limit = 2 [default = 200];</code>
   */
  public int getFaviconSyncLimit() {
    return faviconSyncLimit_;
  }
  /**
   * <code>optional int32 favicon_sync_limit = 2 [default = 200];</code>
   */
  private void setFaviconSyncLimit(int value) {
    bitField0_ |= 0x00000002;
    faviconSyncLimit_ = value;
  }
  /**
   * <code>optional int32 favicon_sync_limit = 2 [default = 200];</code>
   */
  private void clearFaviconSyncLimit() {
    bitField0_ = (bitField0_ & ~0x00000002);
    faviconSyncLimit_ = 200;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeBool(1, enabled_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, faviconSyncLimit_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, enabled_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, faviconSyncLimit_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.FaviconSyncFlags parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.FaviconSyncFlags prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Whether the favicon sync datatypes are enabled, and what parameters
   * they should operate under.
   * </pre>
   *
   * Protobuf type {@code sync_pb.FaviconSyncFlags}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.FaviconSyncFlags, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.FaviconSyncFlags)
      org.chromium.components.sync.protocol.FaviconSyncFlagsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.FaviconSyncFlags.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional bool enabled = 1;</code>
     */
    public boolean hasEnabled() {
      return instance.hasEnabled();
    }
    /**
     * <code>optional bool enabled = 1;</code>
     */
    public boolean getEnabled() {
      return instance.getEnabled();
    }
    /**
     * <code>optional bool enabled = 1;</code>
     */
    public Builder setEnabled(boolean value) {
      copyOnWrite();
      instance.setEnabled(value);
      return this;
    }
    /**
     * <code>optional bool enabled = 1;</code>
     */
    public Builder clearEnabled() {
      copyOnWrite();
      instance.clearEnabled();
      return this;
    }

    /**
     * <code>optional int32 favicon_sync_limit = 2 [default = 200];</code>
     */
    public boolean hasFaviconSyncLimit() {
      return instance.hasFaviconSyncLimit();
    }
    /**
     * <code>optional int32 favicon_sync_limit = 2 [default = 200];</code>
     */
    public int getFaviconSyncLimit() {
      return instance.getFaviconSyncLimit();
    }
    /**
     * <code>optional int32 favicon_sync_limit = 2 [default = 200];</code>
     */
    public Builder setFaviconSyncLimit(int value) {
      copyOnWrite();
      instance.setFaviconSyncLimit(value);
      return this;
    }
    /**
     * <code>optional int32 favicon_sync_limit = 2 [default = 200];</code>
     */
    public Builder clearFaviconSyncLimit() {
      copyOnWrite();
      instance.clearFaviconSyncLimit();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.FaviconSyncFlags)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.FaviconSyncFlags();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.FaviconSyncFlags other = (org.chromium.components.sync.protocol.FaviconSyncFlags) arg1;
        enabled_ = visitor.visitBoolean(
            hasEnabled(), enabled_,
            other.hasEnabled(), other.enabled_);
        faviconSyncLimit_ = visitor.visitInt(
            hasFaviconSyncLimit(), faviconSyncLimit_,
            other.hasFaviconSyncLimit(), other.faviconSyncLimit_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                enabled_ = input.readBool();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                faviconSyncLimit_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.FaviconSyncFlags.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.FaviconSyncFlags)
  private static final org.chromium.components.sync.protocol.FaviconSyncFlags DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new FaviconSyncFlags();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.FaviconSyncFlags getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<FaviconSyncFlags> PARSER;

  public static com.google.protobuf.Parser<FaviconSyncFlags> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

