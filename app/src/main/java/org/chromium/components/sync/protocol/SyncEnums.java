// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync_enums.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.SyncEnums}
 */
public  final class SyncEnums extends
    com.google.protobuf.GeneratedMessageLite<
        SyncEnums, SyncEnums.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.SyncEnums)
    SyncEnumsOrBuilder {
  private SyncEnums() {
  }
  /**
   * <pre>
   * These events are sent by the DebugInfo class for singleton events.
   * </pre>
   *
   * Protobuf enum {@code sync_pb.SyncEnums.SingletonDebugEventType}
   */
  public enum SingletonDebugEventType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Connection status change. Note this gets generated even during a
     * successful connection.
     * </pre>
     *
     * <code>CONNECTION_STATUS_CHANGE = 1;</code>
     */
    CONNECTION_STATUS_CHANGE(1),
    /**
     * <pre>
     * Client received an updated token.
     * </pre>
     *
     * <code>UPDATED_TOKEN = 2;</code>
     */
    UPDATED_TOKEN(2),
    /**
     * <pre>
     * Cryptographer needs passphrase.
     * </pre>
     *
     * <code>PASSPHRASE_REQUIRED = 3;</code>
     */
    PASSPHRASE_REQUIRED(3),
    /**
     * <pre>
     * Passphrase was accepted by cryptographer.
     * </pre>
     *
     * <code>PASSPHRASE_ACCEPTED = 4;</code>
     */
    PASSPHRASE_ACCEPTED(4),
    /**
     * <pre>
     * Sync Initialization is complete.
     * </pre>
     *
     * <code>INITIALIZATION_COMPLETE = 5;</code>
     */
    INITIALIZATION_COMPLETE(5),
    /**
     * <pre>
     * Server sent stop syncing permanently. This event should never be seen by
     * the server in the absence of bugs.
     * </pre>
     *
     * <code>STOP_SYNCING_PERMANENTLY = 6;</code>
     */
    STOP_SYNCING_PERMANENTLY(6),
    /**
     * <pre>
     * Client has finished encrypting all data.
     * </pre>
     *
     * <code>ENCRYPTION_COMPLETE = 7;</code>
     */
    ENCRYPTION_COMPLETE(7),
    /**
     * <pre>
     * Client received an actionable error.
     * </pre>
     *
     * <code>ACTIONABLE_ERROR = 8;</code>
     */
    ACTIONABLE_ERROR(8),
    /**
     * <pre>
     * Set of encrypted types has changed.
     * </pre>
     *
     * <code>ENCRYPTED_TYPES_CHANGED = 9;</code>
     */
    ENCRYPTED_TYPES_CHANGED(9),
    /**
     * <pre>
     * The encryption passphrase state changed.
     * </pre>
     *
     * <code>PASSPHRASE_TYPE_CHANGED = 10;</code>
     */
    PASSPHRASE_TYPE_CHANGED(10),
    /**
     * <pre>
     * A new keystore encryption token was persisted.
     * </pre>
     *
     * <code>KEYSTORE_TOKEN_UPDATED = 11;</code>
     */
    KEYSTORE_TOKEN_UPDATED(11),
    /**
     * <pre>
     * The datatype manager has finished an at least partially successful
     * configuration and is once again syncing with the server.
     * </pre>
     *
     * <code>CONFIGURE_COMPLETE = 12;</code>
     */
    CONFIGURE_COMPLETE(12),
    /**
     * <pre>
     * A new cryptographer bootstrap token was generated.
     * </pre>
     *
     * <code>BOOTSTRAP_TOKEN_UPDATED = 13;</code>
     */
    BOOTSTRAP_TOKEN_UPDATED(13),
    /**
     * <pre>
     * Cryptographer needs trusted vault decryption keys.
     * </pre>
     *
     * <code>TRUSTED_VAULT_KEY_REQUIRED = 14;</code>
     */
    TRUSTED_VAULT_KEY_REQUIRED(14),
    /**
     * <pre>
     * Cryptographer no longer needs trusted vault decryption keys.
     * </pre>
     *
     * <code>TRUSTED_VAULT_KEY_ACCEPTED = 15;</code>
     */
    TRUSTED_VAULT_KEY_ACCEPTED(15),
    ;

    /**
     * <pre>
     * Connection status change. Note this gets generated even during a
     * successful connection.
     * </pre>
     *
     * <code>CONNECTION_STATUS_CHANGE = 1;</code>
     */
    public static final int CONNECTION_STATUS_CHANGE_VALUE = 1;
    /**
     * <pre>
     * Client received an updated token.
     * </pre>
     *
     * <code>UPDATED_TOKEN = 2;</code>
     */
    public static final int UPDATED_TOKEN_VALUE = 2;
    /**
     * <pre>
     * Cryptographer needs passphrase.
     * </pre>
     *
     * <code>PASSPHRASE_REQUIRED = 3;</code>
     */
    public static final int PASSPHRASE_REQUIRED_VALUE = 3;
    /**
     * <pre>
     * Passphrase was accepted by cryptographer.
     * </pre>
     *
     * <code>PASSPHRASE_ACCEPTED = 4;</code>
     */
    public static final int PASSPHRASE_ACCEPTED_VALUE = 4;
    /**
     * <pre>
     * Sync Initialization is complete.
     * </pre>
     *
     * <code>INITIALIZATION_COMPLETE = 5;</code>
     */
    public static final int INITIALIZATION_COMPLETE_VALUE = 5;
    /**
     * <pre>
     * Server sent stop syncing permanently. This event should never be seen by
     * the server in the absence of bugs.
     * </pre>
     *
     * <code>STOP_SYNCING_PERMANENTLY = 6;</code>
     */
    public static final int STOP_SYNCING_PERMANENTLY_VALUE = 6;
    /**
     * <pre>
     * Client has finished encrypting all data.
     * </pre>
     *
     * <code>ENCRYPTION_COMPLETE = 7;</code>
     */
    public static final int ENCRYPTION_COMPLETE_VALUE = 7;
    /**
     * <pre>
     * Client received an actionable error.
     * </pre>
     *
     * <code>ACTIONABLE_ERROR = 8;</code>
     */
    public static final int ACTIONABLE_ERROR_VALUE = 8;
    /**
     * <pre>
     * Set of encrypted types has changed.
     * </pre>
     *
     * <code>ENCRYPTED_TYPES_CHANGED = 9;</code>
     */
    public static final int ENCRYPTED_TYPES_CHANGED_VALUE = 9;
    /**
     * <pre>
     * The encryption passphrase state changed.
     * </pre>
     *
     * <code>PASSPHRASE_TYPE_CHANGED = 10;</code>
     */
    public static final int PASSPHRASE_TYPE_CHANGED_VALUE = 10;
    /**
     * <pre>
     * A new keystore encryption token was persisted.
     * </pre>
     *
     * <code>KEYSTORE_TOKEN_UPDATED = 11;</code>
     */
    public static final int KEYSTORE_TOKEN_UPDATED_VALUE = 11;
    /**
     * <pre>
     * The datatype manager has finished an at least partially successful
     * configuration and is once again syncing with the server.
     * </pre>
     *
     * <code>CONFIGURE_COMPLETE = 12;</code>
     */
    public static final int CONFIGURE_COMPLETE_VALUE = 12;
    /**
     * <pre>
     * A new cryptographer bootstrap token was generated.
     * </pre>
     *
     * <code>BOOTSTRAP_TOKEN_UPDATED = 13;</code>
     */
    public static final int BOOTSTRAP_TOKEN_UPDATED_VALUE = 13;
    /**
     * <pre>
     * Cryptographer needs trusted vault decryption keys.
     * </pre>
     *
     * <code>TRUSTED_VAULT_KEY_REQUIRED = 14;</code>
     */
    public static final int TRUSTED_VAULT_KEY_REQUIRED_VALUE = 14;
    /**
     * <pre>
     * Cryptographer no longer needs trusted vault decryption keys.
     * </pre>
     *
     * <code>TRUSTED_VAULT_KEY_ACCEPTED = 15;</code>
     */
    public static final int TRUSTED_VAULT_KEY_ACCEPTED_VALUE = 15;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SingletonDebugEventType valueOf(int value) {
      return forNumber(value);
    }

    public static SingletonDebugEventType forNumber(int value) {
      switch (value) {
        case 1: return CONNECTION_STATUS_CHANGE;
        case 2: return UPDATED_TOKEN;
        case 3: return PASSPHRASE_REQUIRED;
        case 4: return PASSPHRASE_ACCEPTED;
        case 5: return INITIALIZATION_COMPLETE;
        case 6: return STOP_SYNCING_PERMANENTLY;
        case 7: return ENCRYPTION_COMPLETE;
        case 8: return ACTIONABLE_ERROR;
        case 9: return ENCRYPTED_TYPES_CHANGED;
        case 10: return PASSPHRASE_TYPE_CHANGED;
        case 11: return KEYSTORE_TOKEN_UPDATED;
        case 12: return CONFIGURE_COMPLETE;
        case 13: return BOOTSTRAP_TOKEN_UPDATED;
        case 14: return TRUSTED_VAULT_KEY_REQUIRED;
        case 15: return TRUSTED_VAULT_KEY_ACCEPTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SingletonDebugEventType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SingletonDebugEventType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SingletonDebugEventType>() {
            public SingletonDebugEventType findValueByNumber(int number) {
              return SingletonDebugEventType.forNumber(number);
            }
          };

    private final int value;

    private SingletonDebugEventType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.SyncEnums.SingletonDebugEventType)
  }

  /**
   * <pre>
   * Types of transitions between pages.
   * </pre>
   *
   * Protobuf enum {@code sync_pb.SyncEnums.PageTransition}
   */
  public enum PageTransition
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>LINK = 0;</code>
     */
    LINK(0),
    /**
     * <code>TYPED = 1;</code>
     */
    TYPED(1),
    /**
     * <code>AUTO_BOOKMARK = 2;</code>
     */
    AUTO_BOOKMARK(2),
    /**
     * <code>AUTO_SUBFRAME = 3;</code>
     */
    AUTO_SUBFRAME(3),
    /**
     * <code>MANUAL_SUBFRAME = 4;</code>
     */
    MANUAL_SUBFRAME(4),
    /**
     * <code>GENERATED = 5;</code>
     */
    GENERATED(5),
    /**
     * <code>AUTO_TOPLEVEL = 6;</code>
     */
    AUTO_TOPLEVEL(6),
    /**
     * <code>FORM_SUBMIT = 7;</code>
     */
    FORM_SUBMIT(7),
    /**
     * <code>RELOAD = 8;</code>
     */
    RELOAD(8),
    /**
     * <code>KEYWORD = 9;</code>
     */
    KEYWORD(9),
    /**
     * <pre>
     * The below two were mistakenly added but never properly used. They are
     * actually transition qualifiers, and are set independently of other
     * qualifiers and of the main transitions. See session_specifics.proto for
     * the list of synced transition qualifiers.
     * CHAIN_START = 12;     Deprecated.
     * CHAIN_END = 13;       Deprecated.
     * </pre>
     *
     * <code>KEYWORD_GENERATED = 10;</code>
     */
    KEYWORD_GENERATED(10),
    ;

    /**
     * <code>LINK = 0;</code>
     */
    public static final int LINK_VALUE = 0;
    /**
     * <code>TYPED = 1;</code>
     */
    public static final int TYPED_VALUE = 1;
    /**
     * <code>AUTO_BOOKMARK = 2;</code>
     */
    public static final int AUTO_BOOKMARK_VALUE = 2;
    /**
     * <code>AUTO_SUBFRAME = 3;</code>
     */
    public static final int AUTO_SUBFRAME_VALUE = 3;
    /**
     * <code>MANUAL_SUBFRAME = 4;</code>
     */
    public static final int MANUAL_SUBFRAME_VALUE = 4;
    /**
     * <code>GENERATED = 5;</code>
     */
    public static final int GENERATED_VALUE = 5;
    /**
     * <code>AUTO_TOPLEVEL = 6;</code>
     */
    public static final int AUTO_TOPLEVEL_VALUE = 6;
    /**
     * <code>FORM_SUBMIT = 7;</code>
     */
    public static final int FORM_SUBMIT_VALUE = 7;
    /**
     * <code>RELOAD = 8;</code>
     */
    public static final int RELOAD_VALUE = 8;
    /**
     * <code>KEYWORD = 9;</code>
     */
    public static final int KEYWORD_VALUE = 9;
    /**
     * <pre>
     * The below two were mistakenly added but never properly used. They are
     * actually transition qualifiers, and are set independently of other
     * qualifiers and of the main transitions. See session_specifics.proto for
     * the list of synced transition qualifiers.
     * CHAIN_START = 12;     Deprecated.
     * CHAIN_END = 13;       Deprecated.
     * </pre>
     *
     * <code>KEYWORD_GENERATED = 10;</code>
     */
    public static final int KEYWORD_GENERATED_VALUE = 10;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PageTransition valueOf(int value) {
      return forNumber(value);
    }

    public static PageTransition forNumber(int value) {
      switch (value) {
        case 0: return LINK;
        case 1: return TYPED;
        case 2: return AUTO_BOOKMARK;
        case 3: return AUTO_SUBFRAME;
        case 4: return MANUAL_SUBFRAME;
        case 5: return GENERATED;
        case 6: return AUTO_TOPLEVEL;
        case 7: return FORM_SUBMIT;
        case 8: return RELOAD;
        case 9: return KEYWORD;
        case 10: return KEYWORD_GENERATED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PageTransition>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PageTransition> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PageTransition>() {
            public PageTransition findValueByNumber(int number) {
              return PageTransition.forNumber(number);
            }
          };

    private final int value;

    private PageTransition(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.SyncEnums.PageTransition)
  }

  /**
   * <pre>
   * Types of redirects that triggered a transition.
   * </pre>
   *
   * Protobuf enum {@code sync_pb.SyncEnums.PageTransitionRedirectType}
   */
  public enum PageTransitionRedirectType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CLIENT_REDIRECT = 1;</code>
     */
    CLIENT_REDIRECT(1),
    /**
     * <code>SERVER_REDIRECT = 2;</code>
     */
    SERVER_REDIRECT(2),
    ;

    /**
     * <code>CLIENT_REDIRECT = 1;</code>
     */
    public static final int CLIENT_REDIRECT_VALUE = 1;
    /**
     * <code>SERVER_REDIRECT = 2;</code>
     */
    public static final int SERVER_REDIRECT_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PageTransitionRedirectType valueOf(int value) {
      return forNumber(value);
    }

    public static PageTransitionRedirectType forNumber(int value) {
      switch (value) {
        case 1: return CLIENT_REDIRECT;
        case 2: return SERVER_REDIRECT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PageTransitionRedirectType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PageTransitionRedirectType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PageTransitionRedirectType>() {
            public PageTransitionRedirectType findValueByNumber(int number) {
              return PageTransitionRedirectType.forNumber(number);
            }
          };

    private final int value;

    private PageTransitionRedirectType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.SyncEnums.PageTransitionRedirectType)
  }

  /**
   * Protobuf enum {@code sync_pb.SyncEnums.ErrorType}
   */
  public enum ErrorType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>SUCCESS = 0;</code>
     */
    SUCCESS(0),
    /**
     * <code>DEPRECATED_ACCESS_DENIED = 1;</code>
     */
    DEPRECATED_ACCESS_DENIED(1),
    /**
     * <pre>
     * Returned when the server and client disagree
     * </pre>
     *
     * <code>NOT_MY_BIRTHDAY = 2;</code>
     */
    NOT_MY_BIRTHDAY(2),
    /**
     * <pre>
     * on the store birthday.
     * </pre>
     *
     * <code>THROTTLED = 3;</code>
     */
    THROTTLED(3),
    /**
     * <pre>
     * allowed bandwidth utilization.
     * </pre>
     *
     * <code>DEPRECATED_AUTH_EXPIRED = 4;</code>
     */
    DEPRECATED_AUTH_EXPIRED(4),
    /**
     * <code>DEPRECATED_USER_NOT_ACTIVATED = 5;</code>
     */
    DEPRECATED_USER_NOT_ACTIVATED(5),
    /**
     * <code>DEPRECATED_AUTH_INVALID = 6;</code>
     */
    DEPRECATED_AUTH_INVALID(6),
    /**
     * <pre>
     * A clear of the user data is pending (e.g.
     * </pre>
     *
     * <code>CLEAR_PENDING = 7;</code>
     */
    CLEAR_PENDING(7),
    /**
     * <pre>
     * initiated by privacy request).  Client should
     * come back later.
     * </pre>
     *
     * <code>TRANSIENT_ERROR = 8;</code>
     */
    TRANSIENT_ERROR(8),
    /**
     * <pre>
     * timeout). Client should try again later.
     * </pre>
     *
     * <code>MIGRATION_DONE = 9;</code>
     */
    MIGRATION_DONE(9),
    /**
     * <pre>
     * types.  Client should clear the cache for
     * these data types only and then re-sync with
     * a server.
     * </pre>
     *
     * <code>DISABLED_BY_ADMIN = 10;</code>
     */
    DISABLED_BY_ADMIN(10),
    /**
     * <pre>
     * domain.
     * </pre>
     *
     * <code>DEPRECATED_USER_ROLLBACK = 11;</code>
     */
    DEPRECATED_USER_ROLLBACK(11),
    /**
     * <pre>
     * Return when client want to update several
     * </pre>
     *
     * <code>PARTIAL_FAILURE = 12;</code>
     */
    PARTIAL_FAILURE(12),
    /**
     * <pre>
     * data types, but some of them failed(e.g.
     * throttled).
     * </pre>
     *
     * <code>CLIENT_DATA_OBSOLETE = 13;</code>
     */
    CLIENT_DATA_OBSOLETE(13),
    /**
     * <pre>
     * client's data is obsolete. Client should
     * reset local data and restart syncing.
     * </pre>
     *
     * <code>UNKNOWN = 100;</code>
     */
    UNKNOWN(100),
    ;

    /**
     * <code>SUCCESS = 0;</code>
     */
    public static final int SUCCESS_VALUE = 0;
    /**
     * <code>DEPRECATED_ACCESS_DENIED = 1;</code>
     */
    public static final int DEPRECATED_ACCESS_DENIED_VALUE = 1;
    /**
     * <pre>
     * Returned when the server and client disagree
     * </pre>
     *
     * <code>NOT_MY_BIRTHDAY = 2;</code>
     */
    public static final int NOT_MY_BIRTHDAY_VALUE = 2;
    /**
     * <pre>
     * on the store birthday.
     * </pre>
     *
     * <code>THROTTLED = 3;</code>
     */
    public static final int THROTTLED_VALUE = 3;
    /**
     * <pre>
     * allowed bandwidth utilization.
     * </pre>
     *
     * <code>DEPRECATED_AUTH_EXPIRED = 4;</code>
     */
    public static final int DEPRECATED_AUTH_EXPIRED_VALUE = 4;
    /**
     * <code>DEPRECATED_USER_NOT_ACTIVATED = 5;</code>
     */
    public static final int DEPRECATED_USER_NOT_ACTIVATED_VALUE = 5;
    /**
     * <code>DEPRECATED_AUTH_INVALID = 6;</code>
     */
    public static final int DEPRECATED_AUTH_INVALID_VALUE = 6;
    /**
     * <pre>
     * A clear of the user data is pending (e.g.
     * </pre>
     *
     * <code>CLEAR_PENDING = 7;</code>
     */
    public static final int CLEAR_PENDING_VALUE = 7;
    /**
     * <pre>
     * initiated by privacy request).  Client should
     * come back later.
     * </pre>
     *
     * <code>TRANSIENT_ERROR = 8;</code>
     */
    public static final int TRANSIENT_ERROR_VALUE = 8;
    /**
     * <pre>
     * timeout). Client should try again later.
     * </pre>
     *
     * <code>MIGRATION_DONE = 9;</code>
     */
    public static final int MIGRATION_DONE_VALUE = 9;
    /**
     * <pre>
     * types.  Client should clear the cache for
     * these data types only and then re-sync with
     * a server.
     * </pre>
     *
     * <code>DISABLED_BY_ADMIN = 10;</code>
     */
    public static final int DISABLED_BY_ADMIN_VALUE = 10;
    /**
     * <pre>
     * domain.
     * </pre>
     *
     * <code>DEPRECATED_USER_ROLLBACK = 11;</code>
     */
    public static final int DEPRECATED_USER_ROLLBACK_VALUE = 11;
    /**
     * <pre>
     * Return when client want to update several
     * </pre>
     *
     * <code>PARTIAL_FAILURE = 12;</code>
     */
    public static final int PARTIAL_FAILURE_VALUE = 12;
    /**
     * <pre>
     * data types, but some of them failed(e.g.
     * throttled).
     * </pre>
     *
     * <code>CLIENT_DATA_OBSOLETE = 13;</code>
     */
    public static final int CLIENT_DATA_OBSOLETE_VALUE = 13;
    /**
     * <pre>
     * client's data is obsolete. Client should
     * reset local data and restart syncing.
     * </pre>
     *
     * <code>UNKNOWN = 100;</code>
     */
    public static final int UNKNOWN_VALUE = 100;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErrorType valueOf(int value) {
      return forNumber(value);
    }

    public static ErrorType forNumber(int value) {
      switch (value) {
        case 0: return SUCCESS;
        case 1: return DEPRECATED_ACCESS_DENIED;
        case 2: return NOT_MY_BIRTHDAY;
        case 3: return THROTTLED;
        case 4: return DEPRECATED_AUTH_EXPIRED;
        case 5: return DEPRECATED_USER_NOT_ACTIVATED;
        case 6: return DEPRECATED_AUTH_INVALID;
        case 7: return CLEAR_PENDING;
        case 8: return TRANSIENT_ERROR;
        case 9: return MIGRATION_DONE;
        case 10: return DISABLED_BY_ADMIN;
        case 11: return DEPRECATED_USER_ROLLBACK;
        case 12: return PARTIAL_FAILURE;
        case 13: return CLIENT_DATA_OBSOLETE;
        case 100: return UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErrorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorType>() {
            public ErrorType findValueByNumber(int number) {
              return ErrorType.forNumber(number);
            }
          };

    private final int value;

    private ErrorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.SyncEnums.ErrorType)
  }

  /**
   * Protobuf enum {@code sync_pb.SyncEnums.Action}
   */
  public enum Action
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Upgrade the client to latest version.
     * </pre>
     *
     * <code>UPGRADE_CLIENT = 0;</code>
     */
    UPGRADE_CLIENT(0),
    /**
     * <code>DEPRECATED_CLEAR_USER_DATA_AND_RESYNC = 1;</code>
     */
    DEPRECATED_CLEAR_USER_DATA_AND_RESYNC(1),
    /**
     * <code>DEPRECATED_ENABLE_SYNC_ON_ACCOUNT = 2;</code>
     */
    DEPRECATED_ENABLE_SYNC_ON_ACCOUNT(2),
    /**
     * <code>DEPRECATED_STOP_AND_RESTART_SYNC = 3;</code>
     */
    DEPRECATED_STOP_AND_RESTART_SYNC(3),
    /**
     * <code>DEPRECATED_DISABLE_SYNC_ON_CLIENT = 4;</code>
     */
    DEPRECATED_DISABLE_SYNC_ON_CLIENT(4),
    /**
     * <pre>
     * This is the default.
     * </pre>
     *
     * <code>UNKNOWN_ACTION = 5;</code>
     */
    UNKNOWN_ACTION(5),
    ;

    /**
     * <pre>
     * Upgrade the client to latest version.
     * </pre>
     *
     * <code>UPGRADE_CLIENT = 0;</code>
     */
    public static final int UPGRADE_CLIENT_VALUE = 0;
    /**
     * <code>DEPRECATED_CLEAR_USER_DATA_AND_RESYNC = 1;</code>
     */
    public static final int DEPRECATED_CLEAR_USER_DATA_AND_RESYNC_VALUE = 1;
    /**
     * <code>DEPRECATED_ENABLE_SYNC_ON_ACCOUNT = 2;</code>
     */
    public static final int DEPRECATED_ENABLE_SYNC_ON_ACCOUNT_VALUE = 2;
    /**
     * <code>DEPRECATED_STOP_AND_RESTART_SYNC = 3;</code>
     */
    public static final int DEPRECATED_STOP_AND_RESTART_SYNC_VALUE = 3;
    /**
     * <code>DEPRECATED_DISABLE_SYNC_ON_CLIENT = 4;</code>
     */
    public static final int DEPRECATED_DISABLE_SYNC_ON_CLIENT_VALUE = 4;
    /**
     * <pre>
     * This is the default.
     * </pre>
     *
     * <code>UNKNOWN_ACTION = 5;</code>
     */
    public static final int UNKNOWN_ACTION_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Action valueOf(int value) {
      return forNumber(value);
    }

    public static Action forNumber(int value) {
      switch (value) {
        case 0: return UPGRADE_CLIENT;
        case 1: return DEPRECATED_CLEAR_USER_DATA_AND_RESYNC;
        case 2: return DEPRECATED_ENABLE_SYNC_ON_ACCOUNT;
        case 3: return DEPRECATED_STOP_AND_RESTART_SYNC;
        case 4: return DEPRECATED_DISABLE_SYNC_ON_CLIENT;
        case 5: return UNKNOWN_ACTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Action>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Action> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Action>() {
            public Action findValueByNumber(int number) {
              return Action.forNumber(number);
            }
          };

    private final int value;

    private Action(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.SyncEnums.Action)
  }

  /**
   * <pre>
   * Please keep in sync with chrome/android/java/.../ForeignSessionHelper.java
   * </pre>
   *
   * Protobuf enum {@code sync_pb.SyncEnums.DeviceType}
   */
  public enum DeviceType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_UNSET = 0;</code>
     */
    TYPE_UNSET(0),
    /**
     * <code>TYPE_WIN = 1;</code>
     */
    TYPE_WIN(1),
    /**
     * <code>TYPE_MAC = 2;</code>
     */
    TYPE_MAC(2),
    /**
     * <code>TYPE_LINUX = 3;</code>
     */
    TYPE_LINUX(3),
    /**
     * <code>TYPE_CROS = 4;</code>
     */
    TYPE_CROS(4),
    /**
     * <code>TYPE_OTHER = 5;</code>
     */
    TYPE_OTHER(5),
    /**
     * <code>TYPE_PHONE = 6;</code>
     */
    TYPE_PHONE(6),
    /**
     * <code>TYPE_TABLET = 7;</code>
     */
    TYPE_TABLET(7),
    ;

    /**
     * <code>TYPE_UNSET = 0;</code>
     */
    public static final int TYPE_UNSET_VALUE = 0;
    /**
     * <code>TYPE_WIN = 1;</code>
     */
    public static final int TYPE_WIN_VALUE = 1;
    /**
     * <code>TYPE_MAC = 2;</code>
     */
    public static final int TYPE_MAC_VALUE = 2;
    /**
     * <code>TYPE_LINUX = 3;</code>
     */
    public static final int TYPE_LINUX_VALUE = 3;
    /**
     * <code>TYPE_CROS = 4;</code>
     */
    public static final int TYPE_CROS_VALUE = 4;
    /**
     * <code>TYPE_OTHER = 5;</code>
     */
    public static final int TYPE_OTHER_VALUE = 5;
    /**
     * <code>TYPE_PHONE = 6;</code>
     */
    public static final int TYPE_PHONE_VALUE = 6;
    /**
     * <code>TYPE_TABLET = 7;</code>
     */
    public static final int TYPE_TABLET_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeviceType valueOf(int value) {
      return forNumber(value);
    }

    public static DeviceType forNumber(int value) {
      switch (value) {
        case 0: return TYPE_UNSET;
        case 1: return TYPE_WIN;
        case 2: return TYPE_MAC;
        case 3: return TYPE_LINUX;
        case 4: return TYPE_CROS;
        case 5: return TYPE_OTHER;
        case 6: return TYPE_PHONE;
        case 7: return TYPE_TABLET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeviceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceType>() {
            public DeviceType findValueByNumber(int number) {
              return DeviceType.forNumber(number);
            }
          };

    private final int value;

    private DeviceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.SyncEnums.DeviceType)
  }

  /**
   * <pre>
   * This is the successor to GetUpdatesSource.  It merges the "normal mode"
   * values (LOCAL, NOTIFICATION and DATATYPE_REFRESH), which were never really
   * mutually exclusive to being with, into the GU_TRIGGER value.  It also
   * drops support for some old values that are not supported by newer clients.
   * Mind the gaps: Some values are intentionally unused because we want to
   * keep the values in sync with GetUpdatesSource as much as possible.  Please
   * don't add any values &lt; 12 unless there's a good reason for it.
   * Introduced in M28.
   * </pre>
   *
   * Protobuf enum {@code sync_pb.SyncEnums.GetUpdatesOrigin}
   */
  public enum GetUpdatesOrigin
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * The source was not set by the caller.
     * </pre>
     *
     * <code>UNKNOWN_ORIGIN = 0;</code>
     */
    UNKNOWN_ORIGIN(0),
    /**
     * <pre>
     * The source of the update was periodic polling.
     * </pre>
     *
     * <code>PERIODIC = 4;</code>
     */
    PERIODIC(4),
    /**
     * <pre>
     * The client is in configuration mode
     * </pre>
     *
     * <code>NEWLY_SUPPORTED_DATATYPE = 7;</code>
     */
    NEWLY_SUPPORTED_DATATYPE(7),
    /**
     * <pre>
     * because it's syncing all datatypes, and
     * support for a new datatype was recently
     * released via a software auto-update.
     * </pre>
     *
     * <code>MIGRATION = 8;</code>
     */
    MIGRATION(8),
    /**
     * <pre>
     * MIGRATION_DONE error previously returned by the
     * server necessitated resynchronization.
     * </pre>
     *
     * <code>NEW_CLIENT = 9;</code>
     */
    NEW_CLIENT(9),
    /**
     * <pre>
     * user enabled sync for the first time.  Not to be
     * confused with FIRST_UPDATE.
     * </pre>
     *
     * <code>RECONFIGURATION = 10;</code>
     */
    RECONFIGURATION(10),
    /**
     * <pre>
     * user opted to sync a different set of datatypes.
     * </pre>
     *
     * <code>GU_TRIGGER = 12;</code>
     */
    GU_TRIGGER(12),
    /**
     * <pre>
     * reasons for requesting an update.  See the per-type
     * GetUpdateTriggers message for more details.
     * </pre>
     *
     * <code>RETRY = 13;</code>
     */
    RETRY(13),
    /**
     * <pre>
     * replication delay, missing hints, etc.
     * </pre>
     *
     * <code>PROGRAMMATIC = 14;</code>
     */
    PROGRAMMATIC(14),
    ;

    /**
     * <pre>
     * The source was not set by the caller.
     * </pre>
     *
     * <code>UNKNOWN_ORIGIN = 0;</code>
     */
    public static final int UNKNOWN_ORIGIN_VALUE = 0;
    /**
     * <pre>
     * The source of the update was periodic polling.
     * </pre>
     *
     * <code>PERIODIC = 4;</code>
     */
    public static final int PERIODIC_VALUE = 4;
    /**
     * <pre>
     * The client is in configuration mode
     * </pre>
     *
     * <code>NEWLY_SUPPORTED_DATATYPE = 7;</code>
     */
    public static final int NEWLY_SUPPORTED_DATATYPE_VALUE = 7;
    /**
     * <pre>
     * because it's syncing all datatypes, and
     * support for a new datatype was recently
     * released via a software auto-update.
     * </pre>
     *
     * <code>MIGRATION = 8;</code>
     */
    public static final int MIGRATION_VALUE = 8;
    /**
     * <pre>
     * MIGRATION_DONE error previously returned by the
     * server necessitated resynchronization.
     * </pre>
     *
     * <code>NEW_CLIENT = 9;</code>
     */
    public static final int NEW_CLIENT_VALUE = 9;
    /**
     * <pre>
     * user enabled sync for the first time.  Not to be
     * confused with FIRST_UPDATE.
     * </pre>
     *
     * <code>RECONFIGURATION = 10;</code>
     */
    public static final int RECONFIGURATION_VALUE = 10;
    /**
     * <pre>
     * user opted to sync a different set of datatypes.
     * </pre>
     *
     * <code>GU_TRIGGER = 12;</code>
     */
    public static final int GU_TRIGGER_VALUE = 12;
    /**
     * <pre>
     * reasons for requesting an update.  See the per-type
     * GetUpdateTriggers message for more details.
     * </pre>
     *
     * <code>RETRY = 13;</code>
     */
    public static final int RETRY_VALUE = 13;
    /**
     * <pre>
     * replication delay, missing hints, etc.
     * </pre>
     *
     * <code>PROGRAMMATIC = 14;</code>
     */
    public static final int PROGRAMMATIC_VALUE = 14;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GetUpdatesOrigin valueOf(int value) {
      return forNumber(value);
    }

    public static GetUpdatesOrigin forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ORIGIN;
        case 4: return PERIODIC;
        case 7: return NEWLY_SUPPORTED_DATATYPE;
        case 8: return MIGRATION;
        case 9: return NEW_CLIENT;
        case 10: return RECONFIGURATION;
        case 12: return GU_TRIGGER;
        case 13: return RETRY;
        case 14: return PROGRAMMATIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GetUpdatesOrigin>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GetUpdatesOrigin> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GetUpdatesOrigin>() {
            public GetUpdatesOrigin findValueByNumber(int number) {
              return GetUpdatesOrigin.forNumber(number);
            }
          };

    private final int value;

    private GetUpdatesOrigin(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.SyncEnums.GetUpdatesOrigin)
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.SyncEnums parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SyncEnums parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SyncEnums parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SyncEnums parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SyncEnums parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SyncEnums parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SyncEnums parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SyncEnums parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SyncEnums parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SyncEnums parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.SyncEnums prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.SyncEnums}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.SyncEnums, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.SyncEnums)
      org.chromium.components.sync.protocol.SyncEnumsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.SyncEnums.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    // @@protoc_insertion_point(builder_scope:sync_pb.SyncEnums)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.SyncEnums();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.SyncEnums other = (org.chromium.components.sync.protocol.SyncEnums) arg1;
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.SyncEnums.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.SyncEnums)
  private static final org.chromium.components.sync.protocol.SyncEnums DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SyncEnums();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.SyncEnums getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SyncEnums> PARSER;

  public static com.google.protobuf.Parser<SyncEnums> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

