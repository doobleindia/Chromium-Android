// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: history_delete_directive_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.GlobalIdDirective}
 */
public  final class GlobalIdDirective extends
    com.google.protobuf.GeneratedMessageLite<
        GlobalIdDirective, GlobalIdDirective.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.GlobalIdDirective)
    GlobalIdDirectiveOrBuilder {
  private GlobalIdDirective() {
    globalId_ = emptyLongList();
  }
  private int bitField0_;
  public static final int GLOBAL_ID_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.LongList globalId_;
  /**
   * <pre>
   * The global IDs of the navigations to delete.
   * </pre>
   *
   * <code>repeated int64 global_id = 1;</code>
   */
  public java.util.List<java.lang.Long>
      getGlobalIdList() {
    return globalId_;
  }
  /**
   * <pre>
   * The global IDs of the navigations to delete.
   * </pre>
   *
   * <code>repeated int64 global_id = 1;</code>
   */
  public int getGlobalIdCount() {
    return globalId_.size();
  }
  /**
   * <pre>
   * The global IDs of the navigations to delete.
   * </pre>
   *
   * <code>repeated int64 global_id = 1;</code>
   */
  public long getGlobalId(int index) {
    return globalId_.getLong(index);
  }
  private void ensureGlobalIdIsMutable() {
    if (!globalId_.isModifiable()) {
      globalId_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(globalId_);
     }
  }
  /**
   * <pre>
   * The global IDs of the navigations to delete.
   * </pre>
   *
   * <code>repeated int64 global_id = 1;</code>
   */
  private void setGlobalId(
      int index, long value) {
    ensureGlobalIdIsMutable();
    globalId_.setLong(index, value);
  }
  /**
   * <pre>
   * The global IDs of the navigations to delete.
   * </pre>
   *
   * <code>repeated int64 global_id = 1;</code>
   */
  private void addGlobalId(long value) {
    ensureGlobalIdIsMutable();
    globalId_.addLong(value);
  }
  /**
   * <pre>
   * The global IDs of the navigations to delete.
   * </pre>
   *
   * <code>repeated int64 global_id = 1;</code>
   */
  private void addAllGlobalId(
      java.lang.Iterable<? extends java.lang.Long> values) {
    ensureGlobalIdIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, globalId_);
  }
  /**
   * <pre>
   * The global IDs of the navigations to delete.
   * </pre>
   *
   * <code>repeated int64 global_id = 1;</code>
   */
  private void clearGlobalId() {
    globalId_ = emptyLongList();
  }

  public static final int START_TIME_USEC_FIELD_NUMBER = 2;
  private long startTimeUsec_;
  /**
   * <pre>
   * Time range for searching for navigations to delete. Client should delete
   * all navigations to a URL between [start_time_usec, end_time_usec]
   * if one of them matches a |global_id|.
   * </pre>
   *
   * <code>optional int64 start_time_usec = 2;</code>
   */
  public boolean hasStartTimeUsec() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Time range for searching for navigations to delete. Client should delete
   * all navigations to a URL between [start_time_usec, end_time_usec]
   * if one of them matches a |global_id|.
   * </pre>
   *
   * <code>optional int64 start_time_usec = 2;</code>
   */
  public long getStartTimeUsec() {
    return startTimeUsec_;
  }
  /**
   * <pre>
   * Time range for searching for navigations to delete. Client should delete
   * all navigations to a URL between [start_time_usec, end_time_usec]
   * if one of them matches a |global_id|.
   * </pre>
   *
   * <code>optional int64 start_time_usec = 2;</code>
   */
  private void setStartTimeUsec(long value) {
    bitField0_ |= 0x00000001;
    startTimeUsec_ = value;
  }
  /**
   * <pre>
   * Time range for searching for navigations to delete. Client should delete
   * all navigations to a URL between [start_time_usec, end_time_usec]
   * if one of them matches a |global_id|.
   * </pre>
   *
   * <code>optional int64 start_time_usec = 2;</code>
   */
  private void clearStartTimeUsec() {
    bitField0_ = (bitField0_ & ~0x00000001);
    startTimeUsec_ = 0L;
  }

  public static final int END_TIME_USEC_FIELD_NUMBER = 3;
  private long endTimeUsec_;
  /**
   * <code>optional int64 end_time_usec = 3;</code>
   */
  public boolean hasEndTimeUsec() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional int64 end_time_usec = 3;</code>
   */
  public long getEndTimeUsec() {
    return endTimeUsec_;
  }
  /**
   * <code>optional int64 end_time_usec = 3;</code>
   */
  private void setEndTimeUsec(long value) {
    bitField0_ |= 0x00000002;
    endTimeUsec_ = value;
  }
  /**
   * <code>optional int64 end_time_usec = 3;</code>
   */
  private void clearEndTimeUsec() {
    bitField0_ = (bitField0_ & ~0x00000002);
    endTimeUsec_ = 0L;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < globalId_.size(); i++) {
      output.writeInt64(1, globalId_.getLong(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(2, startTimeUsec_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt64(3, endTimeUsec_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < globalId_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(globalId_.getLong(i));
      }
      size += dataSize;
      size += 1 * getGlobalIdList().size();
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, startTimeUsec_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, endTimeUsec_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.GlobalIdDirective parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.GlobalIdDirective parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.GlobalIdDirective parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.GlobalIdDirective parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.GlobalIdDirective parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.GlobalIdDirective parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.GlobalIdDirective parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.GlobalIdDirective parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.GlobalIdDirective parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.GlobalIdDirective parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.GlobalIdDirective prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.GlobalIdDirective}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.GlobalIdDirective, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.GlobalIdDirective)
      org.chromium.components.sync.protocol.GlobalIdDirectiveOrBuilder {
    // Construct using org.chromium.components.sync.protocol.GlobalIdDirective.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The global IDs of the navigations to delete.
     * </pre>
     *
     * <code>repeated int64 global_id = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getGlobalIdList() {
      return java.util.Collections.unmodifiableList(
          instance.getGlobalIdList());
    }
    /**
     * <pre>
     * The global IDs of the navigations to delete.
     * </pre>
     *
     * <code>repeated int64 global_id = 1;</code>
     */
    public int getGlobalIdCount() {
      return instance.getGlobalIdCount();
    }
    /**
     * <pre>
     * The global IDs of the navigations to delete.
     * </pre>
     *
     * <code>repeated int64 global_id = 1;</code>
     */
    public long getGlobalId(int index) {
      return instance.getGlobalId(index);
    }
    /**
     * <pre>
     * The global IDs of the navigations to delete.
     * </pre>
     *
     * <code>repeated int64 global_id = 1;</code>
     */
    public Builder setGlobalId(
        int index, long value) {
      copyOnWrite();
      instance.setGlobalId(index, value);
      return this;
    }
    /**
     * <pre>
     * The global IDs of the navigations to delete.
     * </pre>
     *
     * <code>repeated int64 global_id = 1;</code>
     */
    public Builder addGlobalId(long value) {
      copyOnWrite();
      instance.addGlobalId(value);
      return this;
    }
    /**
     * <pre>
     * The global IDs of the navigations to delete.
     * </pre>
     *
     * <code>repeated int64 global_id = 1;</code>
     */
    public Builder addAllGlobalId(
        java.lang.Iterable<? extends java.lang.Long> values) {
      copyOnWrite();
      instance.addAllGlobalId(values);
      return this;
    }
    /**
     * <pre>
     * The global IDs of the navigations to delete.
     * </pre>
     *
     * <code>repeated int64 global_id = 1;</code>
     */
    public Builder clearGlobalId() {
      copyOnWrite();
      instance.clearGlobalId();
      return this;
    }

    /**
     * <pre>
     * Time range for searching for navigations to delete. Client should delete
     * all navigations to a URL between [start_time_usec, end_time_usec]
     * if one of them matches a |global_id|.
     * </pre>
     *
     * <code>optional int64 start_time_usec = 2;</code>
     */
    public boolean hasStartTimeUsec() {
      return instance.hasStartTimeUsec();
    }
    /**
     * <pre>
     * Time range for searching for navigations to delete. Client should delete
     * all navigations to a URL between [start_time_usec, end_time_usec]
     * if one of them matches a |global_id|.
     * </pre>
     *
     * <code>optional int64 start_time_usec = 2;</code>
     */
    public long getStartTimeUsec() {
      return instance.getStartTimeUsec();
    }
    /**
     * <pre>
     * Time range for searching for navigations to delete. Client should delete
     * all navigations to a URL between [start_time_usec, end_time_usec]
     * if one of them matches a |global_id|.
     * </pre>
     *
     * <code>optional int64 start_time_usec = 2;</code>
     */
    public Builder setStartTimeUsec(long value) {
      copyOnWrite();
      instance.setStartTimeUsec(value);
      return this;
    }
    /**
     * <pre>
     * Time range for searching for navigations to delete. Client should delete
     * all navigations to a URL between [start_time_usec, end_time_usec]
     * if one of them matches a |global_id|.
     * </pre>
     *
     * <code>optional int64 start_time_usec = 2;</code>
     */
    public Builder clearStartTimeUsec() {
      copyOnWrite();
      instance.clearStartTimeUsec();
      return this;
    }

    /**
     * <code>optional int64 end_time_usec = 3;</code>
     */
    public boolean hasEndTimeUsec() {
      return instance.hasEndTimeUsec();
    }
    /**
     * <code>optional int64 end_time_usec = 3;</code>
     */
    public long getEndTimeUsec() {
      return instance.getEndTimeUsec();
    }
    /**
     * <code>optional int64 end_time_usec = 3;</code>
     */
    public Builder setEndTimeUsec(long value) {
      copyOnWrite();
      instance.setEndTimeUsec(value);
      return this;
    }
    /**
     * <code>optional int64 end_time_usec = 3;</code>
     */
    public Builder clearEndTimeUsec() {
      copyOnWrite();
      instance.clearEndTimeUsec();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.GlobalIdDirective)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.GlobalIdDirective();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        globalId_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.GlobalIdDirective other = (org.chromium.components.sync.protocol.GlobalIdDirective) arg1;
        globalId_= visitor.visitLongList(globalId_, other.globalId_);
        startTimeUsec_ = visitor.visitLong(
            hasStartTimeUsec(), startTimeUsec_,
            other.hasStartTimeUsec(), other.startTimeUsec_);
        endTimeUsec_ = visitor.visitLong(
            hasEndTimeUsec(), endTimeUsec_,
            other.hasEndTimeUsec(), other.endTimeUsec_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 8: {
                if (!globalId_.isModifiable()) {
                  globalId_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(globalId_);
                }
                globalId_.addLong(input.readInt64());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!globalId_.isModifiable() && input.getBytesUntilLimit() > 0) {
                  globalId_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(globalId_);
                }
                while (input.getBytesUntilLimit() > 0) {
                  globalId_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              }
              case 16: {
                bitField0_ |= 0x00000001;
                startTimeUsec_ = input.readInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                endTimeUsec_ = input.readInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.GlobalIdDirective.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.GlobalIdDirective)
  private static final org.chromium.components.sync.protocol.GlobalIdDirective DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new GlobalIdDirective();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.GlobalIdDirective getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<GlobalIdDirective> PARSER;

  public static com.google.protobuf.Parser<GlobalIdDirective> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

