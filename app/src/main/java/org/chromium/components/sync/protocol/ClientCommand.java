// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_commands.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.ClientCommand}
 */
public  final class ClientCommand extends
    com.google.protobuf.GeneratedMessageLite<
        ClientCommand, ClientCommand.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ClientCommand)
    ClientCommandOrBuilder {
  private ClientCommand() {
    customNudgeDelays_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int SET_SYNC_POLL_INTERVAL_FIELD_NUMBER = 1;
  private int setSyncPollInterval_;
  /**
   * <pre>
   * Time to wait before sending any requests to the server.
   * </pre>
   *
   * <code>optional int32 set_sync_poll_interval = 1;</code>
   */
  public boolean hasSetSyncPollInterval() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Time to wait before sending any requests to the server.
   * </pre>
   *
   * <code>optional int32 set_sync_poll_interval = 1;</code>
   */
  public int getSetSyncPollInterval() {
    return setSyncPollInterval_;
  }
  /**
   * <pre>
   * Time to wait before sending any requests to the server.
   * </pre>
   *
   * <code>optional int32 set_sync_poll_interval = 1;</code>
   */
  private void setSetSyncPollInterval(int value) {
    bitField0_ |= 0x00000001;
    setSyncPollInterval_ = value;
  }
  /**
   * <pre>
   * Time to wait before sending any requests to the server.
   * </pre>
   *
   * <code>optional int32 set_sync_poll_interval = 1;</code>
   */
  private void clearSetSyncPollInterval() {
    bitField0_ = (bitField0_ & ~0x00000001);
    setSyncPollInterval_ = 0;
  }

  public static final int SET_SYNC_LONG_POLL_INTERVAL_FIELD_NUMBER = 2;
  private int setSyncLongPollInterval_;
  /**
   * <pre>
   * This has been deprecated since M75.
   * </pre>
   *
   * <code>optional int32 set_sync_long_poll_interval = 2 [deprecated = true];</code>
   */
  @java.lang.Deprecated public boolean hasSetSyncLongPollInterval() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * This has been deprecated since M75.
   * </pre>
   *
   * <code>optional int32 set_sync_long_poll_interval = 2 [deprecated = true];</code>
   */
  @java.lang.Deprecated public int getSetSyncLongPollInterval() {
    return setSyncLongPollInterval_;
  }
  /**
   * <pre>
   * This has been deprecated since M75.
   * </pre>
   *
   * <code>optional int32 set_sync_long_poll_interval = 2 [deprecated = true];</code>
   */
  private void setSetSyncLongPollInterval(int value) {
    bitField0_ |= 0x00000002;
    setSyncLongPollInterval_ = value;
  }
  /**
   * <pre>
   * This has been deprecated since M75.
   * </pre>
   *
   * <code>optional int32 set_sync_long_poll_interval = 2 [deprecated = true];</code>
   */
  private void clearSetSyncLongPollInterval() {
    bitField0_ = (bitField0_ & ~0x00000002);
    setSyncLongPollInterval_ = 0;
  }

  public static final int MAX_COMMIT_BATCH_SIZE_FIELD_NUMBER = 3;
  private int maxCommitBatchSize_;
  /**
   * <code>optional int32 max_commit_batch_size = 3;</code>
   */
  public boolean hasMaxCommitBatchSize() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional int32 max_commit_batch_size = 3;</code>
   */
  public int getMaxCommitBatchSize() {
    return maxCommitBatchSize_;
  }
  /**
   * <code>optional int32 max_commit_batch_size = 3;</code>
   */
  private void setMaxCommitBatchSize(int value) {
    bitField0_ |= 0x00000004;
    maxCommitBatchSize_ = value;
  }
  /**
   * <code>optional int32 max_commit_batch_size = 3;</code>
   */
  private void clearMaxCommitBatchSize() {
    bitField0_ = (bitField0_ & ~0x00000004);
    maxCommitBatchSize_ = 0;
  }

  public static final int SESSIONS_COMMIT_DELAY_SECONDS_FIELD_NUMBER = 4;
  private int sessionsCommitDelaySeconds_;
  /**
   * <pre>
   * Number of seconds to delay between a sessions action and sending a commit
   * message to the server. Can be overridden by |custom_nudge_delays|.
   * </pre>
   *
   * <code>optional int32 sessions_commit_delay_seconds = 4;</code>
   */
  public boolean hasSessionsCommitDelaySeconds() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * Number of seconds to delay between a sessions action and sending a commit
   * message to the server. Can be overridden by |custom_nudge_delays|.
   * </pre>
   *
   * <code>optional int32 sessions_commit_delay_seconds = 4;</code>
   */
  public int getSessionsCommitDelaySeconds() {
    return sessionsCommitDelaySeconds_;
  }
  /**
   * <pre>
   * Number of seconds to delay between a sessions action and sending a commit
   * message to the server. Can be overridden by |custom_nudge_delays|.
   * </pre>
   *
   * <code>optional int32 sessions_commit_delay_seconds = 4;</code>
   */
  private void setSessionsCommitDelaySeconds(int value) {
    bitField0_ |= 0x00000008;
    sessionsCommitDelaySeconds_ = value;
  }
  /**
   * <pre>
   * Number of seconds to delay between a sessions action and sending a commit
   * message to the server. Can be overridden by |custom_nudge_delays|.
   * </pre>
   *
   * <code>optional int32 sessions_commit_delay_seconds = 4;</code>
   */
  private void clearSessionsCommitDelaySeconds() {
    bitField0_ = (bitField0_ & ~0x00000008);
    sessionsCommitDelaySeconds_ = 0;
  }

  public static final int THROTTLE_DELAY_SECONDS_FIELD_NUMBER = 5;
  private int throttleDelaySeconds_;
  /**
   * <pre>
   * Number of seconds to delay before the throttled client should retry.
   * </pre>
   *
   * <code>optional int32 throttle_delay_seconds = 5;</code>
   */
  public boolean hasThrottleDelaySeconds() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * Number of seconds to delay before the throttled client should retry.
   * </pre>
   *
   * <code>optional int32 throttle_delay_seconds = 5;</code>
   */
  public int getThrottleDelaySeconds() {
    return throttleDelaySeconds_;
  }
  /**
   * <pre>
   * Number of seconds to delay before the throttled client should retry.
   * </pre>
   *
   * <code>optional int32 throttle_delay_seconds = 5;</code>
   */
  private void setThrottleDelaySeconds(int value) {
    bitField0_ |= 0x00000010;
    throttleDelaySeconds_ = value;
  }
  /**
   * <pre>
   * Number of seconds to delay before the throttled client should retry.
   * </pre>
   *
   * <code>optional int32 throttle_delay_seconds = 5;</code>
   */
  private void clearThrottleDelaySeconds() {
    bitField0_ = (bitField0_ & ~0x00000010);
    throttleDelaySeconds_ = 0;
  }

  public static final int CLIENT_INVALIDATION_HINT_BUFFER_SIZE_FIELD_NUMBER = 6;
  private int clientInvalidationHintBufferSize_;
  /**
   * <pre>
   * Maximum number of local nudges to buffer per-type.
   * </pre>
   *
   * <code>optional int32 client_invalidation_hint_buffer_size = 6;</code>
   */
  public boolean hasClientInvalidationHintBufferSize() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * Maximum number of local nudges to buffer per-type.
   * </pre>
   *
   * <code>optional int32 client_invalidation_hint_buffer_size = 6;</code>
   */
  public int getClientInvalidationHintBufferSize() {
    return clientInvalidationHintBufferSize_;
  }
  /**
   * <pre>
   * Maximum number of local nudges to buffer per-type.
   * </pre>
   *
   * <code>optional int32 client_invalidation_hint_buffer_size = 6;</code>
   */
  private void setClientInvalidationHintBufferSize(int value) {
    bitField0_ |= 0x00000020;
    clientInvalidationHintBufferSize_ = value;
  }
  /**
   * <pre>
   * Maximum number of local nudges to buffer per-type.
   * </pre>
   *
   * <code>optional int32 client_invalidation_hint_buffer_size = 6;</code>
   */
  private void clearClientInvalidationHintBufferSize() {
    bitField0_ = (bitField0_ & ~0x00000020);
    clientInvalidationHintBufferSize_ = 0;
  }

  public static final int GU_RETRY_DELAY_SECONDS_FIELD_NUMBER = 7;
  private int guRetryDelaySeconds_;
  /**
   * <pre>
   * Time to wait before issuing a retry GU.
   * </pre>
   *
   * <code>optional int32 gu_retry_delay_seconds = 7;</code>
   */
  public boolean hasGuRetryDelaySeconds() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   * Time to wait before issuing a retry GU.
   * </pre>
   *
   * <code>optional int32 gu_retry_delay_seconds = 7;</code>
   */
  public int getGuRetryDelaySeconds() {
    return guRetryDelaySeconds_;
  }
  /**
   * <pre>
   * Time to wait before issuing a retry GU.
   * </pre>
   *
   * <code>optional int32 gu_retry_delay_seconds = 7;</code>
   */
  private void setGuRetryDelaySeconds(int value) {
    bitField0_ |= 0x00000040;
    guRetryDelaySeconds_ = value;
  }
  /**
   * <pre>
   * Time to wait before issuing a retry GU.
   * </pre>
   *
   * <code>optional int32 gu_retry_delay_seconds = 7;</code>
   */
  private void clearGuRetryDelaySeconds() {
    bitField0_ = (bitField0_ & ~0x00000040);
    guRetryDelaySeconds_ = 0;
  }

  public static final int CUSTOM_NUDGE_DELAYS_FIELD_NUMBER = 8;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.CustomNudgeDelay> customNudgeDelays_;
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  public java.util.List<org.chromium.components.sync.protocol.CustomNudgeDelay> getCustomNudgeDelaysList() {
    return customNudgeDelays_;
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  public java.util.List<? extends org.chromium.components.sync.protocol.CustomNudgeDelayOrBuilder> 
      getCustomNudgeDelaysOrBuilderList() {
    return customNudgeDelays_;
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  public int getCustomNudgeDelaysCount() {
    return customNudgeDelays_.size();
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  public org.chromium.components.sync.protocol.CustomNudgeDelay getCustomNudgeDelays(int index) {
    return customNudgeDelays_.get(index);
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  public org.chromium.components.sync.protocol.CustomNudgeDelayOrBuilder getCustomNudgeDelaysOrBuilder(
      int index) {
    return customNudgeDelays_.get(index);
  }
  private void ensureCustomNudgeDelaysIsMutable() {
    if (!customNudgeDelays_.isModifiable()) {
      customNudgeDelays_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(customNudgeDelays_);
     }
  }

  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  private void setCustomNudgeDelays(
      int index, org.chromium.components.sync.protocol.CustomNudgeDelay value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureCustomNudgeDelaysIsMutable();
    customNudgeDelays_.set(index, value);
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  private void setCustomNudgeDelays(
      int index, org.chromium.components.sync.protocol.CustomNudgeDelay.Builder builderForValue) {
    ensureCustomNudgeDelaysIsMutable();
    customNudgeDelays_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  private void addCustomNudgeDelays(org.chromium.components.sync.protocol.CustomNudgeDelay value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureCustomNudgeDelaysIsMutable();
    customNudgeDelays_.add(value);
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  private void addCustomNudgeDelays(
      int index, org.chromium.components.sync.protocol.CustomNudgeDelay value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureCustomNudgeDelaysIsMutable();
    customNudgeDelays_.add(index, value);
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  private void addCustomNudgeDelays(
      org.chromium.components.sync.protocol.CustomNudgeDelay.Builder builderForValue) {
    ensureCustomNudgeDelaysIsMutable();
    customNudgeDelays_.add(builderForValue.build());
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  private void addCustomNudgeDelays(
      int index, org.chromium.components.sync.protocol.CustomNudgeDelay.Builder builderForValue) {
    ensureCustomNudgeDelaysIsMutable();
    customNudgeDelays_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  private void addAllCustomNudgeDelays(
      java.lang.Iterable<? extends org.chromium.components.sync.protocol.CustomNudgeDelay> values) {
    ensureCustomNudgeDelaysIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, customNudgeDelays_);
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  private void clearCustomNudgeDelays() {
    customNudgeDelays_ = emptyProtobufList();
  }
  /**
   * <pre>
   * A dictionary of custom nudge delays.
   * Note: if a SESSIONS value is present, this will override
   * |sessions_commit_delay_seconds|
   * New in M39.
   * </pre>
   *
   * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
   */
  private void removeCustomNudgeDelays(int index) {
    ensureCustomNudgeDelaysIsMutable();
    customNudgeDelays_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, setSyncPollInterval_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, setSyncLongPollInterval_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, maxCommitBatchSize_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, sessionsCommitDelaySeconds_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, throttleDelaySeconds_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, clientInvalidationHintBufferSize_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(7, guRetryDelaySeconds_);
    }
    for (int i = 0; i < customNudgeDelays_.size(); i++) {
      output.writeMessage(8, customNudgeDelays_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, setSyncPollInterval_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, setSyncLongPollInterval_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, maxCommitBatchSize_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, sessionsCommitDelaySeconds_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, throttleDelaySeconds_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, clientInvalidationHintBufferSize_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, guRetryDelaySeconds_);
    }
    for (int i = 0; i < customNudgeDelays_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, customNudgeDelays_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.ClientCommand parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientCommand parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientCommand parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientCommand parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientCommand parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientCommand parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientCommand parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientCommand parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientCommand parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientCommand parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ClientCommand prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.ClientCommand}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ClientCommand, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ClientCommand)
      org.chromium.components.sync.protocol.ClientCommandOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ClientCommand.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Time to wait before sending any requests to the server.
     * </pre>
     *
     * <code>optional int32 set_sync_poll_interval = 1;</code>
     */
    public boolean hasSetSyncPollInterval() {
      return instance.hasSetSyncPollInterval();
    }
    /**
     * <pre>
     * Time to wait before sending any requests to the server.
     * </pre>
     *
     * <code>optional int32 set_sync_poll_interval = 1;</code>
     */
    public int getSetSyncPollInterval() {
      return instance.getSetSyncPollInterval();
    }
    /**
     * <pre>
     * Time to wait before sending any requests to the server.
     * </pre>
     *
     * <code>optional int32 set_sync_poll_interval = 1;</code>
     */
    public Builder setSetSyncPollInterval(int value) {
      copyOnWrite();
      instance.setSetSyncPollInterval(value);
      return this;
    }
    /**
     * <pre>
     * Time to wait before sending any requests to the server.
     * </pre>
     *
     * <code>optional int32 set_sync_poll_interval = 1;</code>
     */
    public Builder clearSetSyncPollInterval() {
      copyOnWrite();
      instance.clearSetSyncPollInterval();
      return this;
    }

    /**
     * <pre>
     * This has been deprecated since M75.
     * </pre>
     *
     * <code>optional int32 set_sync_long_poll_interval = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasSetSyncLongPollInterval() {
      return instance.hasSetSyncLongPollInterval();
    }
    /**
     * <pre>
     * This has been deprecated since M75.
     * </pre>
     *
     * <code>optional int32 set_sync_long_poll_interval = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getSetSyncLongPollInterval() {
      return instance.getSetSyncLongPollInterval();
    }
    /**
     * <pre>
     * This has been deprecated since M75.
     * </pre>
     *
     * <code>optional int32 set_sync_long_poll_interval = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setSetSyncLongPollInterval(int value) {
      copyOnWrite();
      instance.setSetSyncLongPollInterval(value);
      return this;
    }
    /**
     * <pre>
     * This has been deprecated since M75.
     * </pre>
     *
     * <code>optional int32 set_sync_long_poll_interval = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearSetSyncLongPollInterval() {
      copyOnWrite();
      instance.clearSetSyncLongPollInterval();
      return this;
    }

    /**
     * <code>optional int32 max_commit_batch_size = 3;</code>
     */
    public boolean hasMaxCommitBatchSize() {
      return instance.hasMaxCommitBatchSize();
    }
    /**
     * <code>optional int32 max_commit_batch_size = 3;</code>
     */
    public int getMaxCommitBatchSize() {
      return instance.getMaxCommitBatchSize();
    }
    /**
     * <code>optional int32 max_commit_batch_size = 3;</code>
     */
    public Builder setMaxCommitBatchSize(int value) {
      copyOnWrite();
      instance.setMaxCommitBatchSize(value);
      return this;
    }
    /**
     * <code>optional int32 max_commit_batch_size = 3;</code>
     */
    public Builder clearMaxCommitBatchSize() {
      copyOnWrite();
      instance.clearMaxCommitBatchSize();
      return this;
    }

    /**
     * <pre>
     * Number of seconds to delay between a sessions action and sending a commit
     * message to the server. Can be overridden by |custom_nudge_delays|.
     * </pre>
     *
     * <code>optional int32 sessions_commit_delay_seconds = 4;</code>
     */
    public boolean hasSessionsCommitDelaySeconds() {
      return instance.hasSessionsCommitDelaySeconds();
    }
    /**
     * <pre>
     * Number of seconds to delay between a sessions action and sending a commit
     * message to the server. Can be overridden by |custom_nudge_delays|.
     * </pre>
     *
     * <code>optional int32 sessions_commit_delay_seconds = 4;</code>
     */
    public int getSessionsCommitDelaySeconds() {
      return instance.getSessionsCommitDelaySeconds();
    }
    /**
     * <pre>
     * Number of seconds to delay between a sessions action and sending a commit
     * message to the server. Can be overridden by |custom_nudge_delays|.
     * </pre>
     *
     * <code>optional int32 sessions_commit_delay_seconds = 4;</code>
     */
    public Builder setSessionsCommitDelaySeconds(int value) {
      copyOnWrite();
      instance.setSessionsCommitDelaySeconds(value);
      return this;
    }
    /**
     * <pre>
     * Number of seconds to delay between a sessions action and sending a commit
     * message to the server. Can be overridden by |custom_nudge_delays|.
     * </pre>
     *
     * <code>optional int32 sessions_commit_delay_seconds = 4;</code>
     */
    public Builder clearSessionsCommitDelaySeconds() {
      copyOnWrite();
      instance.clearSessionsCommitDelaySeconds();
      return this;
    }

    /**
     * <pre>
     * Number of seconds to delay before the throttled client should retry.
     * </pre>
     *
     * <code>optional int32 throttle_delay_seconds = 5;</code>
     */
    public boolean hasThrottleDelaySeconds() {
      return instance.hasThrottleDelaySeconds();
    }
    /**
     * <pre>
     * Number of seconds to delay before the throttled client should retry.
     * </pre>
     *
     * <code>optional int32 throttle_delay_seconds = 5;</code>
     */
    public int getThrottleDelaySeconds() {
      return instance.getThrottleDelaySeconds();
    }
    /**
     * <pre>
     * Number of seconds to delay before the throttled client should retry.
     * </pre>
     *
     * <code>optional int32 throttle_delay_seconds = 5;</code>
     */
    public Builder setThrottleDelaySeconds(int value) {
      copyOnWrite();
      instance.setThrottleDelaySeconds(value);
      return this;
    }
    /**
     * <pre>
     * Number of seconds to delay before the throttled client should retry.
     * </pre>
     *
     * <code>optional int32 throttle_delay_seconds = 5;</code>
     */
    public Builder clearThrottleDelaySeconds() {
      copyOnWrite();
      instance.clearThrottleDelaySeconds();
      return this;
    }

    /**
     * <pre>
     * Maximum number of local nudges to buffer per-type.
     * </pre>
     *
     * <code>optional int32 client_invalidation_hint_buffer_size = 6;</code>
     */
    public boolean hasClientInvalidationHintBufferSize() {
      return instance.hasClientInvalidationHintBufferSize();
    }
    /**
     * <pre>
     * Maximum number of local nudges to buffer per-type.
     * </pre>
     *
     * <code>optional int32 client_invalidation_hint_buffer_size = 6;</code>
     */
    public int getClientInvalidationHintBufferSize() {
      return instance.getClientInvalidationHintBufferSize();
    }
    /**
     * <pre>
     * Maximum number of local nudges to buffer per-type.
     * </pre>
     *
     * <code>optional int32 client_invalidation_hint_buffer_size = 6;</code>
     */
    public Builder setClientInvalidationHintBufferSize(int value) {
      copyOnWrite();
      instance.setClientInvalidationHintBufferSize(value);
      return this;
    }
    /**
     * <pre>
     * Maximum number of local nudges to buffer per-type.
     * </pre>
     *
     * <code>optional int32 client_invalidation_hint_buffer_size = 6;</code>
     */
    public Builder clearClientInvalidationHintBufferSize() {
      copyOnWrite();
      instance.clearClientInvalidationHintBufferSize();
      return this;
    }

    /**
     * <pre>
     * Time to wait before issuing a retry GU.
     * </pre>
     *
     * <code>optional int32 gu_retry_delay_seconds = 7;</code>
     */
    public boolean hasGuRetryDelaySeconds() {
      return instance.hasGuRetryDelaySeconds();
    }
    /**
     * <pre>
     * Time to wait before issuing a retry GU.
     * </pre>
     *
     * <code>optional int32 gu_retry_delay_seconds = 7;</code>
     */
    public int getGuRetryDelaySeconds() {
      return instance.getGuRetryDelaySeconds();
    }
    /**
     * <pre>
     * Time to wait before issuing a retry GU.
     * </pre>
     *
     * <code>optional int32 gu_retry_delay_seconds = 7;</code>
     */
    public Builder setGuRetryDelaySeconds(int value) {
      copyOnWrite();
      instance.setGuRetryDelaySeconds(value);
      return this;
    }
    /**
     * <pre>
     * Time to wait before issuing a retry GU.
     * </pre>
     *
     * <code>optional int32 gu_retry_delay_seconds = 7;</code>
     */
    public Builder clearGuRetryDelaySeconds() {
      copyOnWrite();
      instance.clearGuRetryDelaySeconds();
      return this;
    }

    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public java.util.List<org.chromium.components.sync.protocol.CustomNudgeDelay> getCustomNudgeDelaysList() {
      return java.util.Collections.unmodifiableList(
          instance.getCustomNudgeDelaysList());
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public int getCustomNudgeDelaysCount() {
      return instance.getCustomNudgeDelaysCount();
    }/**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public org.chromium.components.sync.protocol.CustomNudgeDelay getCustomNudgeDelays(int index) {
      return instance.getCustomNudgeDelays(index);
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public Builder setCustomNudgeDelays(
        int index, org.chromium.components.sync.protocol.CustomNudgeDelay value) {
      copyOnWrite();
      instance.setCustomNudgeDelays(index, value);
      return this;
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public Builder setCustomNudgeDelays(
        int index, org.chromium.components.sync.protocol.CustomNudgeDelay.Builder builderForValue) {
      copyOnWrite();
      instance.setCustomNudgeDelays(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public Builder addCustomNudgeDelays(org.chromium.components.sync.protocol.CustomNudgeDelay value) {
      copyOnWrite();
      instance.addCustomNudgeDelays(value);
      return this;
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public Builder addCustomNudgeDelays(
        int index, org.chromium.components.sync.protocol.CustomNudgeDelay value) {
      copyOnWrite();
      instance.addCustomNudgeDelays(index, value);
      return this;
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public Builder addCustomNudgeDelays(
        org.chromium.components.sync.protocol.CustomNudgeDelay.Builder builderForValue) {
      copyOnWrite();
      instance.addCustomNudgeDelays(builderForValue);
      return this;
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public Builder addCustomNudgeDelays(
        int index, org.chromium.components.sync.protocol.CustomNudgeDelay.Builder builderForValue) {
      copyOnWrite();
      instance.addCustomNudgeDelays(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public Builder addAllCustomNudgeDelays(
        java.lang.Iterable<? extends org.chromium.components.sync.protocol.CustomNudgeDelay> values) {
      copyOnWrite();
      instance.addAllCustomNudgeDelays(values);
      return this;
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public Builder clearCustomNudgeDelays() {
      copyOnWrite();
      instance.clearCustomNudgeDelays();
      return this;
    }
    /**
     * <pre>
     * A dictionary of custom nudge delays.
     * Note: if a SESSIONS value is present, this will override
     * |sessions_commit_delay_seconds|
     * New in M39.
     * </pre>
     *
     * <code>repeated .sync_pb.CustomNudgeDelay custom_nudge_delays = 8;</code>
     */
    public Builder removeCustomNudgeDelays(int index) {
      copyOnWrite();
      instance.removeCustomNudgeDelays(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ClientCommand)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ClientCommand();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        customNudgeDelays_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.ClientCommand other = (org.chromium.components.sync.protocol.ClientCommand) arg1;
        setSyncPollInterval_ = visitor.visitInt(
            hasSetSyncPollInterval(), setSyncPollInterval_,
            other.hasSetSyncPollInterval(), other.setSyncPollInterval_);
        setSyncLongPollInterval_ = visitor.visitInt(
            hasSetSyncLongPollInterval(), setSyncLongPollInterval_,
            other.hasSetSyncLongPollInterval(), other.setSyncLongPollInterval_);
        maxCommitBatchSize_ = visitor.visitInt(
            hasMaxCommitBatchSize(), maxCommitBatchSize_,
            other.hasMaxCommitBatchSize(), other.maxCommitBatchSize_);
        sessionsCommitDelaySeconds_ = visitor.visitInt(
            hasSessionsCommitDelaySeconds(), sessionsCommitDelaySeconds_,
            other.hasSessionsCommitDelaySeconds(), other.sessionsCommitDelaySeconds_);
        throttleDelaySeconds_ = visitor.visitInt(
            hasThrottleDelaySeconds(), throttleDelaySeconds_,
            other.hasThrottleDelaySeconds(), other.throttleDelaySeconds_);
        clientInvalidationHintBufferSize_ = visitor.visitInt(
            hasClientInvalidationHintBufferSize(), clientInvalidationHintBufferSize_,
            other.hasClientInvalidationHintBufferSize(), other.clientInvalidationHintBufferSize_);
        guRetryDelaySeconds_ = visitor.visitInt(
            hasGuRetryDelaySeconds(), guRetryDelaySeconds_,
            other.hasGuRetryDelaySeconds(), other.guRetryDelaySeconds_);
        customNudgeDelays_= visitor.visitList(customNudgeDelays_, other.customNudgeDelays_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                setSyncPollInterval_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                setSyncLongPollInterval_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                maxCommitBatchSize_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                sessionsCommitDelaySeconds_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                throttleDelaySeconds_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                clientInvalidationHintBufferSize_ = input.readInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                guRetryDelaySeconds_ = input.readInt32();
                break;
              }
              case 66: {
                if (!customNudgeDelays_.isModifiable()) {
                  customNudgeDelays_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(customNudgeDelays_);
                }
                customNudgeDelays_.add(
                    input.readMessage(org.chromium.components.sync.protocol.CustomNudgeDelay.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ClientCommand.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ClientCommand)
  private static final org.chromium.components.sync.protocol.ClientCommand DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ClientCommand();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.ClientCommand getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ClientCommand> PARSER;

  public static com.google.protobuf.Parser<ClientCommand> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

