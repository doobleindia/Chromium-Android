// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Client specific configuration information.
 * </pre>
 *
 * Protobuf type {@code sync_pb.ClientConfigParams}
 */
public  final class ClientConfigParams extends
    com.google.protobuf.GeneratedMessageLite<
        ClientConfigParams, ClientConfigParams.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ClientConfigParams)
    ClientConfigParamsOrBuilder {
  private ClientConfigParams() {
    enabledTypeIds_ = emptyIntList();
  }
  private int bitField0_;
  public static final int ENABLED_TYPE_IDS_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.IntList enabledTypeIds_;
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  public java.util.List<java.lang.Integer>
      getEnabledTypeIdsList() {
    return enabledTypeIds_;
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  public int getEnabledTypeIdsCount() {
    return enabledTypeIds_.size();
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  public int getEnabledTypeIds(int index) {
    return enabledTypeIds_.getInt(index);
  }
  private void ensureEnabledTypeIdsIsMutable() {
    if (!enabledTypeIds_.isModifiable()) {
      enabledTypeIds_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(enabledTypeIds_);
     }
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  private void setEnabledTypeIds(
      int index, int value) {
    ensureEnabledTypeIdsIsMutable();
    enabledTypeIds_.setInt(index, value);
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  private void addEnabledTypeIds(int value) {
    ensureEnabledTypeIdsIsMutable();
    enabledTypeIds_.addInt(value);
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  private void addAllEnabledTypeIds(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureEnabledTypeIdsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, enabledTypeIds_);
  }
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  private void clearEnabledTypeIds() {
    enabledTypeIds_ = emptyIntList();
  }

  public static final int TABS_DATATYPE_ENABLED_FIELD_NUMBER = 2;
  private boolean tabsDatatypeEnabled_;
  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   */
  public boolean hasTabsDatatypeEnabled() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   */
  public boolean getTabsDatatypeEnabled() {
    return tabsDatatypeEnabled_;
  }
  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   */
  private void setTabsDatatypeEnabled(boolean value) {
    bitField0_ |= 0x00000001;
    tabsDatatypeEnabled_ = value;
  }
  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   */
  private void clearTabsDatatypeEnabled() {
    bitField0_ = (bitField0_ & ~0x00000001);
    tabsDatatypeEnabled_ = false;
  }

  public static final int COOKIE_JAR_MISMATCH_FIELD_NUMBER = 3;
  private boolean cookieJarMismatch_;
  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   */
  public boolean hasCookieJarMismatch() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   */
  public boolean getCookieJarMismatch() {
    return cookieJarMismatch_;
  }
  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   */
  private void setCookieJarMismatch(boolean value) {
    bitField0_ |= 0x00000002;
    cookieJarMismatch_ = value;
  }
  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   */
  private void clearCookieJarMismatch() {
    bitField0_ = (bitField0_ & ~0x00000002);
    cookieJarMismatch_ = false;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < enabledTypeIds_.size(); i++) {
      output.writeInt32(1, enabledTypeIds_.getInt(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeBool(2, tabsDatatypeEnabled_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeBool(3, cookieJarMismatch_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < enabledTypeIds_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(enabledTypeIds_.getInt(i));
      }
      size += dataSize;
      size += 1 * getEnabledTypeIdsList().size();
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, tabsDatatypeEnabled_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, cookieJarMismatch_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientConfigParams parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ClientConfigParams prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Client specific configuration information.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ClientConfigParams}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ClientConfigParams, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ClientConfigParams)
      org.chromium.components.sync.protocol.ClientConfigParamsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ClientConfigParams.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getEnabledTypeIdsList() {
      return java.util.Collections.unmodifiableList(
          instance.getEnabledTypeIdsList());
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     */
    public int getEnabledTypeIdsCount() {
      return instance.getEnabledTypeIdsCount();
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     */
    public int getEnabledTypeIds(int index) {
      return instance.getEnabledTypeIds(index);
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     */
    public Builder setEnabledTypeIds(
        int index, int value) {
      copyOnWrite();
      instance.setEnabledTypeIds(index, value);
      return this;
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     */
    public Builder addEnabledTypeIds(int value) {
      copyOnWrite();
      instance.addEnabledTypeIds(value);
      return this;
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     */
    public Builder addAllEnabledTypeIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllEnabledTypeIds(values);
      return this;
    }
    /**
     * <pre>
     * The set of data types this client has enabled. Note that this does not
     * include proxy types, as they do not have protocol field numbers and are
     * placeholder types that implicitly enable protocol types.
     * </pre>
     *
     * <code>repeated int32 enabled_type_ids = 1;</code>
     */
    public Builder clearEnabledTypeIds() {
      copyOnWrite();
      instance.clearEnabledTypeIds();
      return this;
    }

    /**
     * <pre>
     * Whether the PROXY_TABS proxy datatype is enabled on this client.
     * </pre>
     *
     * <code>optional bool tabs_datatype_enabled = 2;</code>
     */
    public boolean hasTabsDatatypeEnabled() {
      return instance.hasTabsDatatypeEnabled();
    }
    /**
     * <pre>
     * Whether the PROXY_TABS proxy datatype is enabled on this client.
     * </pre>
     *
     * <code>optional bool tabs_datatype_enabled = 2;</code>
     */
    public boolean getTabsDatatypeEnabled() {
      return instance.getTabsDatatypeEnabled();
    }
    /**
     * <pre>
     * Whether the PROXY_TABS proxy datatype is enabled on this client.
     * </pre>
     *
     * <code>optional bool tabs_datatype_enabled = 2;</code>
     */
    public Builder setTabsDatatypeEnabled(boolean value) {
      copyOnWrite();
      instance.setTabsDatatypeEnabled(value);
      return this;
    }
    /**
     * <pre>
     * Whether the PROXY_TABS proxy datatype is enabled on this client.
     * </pre>
     *
     * <code>optional bool tabs_datatype_enabled = 2;</code>
     */
    public Builder clearTabsDatatypeEnabled() {
      copyOnWrite();
      instance.clearTabsDatatypeEnabled();
      return this;
    }

    /**
     * <pre>
     * Whether the account(s) present in the content area's cookie jar match the
     * chrome account. If multiple accounts are present in the cookie jar, a
     * mismatch implies all of them are different from the chrome account.
     * </pre>
     *
     * <code>optional bool cookie_jar_mismatch = 3;</code>
     */
    public boolean hasCookieJarMismatch() {
      return instance.hasCookieJarMismatch();
    }
    /**
     * <pre>
     * Whether the account(s) present in the content area's cookie jar match the
     * chrome account. If multiple accounts are present in the cookie jar, a
     * mismatch implies all of them are different from the chrome account.
     * </pre>
     *
     * <code>optional bool cookie_jar_mismatch = 3;</code>
     */
    public boolean getCookieJarMismatch() {
      return instance.getCookieJarMismatch();
    }
    /**
     * <pre>
     * Whether the account(s) present in the content area's cookie jar match the
     * chrome account. If multiple accounts are present in the cookie jar, a
     * mismatch implies all of them are different from the chrome account.
     * </pre>
     *
     * <code>optional bool cookie_jar_mismatch = 3;</code>
     */
    public Builder setCookieJarMismatch(boolean value) {
      copyOnWrite();
      instance.setCookieJarMismatch(value);
      return this;
    }
    /**
     * <pre>
     * Whether the account(s) present in the content area's cookie jar match the
     * chrome account. If multiple accounts are present in the cookie jar, a
     * mismatch implies all of them are different from the chrome account.
     * </pre>
     *
     * <code>optional bool cookie_jar_mismatch = 3;</code>
     */
    public Builder clearCookieJarMismatch() {
      copyOnWrite();
      instance.clearCookieJarMismatch();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ClientConfigParams)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ClientConfigParams();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        enabledTypeIds_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.ClientConfigParams other = (org.chromium.components.sync.protocol.ClientConfigParams) arg1;
        enabledTypeIds_= visitor.visitIntList(enabledTypeIds_, other.enabledTypeIds_);
        tabsDatatypeEnabled_ = visitor.visitBoolean(
            hasTabsDatatypeEnabled(), tabsDatatypeEnabled_,
            other.hasTabsDatatypeEnabled(), other.tabsDatatypeEnabled_);
        cookieJarMismatch_ = visitor.visitBoolean(
            hasCookieJarMismatch(), cookieJarMismatch_,
            other.hasCookieJarMismatch(), other.cookieJarMismatch_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 8: {
                if (!enabledTypeIds_.isModifiable()) {
                  enabledTypeIds_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(enabledTypeIds_);
                }
                enabledTypeIds_.addInt(input.readInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!enabledTypeIds_.isModifiable() && input.getBytesUntilLimit() > 0) {
                  enabledTypeIds_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(enabledTypeIds_);
                }
                while (input.getBytesUntilLimit() > 0) {
                  enabledTypeIds_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 16: {
                bitField0_ |= 0x00000001;
                tabsDatatypeEnabled_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                cookieJarMismatch_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ClientConfigParams.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ClientConfigParams)
  private static final org.chromium.components.sync.protocol.ClientConfigParams DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ClientConfigParams();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.ClientConfigParams getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ClientConfigParams> PARSER;

  public static com.google.protobuf.Parser<ClientConfigParams> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

