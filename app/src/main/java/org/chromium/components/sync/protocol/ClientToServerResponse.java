// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.ClientToServerResponse}
 */
public  final class ClientToServerResponse extends
    com.google.protobuf.GeneratedMessageLite<
        ClientToServerResponse, ClientToServerResponse.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ClientToServerResponse)
    ClientToServerResponseOrBuilder {
  private ClientToServerResponse() {
    errorCode_ = 100;
    errorMessage_ = "";
    storeBirthday_ = "";
    migratedDataTypeId_ = emptyIntList();
  }
  public interface ErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.ClientToServerResponse.Error)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
     */
    boolean hasErrorType();
    /**
     * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
     */
    org.chromium.components.sync.protocol.SyncEnums.ErrorType getErrorType();

    /**
     * <code>optional string error_description = 2;</code>
     */
    boolean hasErrorDescription();
    /**
     * <code>optional string error_description = 2;</code>
     */
    java.lang.String getErrorDescription();
    /**
     * <code>optional string error_description = 2;</code>
     */
    com.google.protobuf.ByteString
        getErrorDescriptionBytes();

    /**
     * <code>optional string url = 3;</code>
     */
    boolean hasUrl();
    /**
     * <code>optional string url = 3;</code>
     */
    java.lang.String getUrl();
    /**
     * <code>optional string url = 3;</code>
     */
    com.google.protobuf.ByteString
        getUrlBytes();

    /**
     * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
     */
    boolean hasAction();
    /**
     * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
     */
    org.chromium.components.sync.protocol.SyncEnums.Action getAction();

    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    java.util.List<java.lang.Integer> getErrorDataTypeIdsList();
    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    int getErrorDataTypeIdsCount();
    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    int getErrorDataTypeIds(int index);
  }
  /**
   * Protobuf type {@code sync_pb.ClientToServerResponse.Error}
   */
  public  static final class Error extends
      com.google.protobuf.GeneratedMessageLite<
          Error, Error.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.ClientToServerResponse.Error)
      ErrorOrBuilder {
    private Error() {
      errorType_ = 100;
      errorDescription_ = "";
      url_ = "";
      action_ = 5;
      errorDataTypeIds_ = emptyIntList();
    }
    private int bitField0_;
    public static final int ERROR_TYPE_FIELD_NUMBER = 1;
    private int errorType_;
    /**
     * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
     */
    public boolean hasErrorType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
     */
    public org.chromium.components.sync.protocol.SyncEnums.ErrorType getErrorType() {
      org.chromium.components.sync.protocol.SyncEnums.ErrorType result = org.chromium.components.sync.protocol.SyncEnums.ErrorType.forNumber(errorType_);
      return result == null ? org.chromium.components.sync.protocol.SyncEnums.ErrorType.UNKNOWN : result;
    }
    /**
     * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
     */
    private void setErrorType(org.chromium.components.sync.protocol.SyncEnums.ErrorType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      errorType_ = value.getNumber();
    }
    /**
     * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
     */
    private void clearErrorType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      errorType_ = 100;
    }

    public static final int ERROR_DESCRIPTION_FIELD_NUMBER = 2;
    private java.lang.String errorDescription_;
    /**
     * <code>optional string error_description = 2;</code>
     */
    public boolean hasErrorDescription() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string error_description = 2;</code>
     */
    public java.lang.String getErrorDescription() {
      return errorDescription_;
    }
    /**
     * <code>optional string error_description = 2;</code>
     */
    public com.google.protobuf.ByteString
        getErrorDescriptionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(errorDescription_);
    }
    /**
     * <code>optional string error_description = 2;</code>
     */
    private void setErrorDescription(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      errorDescription_ = value;
    }
    /**
     * <code>optional string error_description = 2;</code>
     */
    private void clearErrorDescription() {
      bitField0_ = (bitField0_ & ~0x00000002);
      errorDescription_ = getDefaultInstance().getErrorDescription();
    }
    /**
     * <code>optional string error_description = 2;</code>
     */
    private void setErrorDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      errorDescription_ = value.toStringUtf8();
    }

    public static final int URL_FIELD_NUMBER = 3;
    private java.lang.String url_;
    /**
     * <code>optional string url = 3;</code>
     */
    public boolean hasUrl() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string url = 3;</code>
     */
    public java.lang.String getUrl() {
      return url_;
    }
    /**
     * <code>optional string url = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUrlBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(url_);
    }
    /**
     * <code>optional string url = 3;</code>
     */
    private void setUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      url_ = value;
    }
    /**
     * <code>optional string url = 3;</code>
     */
    private void clearUrl() {
      bitField0_ = (bitField0_ & ~0x00000004);
      url_ = getDefaultInstance().getUrl();
    }
    /**
     * <code>optional string url = 3;</code>
     */
    private void setUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      url_ = value.toStringUtf8();
    }

    public static final int ACTION_FIELD_NUMBER = 4;
    private int action_;
    /**
     * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
     */
    public org.chromium.components.sync.protocol.SyncEnums.Action getAction() {
      org.chromium.components.sync.protocol.SyncEnums.Action result = org.chromium.components.sync.protocol.SyncEnums.Action.forNumber(action_);
      return result == null ? org.chromium.components.sync.protocol.SyncEnums.Action.UNKNOWN_ACTION : result;
    }
    /**
     * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
     */
    private void setAction(org.chromium.components.sync.protocol.SyncEnums.Action value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      action_ = value.getNumber();
    }
    /**
     * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000008);
      action_ = 5;
    }

    public static final int ERROR_DATA_TYPE_IDS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.IntList errorDataTypeIds_;
    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getErrorDataTypeIdsList() {
      return errorDataTypeIds_;
    }
    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    public int getErrorDataTypeIdsCount() {
      return errorDataTypeIds_.size();
    }
    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    public int getErrorDataTypeIds(int index) {
      return errorDataTypeIds_.getInt(index);
    }
    private void ensureErrorDataTypeIdsIsMutable() {
      if (!errorDataTypeIds_.isModifiable()) {
        errorDataTypeIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(errorDataTypeIds_);
       }
    }
    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    private void setErrorDataTypeIds(
        int index, int value) {
      ensureErrorDataTypeIdsIsMutable();
      errorDataTypeIds_.setInt(index, value);
    }
    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    private void addErrorDataTypeIds(int value) {
      ensureErrorDataTypeIdsIsMutable();
      errorDataTypeIds_.addInt(value);
    }
    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    private void addAllErrorDataTypeIds(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureErrorDataTypeIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, errorDataTypeIds_);
    }
    /**
     * <pre>
     * Currently meaningful if |error_type| is throttled or partial_failure.
     * In the throttled case, if this field is absent then the whole client
     * (all datatypes) is throttled.
     * In the partial_failure case, this field denotes partial failures. The
     * client should retry those datatypes with exponential backoff.
     * </pre>
     *
     * <code>repeated int32 error_data_type_ids = 5;</code>
     */
    private void clearErrorDataTypeIds() {
      errorDataTypeIds_ = emptyIntList();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, errorType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getErrorDescription());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getUrl());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, action_);
      }
      for (int i = 0; i < errorDataTypeIds_.size(); i++) {
        output.writeInt32(5, errorDataTypeIds_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, errorType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getErrorDescription());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getUrl());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, action_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < errorDataTypeIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(errorDataTypeIds_.getInt(i));
        }
        size += dataSize;
        size += 1 * getErrorDataTypeIdsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.ClientToServerResponse.Error prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code sync_pb.ClientToServerResponse.Error}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.ClientToServerResponse.Error, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.ClientToServerResponse.Error)
        org.chromium.components.sync.protocol.ClientToServerResponse.ErrorOrBuilder {
      // Construct using org.chromium.components.sync.protocol.ClientToServerResponse.Error.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
       */
      public boolean hasErrorType() {
        return instance.hasErrorType();
      }
      /**
       * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
       */
      public org.chromium.components.sync.protocol.SyncEnums.ErrorType getErrorType() {
        return instance.getErrorType();
      }
      /**
       * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
       */
      public Builder setErrorType(org.chromium.components.sync.protocol.SyncEnums.ErrorType value) {
        copyOnWrite();
        instance.setErrorType(value);
        return this;
      }
      /**
       * <code>optional .sync_pb.SyncEnums.ErrorType error_type = 1 [default = UNKNOWN];</code>
       */
      public Builder clearErrorType() {
        copyOnWrite();
        instance.clearErrorType();
        return this;
      }

      /**
       * <code>optional string error_description = 2;</code>
       */
      public boolean hasErrorDescription() {
        return instance.hasErrorDescription();
      }
      /**
       * <code>optional string error_description = 2;</code>
       */
      public java.lang.String getErrorDescription() {
        return instance.getErrorDescription();
      }
      /**
       * <code>optional string error_description = 2;</code>
       */
      public com.google.protobuf.ByteString
          getErrorDescriptionBytes() {
        return instance.getErrorDescriptionBytes();
      }
      /**
       * <code>optional string error_description = 2;</code>
       */
      public Builder setErrorDescription(
          java.lang.String value) {
        copyOnWrite();
        instance.setErrorDescription(value);
        return this;
      }
      /**
       * <code>optional string error_description = 2;</code>
       */
      public Builder clearErrorDescription() {
        copyOnWrite();
        instance.clearErrorDescription();
        return this;
      }
      /**
       * <code>optional string error_description = 2;</code>
       */
      public Builder setErrorDescriptionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setErrorDescriptionBytes(value);
        return this;
      }

      /**
       * <code>optional string url = 3;</code>
       */
      public boolean hasUrl() {
        return instance.hasUrl();
      }
      /**
       * <code>optional string url = 3;</code>
       */
      public java.lang.String getUrl() {
        return instance.getUrl();
      }
      /**
       * <code>optional string url = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        return instance.getUrlBytes();
      }
      /**
       * <code>optional string url = 3;</code>
       */
      public Builder setUrl(
          java.lang.String value) {
        copyOnWrite();
        instance.setUrl(value);
        return this;
      }
      /**
       * <code>optional string url = 3;</code>
       */
      public Builder clearUrl() {
        copyOnWrite();
        instance.clearUrl();
        return this;
      }
      /**
       * <code>optional string url = 3;</code>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUrlBytes(value);
        return this;
      }

      /**
       * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
       */
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
       */
      public org.chromium.components.sync.protocol.SyncEnums.Action getAction() {
        return instance.getAction();
      }
      /**
       * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
       */
      public Builder setAction(org.chromium.components.sync.protocol.SyncEnums.Action value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <code>optional .sync_pb.SyncEnums.Action action = 4 [default = UNKNOWN_ACTION];</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }

      /**
       * <pre>
       * Currently meaningful if |error_type| is throttled or partial_failure.
       * In the throttled case, if this field is absent then the whole client
       * (all datatypes) is throttled.
       * In the partial_failure case, this field denotes partial failures. The
       * client should retry those datatypes with exponential backoff.
       * </pre>
       *
       * <code>repeated int32 error_data_type_ids = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getErrorDataTypeIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getErrorDataTypeIdsList());
      }
      /**
       * <pre>
       * Currently meaningful if |error_type| is throttled or partial_failure.
       * In the throttled case, if this field is absent then the whole client
       * (all datatypes) is throttled.
       * In the partial_failure case, this field denotes partial failures. The
       * client should retry those datatypes with exponential backoff.
       * </pre>
       *
       * <code>repeated int32 error_data_type_ids = 5;</code>
       */
      public int getErrorDataTypeIdsCount() {
        return instance.getErrorDataTypeIdsCount();
      }
      /**
       * <pre>
       * Currently meaningful if |error_type| is throttled or partial_failure.
       * In the throttled case, if this field is absent then the whole client
       * (all datatypes) is throttled.
       * In the partial_failure case, this field denotes partial failures. The
       * client should retry those datatypes with exponential backoff.
       * </pre>
       *
       * <code>repeated int32 error_data_type_ids = 5;</code>
       */
      public int getErrorDataTypeIds(int index) {
        return instance.getErrorDataTypeIds(index);
      }
      /**
       * <pre>
       * Currently meaningful if |error_type| is throttled or partial_failure.
       * In the throttled case, if this field is absent then the whole client
       * (all datatypes) is throttled.
       * In the partial_failure case, this field denotes partial failures. The
       * client should retry those datatypes with exponential backoff.
       * </pre>
       *
       * <code>repeated int32 error_data_type_ids = 5;</code>
       */
      public Builder setErrorDataTypeIds(
          int index, int value) {
        copyOnWrite();
        instance.setErrorDataTypeIds(index, value);
        return this;
      }
      /**
       * <pre>
       * Currently meaningful if |error_type| is throttled or partial_failure.
       * In the throttled case, if this field is absent then the whole client
       * (all datatypes) is throttled.
       * In the partial_failure case, this field denotes partial failures. The
       * client should retry those datatypes with exponential backoff.
       * </pre>
       *
       * <code>repeated int32 error_data_type_ids = 5;</code>
       */
      public Builder addErrorDataTypeIds(int value) {
        copyOnWrite();
        instance.addErrorDataTypeIds(value);
        return this;
      }
      /**
       * <pre>
       * Currently meaningful if |error_type| is throttled or partial_failure.
       * In the throttled case, if this field is absent then the whole client
       * (all datatypes) is throttled.
       * In the partial_failure case, this field denotes partial failures. The
       * client should retry those datatypes with exponential backoff.
       * </pre>
       *
       * <code>repeated int32 error_data_type_ids = 5;</code>
       */
      public Builder addAllErrorDataTypeIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllErrorDataTypeIds(values);
        return this;
      }
      /**
       * <pre>
       * Currently meaningful if |error_type| is throttled or partial_failure.
       * In the throttled case, if this field is absent then the whole client
       * (all datatypes) is throttled.
       * In the partial_failure case, this field denotes partial failures. The
       * client should retry those datatypes with exponential backoff.
       * </pre>
       *
       * <code>repeated int32 error_data_type_ids = 5;</code>
       */
      public Builder clearErrorDataTypeIds() {
        copyOnWrite();
        instance.clearErrorDataTypeIds();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.ClientToServerResponse.Error)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.ClientToServerResponse.Error();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          errorDataTypeIds_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.sync.protocol.ClientToServerResponse.Error other = (org.chromium.components.sync.protocol.ClientToServerResponse.Error) arg1;
          errorType_ = visitor.visitInt(hasErrorType(), errorType_,
              other.hasErrorType(), other.errorType_);
          errorDescription_ = visitor.visitString(
              hasErrorDescription(), errorDescription_,
              other.hasErrorDescription(), other.errorDescription_);
          url_ = visitor.visitString(
              hasUrl(), url_,
              other.hasUrl(), other.url_);
          action_ = visitor.visitInt(hasAction(), action_,
              other.hasAction(), other.action_);
          errorDataTypeIds_= visitor.visitIntList(errorDataTypeIds_, other.errorDataTypeIds_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  org.chromium.components.sync.protocol.SyncEnums.ErrorType value = org.chromium.components.sync.protocol.SyncEnums.ErrorType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    errorType_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  errorDescription_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  url_ = s;
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  org.chromium.components.sync.protocol.SyncEnums.Action value = org.chromium.components.sync.protocol.SyncEnums.Action.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    action_ = rawValue;
                  }
                  break;
                }
                case 40: {
                  if (!errorDataTypeIds_.isModifiable()) {
                    errorDataTypeIds_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(errorDataTypeIds_);
                  }
                  errorDataTypeIds_.addInt(input.readInt32());
                  break;
                }
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!errorDataTypeIds_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    errorDataTypeIds_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(errorDataTypeIds_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    errorDataTypeIds_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ClientToServerResponse.Error.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.ClientToServerResponse.Error)
    private static final org.chromium.components.sync.protocol.ClientToServerResponse.Error DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Error();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.sync.protocol.ClientToServerResponse.Error getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Error> PARSER;

    public static com.google.protobuf.Parser<Error> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int COMMIT_FIELD_NUMBER = 1;
  private org.chromium.components.sync.protocol.CommitResponse commit_;
  /**
   * <code>optional .sync_pb.CommitResponse commit = 1;</code>
   */
  public boolean hasCommit() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional .sync_pb.CommitResponse commit = 1;</code>
   */
  public org.chromium.components.sync.protocol.CommitResponse getCommit() {
    return commit_ == null ? org.chromium.components.sync.protocol.CommitResponse.getDefaultInstance() : commit_;
  }
  /**
   * <code>optional .sync_pb.CommitResponse commit = 1;</code>
   */
  private void setCommit(org.chromium.components.sync.protocol.CommitResponse value) {
    if (value == null) {
      throw new NullPointerException();
    }
    commit_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <code>optional .sync_pb.CommitResponse commit = 1;</code>
   */
  private void setCommit(
      org.chromium.components.sync.protocol.CommitResponse.Builder builderForValue) {
    commit_ = builderForValue.build();
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>optional .sync_pb.CommitResponse commit = 1;</code>
   */
  private void mergeCommit(org.chromium.components.sync.protocol.CommitResponse value) {
    if (commit_ != null &&
        commit_ != org.chromium.components.sync.protocol.CommitResponse.getDefaultInstance()) {
      commit_ =
        org.chromium.components.sync.protocol.CommitResponse.newBuilder(commit_).mergeFrom(value).buildPartial();
    } else {
      commit_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>optional .sync_pb.CommitResponse commit = 1;</code>
   */
  private void clearCommit() {  commit_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int GET_UPDATES_FIELD_NUMBER = 2;
  private org.chromium.components.sync.protocol.GetUpdatesResponse getUpdates_;
  /**
   * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
   */
  public boolean hasGetUpdates() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
   */
  public org.chromium.components.sync.protocol.GetUpdatesResponse getGetUpdates() {
    return getUpdates_ == null ? org.chromium.components.sync.protocol.GetUpdatesResponse.getDefaultInstance() : getUpdates_;
  }
  /**
   * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
   */
  private void setGetUpdates(org.chromium.components.sync.protocol.GetUpdatesResponse value) {
    if (value == null) {
      throw new NullPointerException();
    }
    getUpdates_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
   */
  private void setGetUpdates(
      org.chromium.components.sync.protocol.GetUpdatesResponse.Builder builderForValue) {
    getUpdates_ = builderForValue.build();
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
   */
  private void mergeGetUpdates(org.chromium.components.sync.protocol.GetUpdatesResponse value) {
    if (getUpdates_ != null &&
        getUpdates_ != org.chromium.components.sync.protocol.GetUpdatesResponse.getDefaultInstance()) {
      getUpdates_ =
        org.chromium.components.sync.protocol.GetUpdatesResponse.newBuilder(getUpdates_).mergeFrom(value).buildPartial();
    } else {
      getUpdates_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
   */
  private void clearGetUpdates() {  getUpdates_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int ERROR_CODE_FIELD_NUMBER = 4;
  private int errorCode_;
  /**
   * <pre>
   * Up until protocol_version 24, the default was SUCCESS which made it
   * impossible to add new enum values since older clients would parse any
   * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
   * the error_code will be UNKNOWN so that clients know when they're
   * out-of-date. Note also that when using protocol_version &lt; 25,
   * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
   * 400 error code. This is deprecated now.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
   */
  public boolean hasErrorCode() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * Up until protocol_version 24, the default was SUCCESS which made it
   * impossible to add new enum values since older clients would parse any
   * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
   * the error_code will be UNKNOWN so that clients know when they're
   * out-of-date. Note also that when using protocol_version &lt; 25,
   * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
   * 400 error code. This is deprecated now.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
   */
  public org.chromium.components.sync.protocol.SyncEnums.ErrorType getErrorCode() {
    org.chromium.components.sync.protocol.SyncEnums.ErrorType result = org.chromium.components.sync.protocol.SyncEnums.ErrorType.forNumber(errorCode_);
    return result == null ? org.chromium.components.sync.protocol.SyncEnums.ErrorType.UNKNOWN : result;
  }
  /**
   * <pre>
   * Up until protocol_version 24, the default was SUCCESS which made it
   * impossible to add new enum values since older clients would parse any
   * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
   * the error_code will be UNKNOWN so that clients know when they're
   * out-of-date. Note also that when using protocol_version &lt; 25,
   * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
   * 400 error code. This is deprecated now.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
   */
  private void setErrorCode(org.chromium.components.sync.protocol.SyncEnums.ErrorType value) {
    if (value == null) {
      throw new NullPointerException();
    }
    bitField0_ |= 0x00000004;
    errorCode_ = value.getNumber();
  }
  /**
   * <pre>
   * Up until protocol_version 24, the default was SUCCESS which made it
   * impossible to add new enum values since older clients would parse any
   * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
   * the error_code will be UNKNOWN so that clients know when they're
   * out-of-date. Note also that when using protocol_version &lt; 25,
   * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
   * 400 error code. This is deprecated now.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
   */
  private void clearErrorCode() {
    bitField0_ = (bitField0_ & ~0x00000004);
    errorCode_ = 100;
  }

  public static final int ERROR_MESSAGE_FIELD_NUMBER = 5;
  private java.lang.String errorMessage_;
  /**
   * <code>optional string error_message = 5;</code>
   */
  public boolean hasErrorMessage() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional string error_message = 5;</code>
   */
  public java.lang.String getErrorMessage() {
    return errorMessage_;
  }
  /**
   * <code>optional string error_message = 5;</code>
   */
  public com.google.protobuf.ByteString
      getErrorMessageBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(errorMessage_);
  }
  /**
   * <code>optional string error_message = 5;</code>
   */
  private void setErrorMessage(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    errorMessage_ = value;
  }
  /**
   * <code>optional string error_message = 5;</code>
   */
  private void clearErrorMessage() {
    bitField0_ = (bitField0_ & ~0x00000008);
    errorMessage_ = getDefaultInstance().getErrorMessage();
  }
  /**
   * <code>optional string error_message = 5;</code>
   */
  private void setErrorMessageBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    errorMessage_ = value.toStringUtf8();
  }

  public static final int STORE_BIRTHDAY_FIELD_NUMBER = 6;
  private java.lang.String storeBirthday_;
  /**
   * <pre>
   * Opaque store ID; if it changes, the contents of the client's cache
   * is meaningless to this server.  This happens most typically when
   * you switch from one storage backend instance (say, a test instance)
   * to another (say, the official instance).
   * </pre>
   *
   * <code>optional string store_birthday = 6;</code>
   */
  public boolean hasStoreBirthday() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * Opaque store ID; if it changes, the contents of the client's cache
   * is meaningless to this server.  This happens most typically when
   * you switch from one storage backend instance (say, a test instance)
   * to another (say, the official instance).
   * </pre>
   *
   * <code>optional string store_birthday = 6;</code>
   */
  public java.lang.String getStoreBirthday() {
    return storeBirthday_;
  }
  /**
   * <pre>
   * Opaque store ID; if it changes, the contents of the client's cache
   * is meaningless to this server.  This happens most typically when
   * you switch from one storage backend instance (say, a test instance)
   * to another (say, the official instance).
   * </pre>
   *
   * <code>optional string store_birthday = 6;</code>
   */
  public com.google.protobuf.ByteString
      getStoreBirthdayBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(storeBirthday_);
  }
  /**
   * <pre>
   * Opaque store ID; if it changes, the contents of the client's cache
   * is meaningless to this server.  This happens most typically when
   * you switch from one storage backend instance (say, a test instance)
   * to another (say, the official instance).
   * </pre>
   *
   * <code>optional string store_birthday = 6;</code>
   */
  private void setStoreBirthday(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
    storeBirthday_ = value;
  }
  /**
   * <pre>
   * Opaque store ID; if it changes, the contents of the client's cache
   * is meaningless to this server.  This happens most typically when
   * you switch from one storage backend instance (say, a test instance)
   * to another (say, the official instance).
   * </pre>
   *
   * <code>optional string store_birthday = 6;</code>
   */
  private void clearStoreBirthday() {
    bitField0_ = (bitField0_ & ~0x00000010);
    storeBirthday_ = getDefaultInstance().getStoreBirthday();
  }
  /**
   * <pre>
   * Opaque store ID; if it changes, the contents of the client's cache
   * is meaningless to this server.  This happens most typically when
   * you switch from one storage backend instance (say, a test instance)
   * to another (say, the official instance).
   * </pre>
   *
   * <code>optional string store_birthday = 6;</code>
   */
  private void setStoreBirthdayBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
    storeBirthday_ = value.toStringUtf8();
  }

  public static final int CLIENT_COMMAND_FIELD_NUMBER = 7;
  private org.chromium.components.sync.protocol.ClientCommand clientCommand_;
  /**
   * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
   */
  public boolean hasClientCommand() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
   */
  public org.chromium.components.sync.protocol.ClientCommand getClientCommand() {
    return clientCommand_ == null ? org.chromium.components.sync.protocol.ClientCommand.getDefaultInstance() : clientCommand_;
  }
  /**
   * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
   */
  private void setClientCommand(org.chromium.components.sync.protocol.ClientCommand value) {
    if (value == null) {
      throw new NullPointerException();
    }
    clientCommand_ = value;
    bitField0_ |= 0x00000020;
    }
  /**
   * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
   */
  private void setClientCommand(
      org.chromium.components.sync.protocol.ClientCommand.Builder builderForValue) {
    clientCommand_ = builderForValue.build();
    bitField0_ |= 0x00000020;
  }
  /**
   * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
   */
  private void mergeClientCommand(org.chromium.components.sync.protocol.ClientCommand value) {
    if (clientCommand_ != null &&
        clientCommand_ != org.chromium.components.sync.protocol.ClientCommand.getDefaultInstance()) {
      clientCommand_ =
        org.chromium.components.sync.protocol.ClientCommand.newBuilder(clientCommand_).mergeFrom(value).buildPartial();
    } else {
      clientCommand_ = value;
    }
    bitField0_ |= 0x00000020;
  }
  /**
   * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
   */
  private void clearClientCommand() {  clientCommand_ = null;
    bitField0_ = (bitField0_ & ~0x00000020);
  }

  public static final int PROFILING_DATA_FIELD_NUMBER = 8;
  private org.chromium.components.sync.protocol.ProfilingData profilingData_;
  /**
   * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
   */
  public boolean hasProfilingData() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
   */
  public org.chromium.components.sync.protocol.ProfilingData getProfilingData() {
    return profilingData_ == null ? org.chromium.components.sync.protocol.ProfilingData.getDefaultInstance() : profilingData_;
  }
  /**
   * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
   */
  private void setProfilingData(org.chromium.components.sync.protocol.ProfilingData value) {
    if (value == null) {
      throw new NullPointerException();
    }
    profilingData_ = value;
    bitField0_ |= 0x00000040;
    }
  /**
   * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
   */
  private void setProfilingData(
      org.chromium.components.sync.protocol.ProfilingData.Builder builderForValue) {
    profilingData_ = builderForValue.build();
    bitField0_ |= 0x00000040;
  }
  /**
   * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
   */
  private void mergeProfilingData(org.chromium.components.sync.protocol.ProfilingData value) {
    if (profilingData_ != null &&
        profilingData_ != org.chromium.components.sync.protocol.ProfilingData.getDefaultInstance()) {
      profilingData_ =
        org.chromium.components.sync.protocol.ProfilingData.newBuilder(profilingData_).mergeFrom(value).buildPartial();
    } else {
      profilingData_ = value;
    }
    bitField0_ |= 0x00000040;
  }
  /**
   * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
   */
  private void clearProfilingData() {  profilingData_ = null;
    bitField0_ = (bitField0_ & ~0x00000040);
  }

  public static final int MIGRATED_DATA_TYPE_ID_FIELD_NUMBER = 12;
  private com.google.protobuf.Internal.IntList migratedDataTypeId_;
  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   */
  public java.util.List<java.lang.Integer>
      getMigratedDataTypeIdList() {
    return migratedDataTypeId_;
  }
  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   */
  public int getMigratedDataTypeIdCount() {
    return migratedDataTypeId_.size();
  }
  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   */
  public int getMigratedDataTypeId(int index) {
    return migratedDataTypeId_.getInt(index);
  }
  private void ensureMigratedDataTypeIdIsMutable() {
    if (!migratedDataTypeId_.isModifiable()) {
      migratedDataTypeId_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(migratedDataTypeId_);
     }
  }
  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   */
  private void setMigratedDataTypeId(
      int index, int value) {
    ensureMigratedDataTypeIdIsMutable();
    migratedDataTypeId_.setInt(index, value);
  }
  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   */
  private void addMigratedDataTypeId(int value) {
    ensureMigratedDataTypeIdIsMutable();
    migratedDataTypeId_.addInt(value);
  }
  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   */
  private void addAllMigratedDataTypeId(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureMigratedDataTypeIdIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, migratedDataTypeId_);
  }
  /**
   * <pre>
   * The data types whose storage has been migrated.  Present when the value of
   * error_code is MIGRATION_DONE.
   * </pre>
   *
   * <code>repeated int32 migrated_data_type_id = 12;</code>
   */
  private void clearMigratedDataTypeId() {
    migratedDataTypeId_ = emptyIntList();
  }

  public static final int ERROR_FIELD_NUMBER = 13;
  private org.chromium.components.sync.protocol.ClientToServerResponse.Error error_;
  /**
   * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
   */
  public boolean hasError() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
   */
  public org.chromium.components.sync.protocol.ClientToServerResponse.Error getError() {
    return error_ == null ? org.chromium.components.sync.protocol.ClientToServerResponse.Error.getDefaultInstance() : error_;
  }
  /**
   * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
   */
  private void setError(org.chromium.components.sync.protocol.ClientToServerResponse.Error value) {
    if (value == null) {
      throw new NullPointerException();
    }
    error_ = value;
    bitField0_ |= 0x00000080;
    }
  /**
   * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
   */
  private void setError(
      org.chromium.components.sync.protocol.ClientToServerResponse.Error.Builder builderForValue) {
    error_ = builderForValue.build();
    bitField0_ |= 0x00000080;
  }
  /**
   * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
   */
  private void mergeError(org.chromium.components.sync.protocol.ClientToServerResponse.Error value) {
    if (error_ != null &&
        error_ != org.chromium.components.sync.protocol.ClientToServerResponse.Error.getDefaultInstance()) {
      error_ =
        org.chromium.components.sync.protocol.ClientToServerResponse.Error.newBuilder(error_).mergeFrom(value).buildPartial();
    } else {
      error_ = value;
    }
    bitField0_ |= 0x00000080;
  }
  /**
   * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
   */
  private void clearError() {  error_ = null;
    bitField0_ = (bitField0_ & ~0x00000080);
  }

  public static final int NEW_BAG_OF_CHIPS_FIELD_NUMBER = 14;
  private org.chromium.components.sync.protocol.ChipBag newBagOfChips_;
  /**
   * <pre>
   * The new per-client state for this client. If set, should be persisted and
   * sent with any subsequent ClientToServerMessages.
   * </pre>
   *
   * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
   */
  public boolean hasNewBagOfChips() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   * The new per-client state for this client. If set, should be persisted and
   * sent with any subsequent ClientToServerMessages.
   * </pre>
   *
   * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
   */
  public org.chromium.components.sync.protocol.ChipBag getNewBagOfChips() {
    return newBagOfChips_ == null ? org.chromium.components.sync.protocol.ChipBag.getDefaultInstance() : newBagOfChips_;
  }
  /**
   * <pre>
   * The new per-client state for this client. If set, should be persisted and
   * sent with any subsequent ClientToServerMessages.
   * </pre>
   *
   * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
   */
  private void setNewBagOfChips(org.chromium.components.sync.protocol.ChipBag value) {
    if (value == null) {
      throw new NullPointerException();
    }
    newBagOfChips_ = value;
    bitField0_ |= 0x00000100;
    }
  /**
   * <pre>
   * The new per-client state for this client. If set, should be persisted and
   * sent with any subsequent ClientToServerMessages.
   * </pre>
   *
   * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
   */
  private void setNewBagOfChips(
      org.chromium.components.sync.protocol.ChipBag.Builder builderForValue) {
    newBagOfChips_ = builderForValue.build();
    bitField0_ |= 0x00000100;
  }
  /**
   * <pre>
   * The new per-client state for this client. If set, should be persisted and
   * sent with any subsequent ClientToServerMessages.
   * </pre>
   *
   * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
   */
  private void mergeNewBagOfChips(org.chromium.components.sync.protocol.ChipBag value) {
    if (newBagOfChips_ != null &&
        newBagOfChips_ != org.chromium.components.sync.protocol.ChipBag.getDefaultInstance()) {
      newBagOfChips_ =
        org.chromium.components.sync.protocol.ChipBag.newBuilder(newBagOfChips_).mergeFrom(value).buildPartial();
    } else {
      newBagOfChips_ = value;
    }
    bitField0_ |= 0x00000100;
  }
  /**
   * <pre>
   * The new per-client state for this client. If set, should be persisted and
   * sent with any subsequent ClientToServerMessages.
   * </pre>
   *
   * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
   */
  private void clearNewBagOfChips() {  newBagOfChips_ = null;
    bitField0_ = (bitField0_ & ~0x00000100);
  }

  public static final int CLEAR_SERVER_DATA_FIELD_NUMBER = 15;
  private org.chromium.components.sync.protocol.ClearServerDataResponse clearServerData_;
  /**
   * <pre>
   * Present if this ClientToServerResponse is in response to a ClearServerData
   * request.
   * </pre>
   *
   * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
   */
  public boolean hasClearServerData() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   * Present if this ClientToServerResponse is in response to a ClearServerData
   * request.
   * </pre>
   *
   * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
   */
  public org.chromium.components.sync.protocol.ClearServerDataResponse getClearServerData() {
    return clearServerData_ == null ? org.chromium.components.sync.protocol.ClearServerDataResponse.getDefaultInstance() : clearServerData_;
  }
  /**
   * <pre>
   * Present if this ClientToServerResponse is in response to a ClearServerData
   * request.
   * </pre>
   *
   * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
   */
  private void setClearServerData(org.chromium.components.sync.protocol.ClearServerDataResponse value) {
    if (value == null) {
      throw new NullPointerException();
    }
    clearServerData_ = value;
    bitField0_ |= 0x00000200;
    }
  /**
   * <pre>
   * Present if this ClientToServerResponse is in response to a ClearServerData
   * request.
   * </pre>
   *
   * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
   */
  private void setClearServerData(
      org.chromium.components.sync.protocol.ClearServerDataResponse.Builder builderForValue) {
    clearServerData_ = builderForValue.build();
    bitField0_ |= 0x00000200;
  }
  /**
   * <pre>
   * Present if this ClientToServerResponse is in response to a ClearServerData
   * request.
   * </pre>
   *
   * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
   */
  private void mergeClearServerData(org.chromium.components.sync.protocol.ClearServerDataResponse value) {
    if (clearServerData_ != null &&
        clearServerData_ != org.chromium.components.sync.protocol.ClearServerDataResponse.getDefaultInstance()) {
      clearServerData_ =
        org.chromium.components.sync.protocol.ClearServerDataResponse.newBuilder(clearServerData_).mergeFrom(value).buildPartial();
    } else {
      clearServerData_ = value;
    }
    bitField0_ |= 0x00000200;
  }
  /**
   * <pre>
   * Present if this ClientToServerResponse is in response to a ClearServerData
   * request.
   * </pre>
   *
   * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
   */
  private void clearClearServerData() {  clearServerData_ = null;
    bitField0_ = (bitField0_ & ~0x00000200);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, getCommit());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(2, getGetUpdates());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeEnum(4, errorCode_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeString(5, getErrorMessage());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeString(6, getStoreBirthday());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeMessage(7, getClientCommand());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeMessage(8, getProfilingData());
    }
    for (int i = 0; i < migratedDataTypeId_.size(); i++) {
      output.writeInt32(12, migratedDataTypeId_.getInt(i));
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeMessage(13, getError());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeMessage(14, getNewBagOfChips());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeMessage(15, getClearServerData());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCommit());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getGetUpdates());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, errorCode_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(5, getErrorMessage());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(6, getStoreBirthday());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getClientCommand());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getProfilingData());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < migratedDataTypeId_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(migratedDataTypeId_.getInt(i));
      }
      size += dataSize;
      size += 1 * getMigratedDataTypeIdList().size();
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getError());
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getNewBagOfChips());
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, getClearServerData());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.ClientToServerResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientToServerResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientToServerResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ClientToServerResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientToServerResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientToServerResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientToServerResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientToServerResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ClientToServerResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ClientToServerResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ClientToServerResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.ClientToServerResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ClientToServerResponse, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ClientToServerResponse)
      org.chromium.components.sync.protocol.ClientToServerResponseOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ClientToServerResponse.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional .sync_pb.CommitResponse commit = 1;</code>
     */
    public boolean hasCommit() {
      return instance.hasCommit();
    }
    /**
     * <code>optional .sync_pb.CommitResponse commit = 1;</code>
     */
    public org.chromium.components.sync.protocol.CommitResponse getCommit() {
      return instance.getCommit();
    }
    /**
     * <code>optional .sync_pb.CommitResponse commit = 1;</code>
     */
    public Builder setCommit(org.chromium.components.sync.protocol.CommitResponse value) {
      copyOnWrite();
      instance.setCommit(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.CommitResponse commit = 1;</code>
     */
    public Builder setCommit(
        org.chromium.components.sync.protocol.CommitResponse.Builder builderForValue) {
      copyOnWrite();
      instance.setCommit(builderForValue);
      return this;
    }
    /**
     * <code>optional .sync_pb.CommitResponse commit = 1;</code>
     */
    public Builder mergeCommit(org.chromium.components.sync.protocol.CommitResponse value) {
      copyOnWrite();
      instance.mergeCommit(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.CommitResponse commit = 1;</code>
     */
    public Builder clearCommit() {  copyOnWrite();
      instance.clearCommit();
      return this;
    }

    /**
     * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
     */
    public boolean hasGetUpdates() {
      return instance.hasGetUpdates();
    }
    /**
     * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
     */
    public org.chromium.components.sync.protocol.GetUpdatesResponse getGetUpdates() {
      return instance.getGetUpdates();
    }
    /**
     * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
     */
    public Builder setGetUpdates(org.chromium.components.sync.protocol.GetUpdatesResponse value) {
      copyOnWrite();
      instance.setGetUpdates(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
     */
    public Builder setGetUpdates(
        org.chromium.components.sync.protocol.GetUpdatesResponse.Builder builderForValue) {
      copyOnWrite();
      instance.setGetUpdates(builderForValue);
      return this;
    }
    /**
     * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
     */
    public Builder mergeGetUpdates(org.chromium.components.sync.protocol.GetUpdatesResponse value) {
      copyOnWrite();
      instance.mergeGetUpdates(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.GetUpdatesResponse get_updates = 2;</code>
     */
    public Builder clearGetUpdates() {  copyOnWrite();
      instance.clearGetUpdates();
      return this;
    }

    /**
     * <pre>
     * Up until protocol_version 24, the default was SUCCESS which made it
     * impossible to add new enum values since older clients would parse any
     * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
     * the error_code will be UNKNOWN so that clients know when they're
     * out-of-date. Note also that when using protocol_version &lt; 25,
     * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
     * 400 error code. This is deprecated now.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
     */
    public boolean hasErrorCode() {
      return instance.hasErrorCode();
    }
    /**
     * <pre>
     * Up until protocol_version 24, the default was SUCCESS which made it
     * impossible to add new enum values since older clients would parse any
     * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
     * the error_code will be UNKNOWN so that clients know when they're
     * out-of-date. Note also that when using protocol_version &lt; 25,
     * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
     * 400 error code. This is deprecated now.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
     */
    public org.chromium.components.sync.protocol.SyncEnums.ErrorType getErrorCode() {
      return instance.getErrorCode();
    }
    /**
     * <pre>
     * Up until protocol_version 24, the default was SUCCESS which made it
     * impossible to add new enum values since older clients would parse any
     * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
     * the error_code will be UNKNOWN so that clients know when they're
     * out-of-date. Note also that when using protocol_version &lt; 25,
     * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
     * 400 error code. This is deprecated now.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
     */
    public Builder setErrorCode(org.chromium.components.sync.protocol.SyncEnums.ErrorType value) {
      copyOnWrite();
      instance.setErrorCode(value);
      return this;
    }
    /**
     * <pre>
     * Up until protocol_version 24, the default was SUCCESS which made it
     * impossible to add new enum values since older clients would parse any
     * out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
     * the error_code will be UNKNOWN so that clients know when they're
     * out-of-date. Note also that when using protocol_version &lt; 25,
     * TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
     * 400 error code. This is deprecated now.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.ErrorType error_code = 4 [default = UNKNOWN];</code>
     */
    public Builder clearErrorCode() {
      copyOnWrite();
      instance.clearErrorCode();
      return this;
    }

    /**
     * <code>optional string error_message = 5;</code>
     */
    public boolean hasErrorMessage() {
      return instance.hasErrorMessage();
    }
    /**
     * <code>optional string error_message = 5;</code>
     */
    public java.lang.String getErrorMessage() {
      return instance.getErrorMessage();
    }
    /**
     * <code>optional string error_message = 5;</code>
     */
    public com.google.protobuf.ByteString
        getErrorMessageBytes() {
      return instance.getErrorMessageBytes();
    }
    /**
     * <code>optional string error_message = 5;</code>
     */
    public Builder setErrorMessage(
        java.lang.String value) {
      copyOnWrite();
      instance.setErrorMessage(value);
      return this;
    }
    /**
     * <code>optional string error_message = 5;</code>
     */
    public Builder clearErrorMessage() {
      copyOnWrite();
      instance.clearErrorMessage();
      return this;
    }
    /**
     * <code>optional string error_message = 5;</code>
     */
    public Builder setErrorMessageBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setErrorMessageBytes(value);
      return this;
    }

    /**
     * <pre>
     * Opaque store ID; if it changes, the contents of the client's cache
     * is meaningless to this server.  This happens most typically when
     * you switch from one storage backend instance (say, a test instance)
     * to another (say, the official instance).
     * </pre>
     *
     * <code>optional string store_birthday = 6;</code>
     */
    public boolean hasStoreBirthday() {
      return instance.hasStoreBirthday();
    }
    /**
     * <pre>
     * Opaque store ID; if it changes, the contents of the client's cache
     * is meaningless to this server.  This happens most typically when
     * you switch from one storage backend instance (say, a test instance)
     * to another (say, the official instance).
     * </pre>
     *
     * <code>optional string store_birthday = 6;</code>
     */
    public java.lang.String getStoreBirthday() {
      return instance.getStoreBirthday();
    }
    /**
     * <pre>
     * Opaque store ID; if it changes, the contents of the client's cache
     * is meaningless to this server.  This happens most typically when
     * you switch from one storage backend instance (say, a test instance)
     * to another (say, the official instance).
     * </pre>
     *
     * <code>optional string store_birthday = 6;</code>
     */
    public com.google.protobuf.ByteString
        getStoreBirthdayBytes() {
      return instance.getStoreBirthdayBytes();
    }
    /**
     * <pre>
     * Opaque store ID; if it changes, the contents of the client's cache
     * is meaningless to this server.  This happens most typically when
     * you switch from one storage backend instance (say, a test instance)
     * to another (say, the official instance).
     * </pre>
     *
     * <code>optional string store_birthday = 6;</code>
     */
    public Builder setStoreBirthday(
        java.lang.String value) {
      copyOnWrite();
      instance.setStoreBirthday(value);
      return this;
    }
    /**
     * <pre>
     * Opaque store ID; if it changes, the contents of the client's cache
     * is meaningless to this server.  This happens most typically when
     * you switch from one storage backend instance (say, a test instance)
     * to another (say, the official instance).
     * </pre>
     *
     * <code>optional string store_birthday = 6;</code>
     */
    public Builder clearStoreBirthday() {
      copyOnWrite();
      instance.clearStoreBirthday();
      return this;
    }
    /**
     * <pre>
     * Opaque store ID; if it changes, the contents of the client's cache
     * is meaningless to this server.  This happens most typically when
     * you switch from one storage backend instance (say, a test instance)
     * to another (say, the official instance).
     * </pre>
     *
     * <code>optional string store_birthday = 6;</code>
     */
    public Builder setStoreBirthdayBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setStoreBirthdayBytes(value);
      return this;
    }

    /**
     * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
     */
    public boolean hasClientCommand() {
      return instance.hasClientCommand();
    }
    /**
     * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
     */
    public org.chromium.components.sync.protocol.ClientCommand getClientCommand() {
      return instance.getClientCommand();
    }
    /**
     * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
     */
    public Builder setClientCommand(org.chromium.components.sync.protocol.ClientCommand value) {
      copyOnWrite();
      instance.setClientCommand(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
     */
    public Builder setClientCommand(
        org.chromium.components.sync.protocol.ClientCommand.Builder builderForValue) {
      copyOnWrite();
      instance.setClientCommand(builderForValue);
      return this;
    }
    /**
     * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
     */
    public Builder mergeClientCommand(org.chromium.components.sync.protocol.ClientCommand value) {
      copyOnWrite();
      instance.mergeClientCommand(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ClientCommand client_command = 7;</code>
     */
    public Builder clearClientCommand() {  copyOnWrite();
      instance.clearClientCommand();
      return this;
    }

    /**
     * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
     */
    public boolean hasProfilingData() {
      return instance.hasProfilingData();
    }
    /**
     * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
     */
    public org.chromium.components.sync.protocol.ProfilingData getProfilingData() {
      return instance.getProfilingData();
    }
    /**
     * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
     */
    public Builder setProfilingData(org.chromium.components.sync.protocol.ProfilingData value) {
      copyOnWrite();
      instance.setProfilingData(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
     */
    public Builder setProfilingData(
        org.chromium.components.sync.protocol.ProfilingData.Builder builderForValue) {
      copyOnWrite();
      instance.setProfilingData(builderForValue);
      return this;
    }
    /**
     * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
     */
    public Builder mergeProfilingData(org.chromium.components.sync.protocol.ProfilingData value) {
      copyOnWrite();
      instance.mergeProfilingData(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ProfilingData profiling_data = 8;</code>
     */
    public Builder clearProfilingData() {  copyOnWrite();
      instance.clearProfilingData();
      return this;
    }

    /**
     * <pre>
     * The data types whose storage has been migrated.  Present when the value of
     * error_code is MIGRATION_DONE.
     * </pre>
     *
     * <code>repeated int32 migrated_data_type_id = 12;</code>
     */
    public java.util.List<java.lang.Integer>
        getMigratedDataTypeIdList() {
      return java.util.Collections.unmodifiableList(
          instance.getMigratedDataTypeIdList());
    }
    /**
     * <pre>
     * The data types whose storage has been migrated.  Present when the value of
     * error_code is MIGRATION_DONE.
     * </pre>
     *
     * <code>repeated int32 migrated_data_type_id = 12;</code>
     */
    public int getMigratedDataTypeIdCount() {
      return instance.getMigratedDataTypeIdCount();
    }
    /**
     * <pre>
     * The data types whose storage has been migrated.  Present when the value of
     * error_code is MIGRATION_DONE.
     * </pre>
     *
     * <code>repeated int32 migrated_data_type_id = 12;</code>
     */
    public int getMigratedDataTypeId(int index) {
      return instance.getMigratedDataTypeId(index);
    }
    /**
     * <pre>
     * The data types whose storage has been migrated.  Present when the value of
     * error_code is MIGRATION_DONE.
     * </pre>
     *
     * <code>repeated int32 migrated_data_type_id = 12;</code>
     */
    public Builder setMigratedDataTypeId(
        int index, int value) {
      copyOnWrite();
      instance.setMigratedDataTypeId(index, value);
      return this;
    }
    /**
     * <pre>
     * The data types whose storage has been migrated.  Present when the value of
     * error_code is MIGRATION_DONE.
     * </pre>
     *
     * <code>repeated int32 migrated_data_type_id = 12;</code>
     */
    public Builder addMigratedDataTypeId(int value) {
      copyOnWrite();
      instance.addMigratedDataTypeId(value);
      return this;
    }
    /**
     * <pre>
     * The data types whose storage has been migrated.  Present when the value of
     * error_code is MIGRATION_DONE.
     * </pre>
     *
     * <code>repeated int32 migrated_data_type_id = 12;</code>
     */
    public Builder addAllMigratedDataTypeId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllMigratedDataTypeId(values);
      return this;
    }
    /**
     * <pre>
     * The data types whose storage has been migrated.  Present when the value of
     * error_code is MIGRATION_DONE.
     * </pre>
     *
     * <code>repeated int32 migrated_data_type_id = 12;</code>
     */
    public Builder clearMigratedDataTypeId() {
      copyOnWrite();
      instance.clearMigratedDataTypeId();
      return this;
    }

    /**
     * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
     */
    public boolean hasError() {
      return instance.hasError();
    }
    /**
     * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
     */
    public org.chromium.components.sync.protocol.ClientToServerResponse.Error getError() {
      return instance.getError();
    }
    /**
     * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
     */
    public Builder setError(org.chromium.components.sync.protocol.ClientToServerResponse.Error value) {
      copyOnWrite();
      instance.setError(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
     */
    public Builder setError(
        org.chromium.components.sync.protocol.ClientToServerResponse.Error.Builder builderForValue) {
      copyOnWrite();
      instance.setError(builderForValue);
      return this;
    }
    /**
     * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
     */
    public Builder mergeError(org.chromium.components.sync.protocol.ClientToServerResponse.Error value) {
      copyOnWrite();
      instance.mergeError(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.ClientToServerResponse.Error error = 13;</code>
     */
    public Builder clearError() {  copyOnWrite();
      instance.clearError();
      return this;
    }

    /**
     * <pre>
     * The new per-client state for this client. If set, should be persisted and
     * sent with any subsequent ClientToServerMessages.
     * </pre>
     *
     * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
     */
    public boolean hasNewBagOfChips() {
      return instance.hasNewBagOfChips();
    }
    /**
     * <pre>
     * The new per-client state for this client. If set, should be persisted and
     * sent with any subsequent ClientToServerMessages.
     * </pre>
     *
     * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
     */
    public org.chromium.components.sync.protocol.ChipBag getNewBagOfChips() {
      return instance.getNewBagOfChips();
    }
    /**
     * <pre>
     * The new per-client state for this client. If set, should be persisted and
     * sent with any subsequent ClientToServerMessages.
     * </pre>
     *
     * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
     */
    public Builder setNewBagOfChips(org.chromium.components.sync.protocol.ChipBag value) {
      copyOnWrite();
      instance.setNewBagOfChips(value);
      return this;
      }
    /**
     * <pre>
     * The new per-client state for this client. If set, should be persisted and
     * sent with any subsequent ClientToServerMessages.
     * </pre>
     *
     * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
     */
    public Builder setNewBagOfChips(
        org.chromium.components.sync.protocol.ChipBag.Builder builderForValue) {
      copyOnWrite();
      instance.setNewBagOfChips(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The new per-client state for this client. If set, should be persisted and
     * sent with any subsequent ClientToServerMessages.
     * </pre>
     *
     * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
     */
    public Builder mergeNewBagOfChips(org.chromium.components.sync.protocol.ChipBag value) {
      copyOnWrite();
      instance.mergeNewBagOfChips(value);
      return this;
    }
    /**
     * <pre>
     * The new per-client state for this client. If set, should be persisted and
     * sent with any subsequent ClientToServerMessages.
     * </pre>
     *
     * <code>optional .sync_pb.ChipBag new_bag_of_chips = 14;</code>
     */
    public Builder clearNewBagOfChips() {  copyOnWrite();
      instance.clearNewBagOfChips();
      return this;
    }

    /**
     * <pre>
     * Present if this ClientToServerResponse is in response to a ClearServerData
     * request.
     * </pre>
     *
     * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
     */
    public boolean hasClearServerData() {
      return instance.hasClearServerData();
    }
    /**
     * <pre>
     * Present if this ClientToServerResponse is in response to a ClearServerData
     * request.
     * </pre>
     *
     * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
     */
    public org.chromium.components.sync.protocol.ClearServerDataResponse getClearServerData() {
      return instance.getClearServerData();
    }
    /**
     * <pre>
     * Present if this ClientToServerResponse is in response to a ClearServerData
     * request.
     * </pre>
     *
     * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
     */
    public Builder setClearServerData(org.chromium.components.sync.protocol.ClearServerDataResponse value) {
      copyOnWrite();
      instance.setClearServerData(value);
      return this;
      }
    /**
     * <pre>
     * Present if this ClientToServerResponse is in response to a ClearServerData
     * request.
     * </pre>
     *
     * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
     */
    public Builder setClearServerData(
        org.chromium.components.sync.protocol.ClearServerDataResponse.Builder builderForValue) {
      copyOnWrite();
      instance.setClearServerData(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Present if this ClientToServerResponse is in response to a ClearServerData
     * request.
     * </pre>
     *
     * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
     */
    public Builder mergeClearServerData(org.chromium.components.sync.protocol.ClearServerDataResponse value) {
      copyOnWrite();
      instance.mergeClearServerData(value);
      return this;
    }
    /**
     * <pre>
     * Present if this ClientToServerResponse is in response to a ClearServerData
     * request.
     * </pre>
     *
     * <code>optional .sync_pb.ClearServerDataResponse clear_server_data = 15;</code>
     */
    public Builder clearClearServerData() {  copyOnWrite();
      instance.clearClearServerData();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ClientToServerResponse)
  }
  private byte memoizedIsInitialized = -1;
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ClientToServerResponse();
      }
      case IS_INITIALIZED: {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return DEFAULT_INSTANCE;
        if (isInitialized == 0) return null;

        boolean shouldMemoize = ((Boolean) arg0).booleanValue();
        if (hasCommit()) {
          if (!getCommit().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
        }
        if (shouldMemoize) memoizedIsInitialized = 1;
        return DEFAULT_INSTANCE;

      }
      case MAKE_IMMUTABLE: {
        migratedDataTypeId_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.ClientToServerResponse other = (org.chromium.components.sync.protocol.ClientToServerResponse) arg1;
        commit_ = visitor.visitMessage(commit_, other.commit_);
        getUpdates_ = visitor.visitMessage(getUpdates_, other.getUpdates_);
        errorCode_ = visitor.visitInt(hasErrorCode(), errorCode_,
            other.hasErrorCode(), other.errorCode_);
        errorMessage_ = visitor.visitString(
            hasErrorMessage(), errorMessage_,
            other.hasErrorMessage(), other.errorMessage_);
        storeBirthday_ = visitor.visitString(
            hasStoreBirthday(), storeBirthday_,
            other.hasStoreBirthday(), other.storeBirthday_);
        clientCommand_ = visitor.visitMessage(clientCommand_, other.clientCommand_);
        profilingData_ = visitor.visitMessage(profilingData_, other.profilingData_);
        migratedDataTypeId_= visitor.visitIntList(migratedDataTypeId_, other.migratedDataTypeId_);
        error_ = visitor.visitMessage(error_, other.error_);
        newBagOfChips_ = visitor.visitMessage(newBagOfChips_, other.newBagOfChips_);
        clearServerData_ = visitor.visitMessage(clearServerData_, other.clearServerData_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.chromium.components.sync.protocol.CommitResponse.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = commit_.toBuilder();
                }
                commit_ = input.readMessage(org.chromium.components.sync.protocol.CommitResponse.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(commit_);
                  commit_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                org.chromium.components.sync.protocol.GetUpdatesResponse.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = getUpdates_.toBuilder();
                }
                getUpdates_ = input.readMessage(org.chromium.components.sync.protocol.GetUpdatesResponse.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(getUpdates_);
                  getUpdates_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                org.chromium.components.sync.protocol.SyncEnums.ErrorType value = org.chromium.components.sync.protocol.SyncEnums.ErrorType.forNumber(rawValue);
                if (value == null) {
                  super.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  errorCode_ = rawValue;
                }
                break;
              }
              case 42: {
                String s = input.readString();
                bitField0_ |= 0x00000008;
                errorMessage_ = s;
                break;
              }
              case 50: {
                String s = input.readString();
                bitField0_ |= 0x00000010;
                storeBirthday_ = s;
                break;
              }
              case 58: {
                org.chromium.components.sync.protocol.ClientCommand.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = clientCommand_.toBuilder();
                }
                clientCommand_ = input.readMessage(org.chromium.components.sync.protocol.ClientCommand.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(clientCommand_);
                  clientCommand_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
              case 66: {
                org.chromium.components.sync.protocol.ProfilingData.Builder subBuilder = null;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                  subBuilder = profilingData_.toBuilder();
                }
                profilingData_ = input.readMessage(org.chromium.components.sync.protocol.ProfilingData.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(profilingData_);
                  profilingData_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000040;
                break;
              }
              case 96: {
                if (!migratedDataTypeId_.isModifiable()) {
                  migratedDataTypeId_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(migratedDataTypeId_);
                }
                migratedDataTypeId_.addInt(input.readInt32());
                break;
              }
              case 98: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!migratedDataTypeId_.isModifiable() && input.getBytesUntilLimit() > 0) {
                  migratedDataTypeId_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(migratedDataTypeId_);
                }
                while (input.getBytesUntilLimit() > 0) {
                  migratedDataTypeId_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 106: {
                org.chromium.components.sync.protocol.ClientToServerResponse.Error.Builder subBuilder = null;
                if (((bitField0_ & 0x00000080) == 0x00000080)) {
                  subBuilder = error_.toBuilder();
                }
                error_ = input.readMessage(org.chromium.components.sync.protocol.ClientToServerResponse.Error.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(error_);
                  error_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000080;
                break;
              }
              case 114: {
                org.chromium.components.sync.protocol.ChipBag.Builder subBuilder = null;
                if (((bitField0_ & 0x00000100) == 0x00000100)) {
                  subBuilder = newBagOfChips_.toBuilder();
                }
                newBagOfChips_ = input.readMessage(org.chromium.components.sync.protocol.ChipBag.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(newBagOfChips_);
                  newBagOfChips_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000100;
                break;
              }
              case 122: {
                org.chromium.components.sync.protocol.ClearServerDataResponse.Builder subBuilder = null;
                if (((bitField0_ & 0x00000200) == 0x00000200)) {
                  subBuilder = clearServerData_.toBuilder();
                }
                clearServerData_ = input.readMessage(org.chromium.components.sync.protocol.ClearServerDataResponse.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(clearServerData_);
                  clearServerData_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000200;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ClientToServerResponse.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ClientToServerResponse)
  private static final org.chromium.components.sync.protocol.ClientToServerResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ClientToServerResponse();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.ClientToServerResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ClientToServerResponse> PARSER;

  public static com.google.protobuf.Parser<ClientToServerResponse> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

