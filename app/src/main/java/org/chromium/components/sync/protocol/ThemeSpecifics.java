// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: theme_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Properties of theme sync objects.
 * </pre>
 *
 * Protobuf type {@code sync_pb.ThemeSpecifics}
 */
public  final class ThemeSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        ThemeSpecifics, ThemeSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ThemeSpecifics)
    ThemeSpecificsOrBuilder {
  private ThemeSpecifics() {
    customThemeName_ = "";
    customThemeId_ = "";
    customThemeUpdateUrl_ = "";
  }
  public interface AutogeneratedThemeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.ThemeSpecifics.AutogeneratedTheme)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * SkColor used to autogenerate theme.
     * </pre>
     *
     * <code>optional uint32 color = 1;</code>
     */
    boolean hasColor();
    /**
     * <pre>
     * SkColor used to autogenerate theme.
     * </pre>
     *
     * <code>optional uint32 color = 1;</code>
     */
    int getColor();
  }
  /**
   * Protobuf type {@code sync_pb.ThemeSpecifics.AutogeneratedTheme}
   */
  public  static final class AutogeneratedTheme extends
      com.google.protobuf.GeneratedMessageLite<
          AutogeneratedTheme, AutogeneratedTheme.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.ThemeSpecifics.AutogeneratedTheme)
      AutogeneratedThemeOrBuilder {
    private AutogeneratedTheme() {
    }
    private int bitField0_;
    public static final int COLOR_FIELD_NUMBER = 1;
    private int color_;
    /**
     * <pre>
     * SkColor used to autogenerate theme.
     * </pre>
     *
     * <code>optional uint32 color = 1;</code>
     */
    public boolean hasColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * SkColor used to autogenerate theme.
     * </pre>
     *
     * <code>optional uint32 color = 1;</code>
     */
    public int getColor() {
      return color_;
    }
    /**
     * <pre>
     * SkColor used to autogenerate theme.
     * </pre>
     *
     * <code>optional uint32 color = 1;</code>
     */
    private void setColor(int value) {
      bitField0_ |= 0x00000001;
      color_ = value;
    }
    /**
     * <pre>
     * SkColor used to autogenerate theme.
     * </pre>
     *
     * <code>optional uint32 color = 1;</code>
     */
    private void clearColor() {
      bitField0_ = (bitField0_ & ~0x00000001);
      color_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, color_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, color_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code sync_pb.ThemeSpecifics.AutogeneratedTheme}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.ThemeSpecifics.AutogeneratedTheme)
        org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedThemeOrBuilder {
      // Construct using org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * SkColor used to autogenerate theme.
       * </pre>
       *
       * <code>optional uint32 color = 1;</code>
       */
      public boolean hasColor() {
        return instance.hasColor();
      }
      /**
       * <pre>
       * SkColor used to autogenerate theme.
       * </pre>
       *
       * <code>optional uint32 color = 1;</code>
       */
      public int getColor() {
        return instance.getColor();
      }
      /**
       * <pre>
       * SkColor used to autogenerate theme.
       * </pre>
       *
       * <code>optional uint32 color = 1;</code>
       */
      public Builder setColor(int value) {
        copyOnWrite();
        instance.setColor(value);
        return this;
      }
      /**
       * <pre>
       * SkColor used to autogenerate theme.
       * </pre>
       *
       * <code>optional uint32 color = 1;</code>
       */
      public Builder clearColor() {
        copyOnWrite();
        instance.clearColor();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.ThemeSpecifics.AutogeneratedTheme)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme other = (org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme) arg1;
          color_ = visitor.visitInt(
              hasColor(), color_,
              other.hasColor(), other.color_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  color_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.ThemeSpecifics.AutogeneratedTheme)
    private static final org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AutogeneratedTheme();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AutogeneratedTheme> PARSER;

    public static com.google.protobuf.Parser<AutogeneratedTheme> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int USE_CUSTOM_THEME_FIELD_NUMBER = 1;
  private boolean useCustomTheme_;
  /**
   * <pre>
   * If set, we're using a extension and all custom_* fields should be
   * present.  If not set, and all custom_* fields should be omitted.
   * </pre>
   *
   * <code>optional bool use_custom_theme = 1;</code>
   */
  public boolean hasUseCustomTheme() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * If set, we're using a extension and all custom_* fields should be
   * present.  If not set, and all custom_* fields should be omitted.
   * </pre>
   *
   * <code>optional bool use_custom_theme = 1;</code>
   */
  public boolean getUseCustomTheme() {
    return useCustomTheme_;
  }
  /**
   * <pre>
   * If set, we're using a extension and all custom_* fields should be
   * present.  If not set, and all custom_* fields should be omitted.
   * </pre>
   *
   * <code>optional bool use_custom_theme = 1;</code>
   */
  private void setUseCustomTheme(boolean value) {
    bitField0_ |= 0x00000001;
    useCustomTheme_ = value;
  }
  /**
   * <pre>
   * If set, we're using a extension and all custom_* fields should be
   * present.  If not set, and all custom_* fields should be omitted.
   * </pre>
   *
   * <code>optional bool use_custom_theme = 1;</code>
   */
  private void clearUseCustomTheme() {
    bitField0_ = (bitField0_ & ~0x00000001);
    useCustomTheme_ = false;
  }

  public static final int USE_SYSTEM_THEME_BY_DEFAULT_FIELD_NUMBER = 2;
  private boolean useSystemThemeByDefault_;
  /**
   * <pre>
   * This field is only set (i.e., not cleared) on platforms that have
   * a distinction between the system theme and the default theme, but
   * other platforms must be careful to pass through the set state (not
   * just the value) of this flag.
   * If true, we use the system theme by default (i.e., when we don't use
   * a custom theme) for platforms that make a distinction between the
   * default theme and the system theme.  Has no effect if use_custom_theme
   * is set.
   * </pre>
   *
   * <code>optional bool use_system_theme_by_default = 2;</code>
   */
  public boolean hasUseSystemThemeByDefault() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * This field is only set (i.e., not cleared) on platforms that have
   * a distinction between the system theme and the default theme, but
   * other platforms must be careful to pass through the set state (not
   * just the value) of this flag.
   * If true, we use the system theme by default (i.e., when we don't use
   * a custom theme) for platforms that make a distinction between the
   * default theme and the system theme.  Has no effect if use_custom_theme
   * is set.
   * </pre>
   *
   * <code>optional bool use_system_theme_by_default = 2;</code>
   */
  public boolean getUseSystemThemeByDefault() {
    return useSystemThemeByDefault_;
  }
  /**
   * <pre>
   * This field is only set (i.e., not cleared) on platforms that have
   * a distinction between the system theme and the default theme, but
   * other platforms must be careful to pass through the set state (not
   * just the value) of this flag.
   * If true, we use the system theme by default (i.e., when we don't use
   * a custom theme) for platforms that make a distinction between the
   * default theme and the system theme.  Has no effect if use_custom_theme
   * is set.
   * </pre>
   *
   * <code>optional bool use_system_theme_by_default = 2;</code>
   */
  private void setUseSystemThemeByDefault(boolean value) {
    bitField0_ |= 0x00000002;
    useSystemThemeByDefault_ = value;
  }
  /**
   * <pre>
   * This field is only set (i.e., not cleared) on platforms that have
   * a distinction between the system theme and the default theme, but
   * other platforms must be careful to pass through the set state (not
   * just the value) of this flag.
   * If true, we use the system theme by default (i.e., when we don't use
   * a custom theme) for platforms that make a distinction between the
   * default theme and the system theme.  Has no effect if use_custom_theme
   * is set.
   * </pre>
   *
   * <code>optional bool use_system_theme_by_default = 2;</code>
   */
  private void clearUseSystemThemeByDefault() {
    bitField0_ = (bitField0_ & ~0x00000002);
    useSystemThemeByDefault_ = false;
  }

  public static final int CUSTOM_THEME_NAME_FIELD_NUMBER = 3;
  private java.lang.String customThemeName_;
  /**
   * <pre>
   * TODO(gayane): Migrate custom_* fields to a separate message.
   * Extension specific fields. Ignored if |autogenerated_theme| is set.
   * </pre>
   *
   * <code>optional string custom_theme_name = 3;</code>
   */
  public boolean hasCustomThemeName() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * TODO(gayane): Migrate custom_* fields to a separate message.
   * Extension specific fields. Ignored if |autogenerated_theme| is set.
   * </pre>
   *
   * <code>optional string custom_theme_name = 3;</code>
   */
  public java.lang.String getCustomThemeName() {
    return customThemeName_;
  }
  /**
   * <pre>
   * TODO(gayane): Migrate custom_* fields to a separate message.
   * Extension specific fields. Ignored if |autogenerated_theme| is set.
   * </pre>
   *
   * <code>optional string custom_theme_name = 3;</code>
   */
  public com.google.protobuf.ByteString
      getCustomThemeNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(customThemeName_);
  }
  /**
   * <pre>
   * TODO(gayane): Migrate custom_* fields to a separate message.
   * Extension specific fields. Ignored if |autogenerated_theme| is set.
   * </pre>
   *
   * <code>optional string custom_theme_name = 3;</code>
   */
  private void setCustomThemeName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    customThemeName_ = value;
  }
  /**
   * <pre>
   * TODO(gayane): Migrate custom_* fields to a separate message.
   * Extension specific fields. Ignored if |autogenerated_theme| is set.
   * </pre>
   *
   * <code>optional string custom_theme_name = 3;</code>
   */
  private void clearCustomThemeName() {
    bitField0_ = (bitField0_ & ~0x00000004);
    customThemeName_ = getDefaultInstance().getCustomThemeName();
  }
  /**
   * <pre>
   * TODO(gayane): Migrate custom_* fields to a separate message.
   * Extension specific fields. Ignored if |autogenerated_theme| is set.
   * </pre>
   *
   * <code>optional string custom_theme_name = 3;</code>
   */
  private void setCustomThemeNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    customThemeName_ = value.toStringUtf8();
  }

  public static final int CUSTOM_THEME_ID_FIELD_NUMBER = 4;
  private java.lang.String customThemeId_;
  /**
   * <code>optional string custom_theme_id = 4;</code>
   */
  public boolean hasCustomThemeId() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional string custom_theme_id = 4;</code>
   */
  public java.lang.String getCustomThemeId() {
    return customThemeId_;
  }
  /**
   * <code>optional string custom_theme_id = 4;</code>
   */
  public com.google.protobuf.ByteString
      getCustomThemeIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(customThemeId_);
  }
  /**
   * <code>optional string custom_theme_id = 4;</code>
   */
  private void setCustomThemeId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    customThemeId_ = value;
  }
  /**
   * <code>optional string custom_theme_id = 4;</code>
   */
  private void clearCustomThemeId() {
    bitField0_ = (bitField0_ & ~0x00000008);
    customThemeId_ = getDefaultInstance().getCustomThemeId();
  }
  /**
   * <code>optional string custom_theme_id = 4;</code>
   */
  private void setCustomThemeIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    customThemeId_ = value.toStringUtf8();
  }

  public static final int CUSTOM_THEME_UPDATE_URL_FIELD_NUMBER = 5;
  private java.lang.String customThemeUpdateUrl_;
  /**
   * <code>optional string custom_theme_update_url = 5;</code>
   */
  public boolean hasCustomThemeUpdateUrl() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional string custom_theme_update_url = 5;</code>
   */
  public java.lang.String getCustomThemeUpdateUrl() {
    return customThemeUpdateUrl_;
  }
  /**
   * <code>optional string custom_theme_update_url = 5;</code>
   */
  public com.google.protobuf.ByteString
      getCustomThemeUpdateUrlBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(customThemeUpdateUrl_);
  }
  /**
   * <code>optional string custom_theme_update_url = 5;</code>
   */
  private void setCustomThemeUpdateUrl(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
    customThemeUpdateUrl_ = value;
  }
  /**
   * <code>optional string custom_theme_update_url = 5;</code>
   */
  private void clearCustomThemeUpdateUrl() {
    bitField0_ = (bitField0_ & ~0x00000010);
    customThemeUpdateUrl_ = getDefaultInstance().getCustomThemeUpdateUrl();
  }
  /**
   * <code>optional string custom_theme_update_url = 5;</code>
   */
  private void setCustomThemeUpdateUrlBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
    customThemeUpdateUrl_ = value.toStringUtf8();
  }

  public static final int AUTOGENERATED_THEME_FIELD_NUMBER = 6;
  private org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme autogeneratedTheme_;
  /**
   * <pre>
   * If set, autogenerated theme is used.
   * </pre>
   *
   * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
   */
  public boolean hasAutogeneratedTheme() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * If set, autogenerated theme is used.
   * </pre>
   *
   * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
   */
  public org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme getAutogeneratedTheme() {
    return autogeneratedTheme_ == null ? org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme.getDefaultInstance() : autogeneratedTheme_;
  }
  /**
   * <pre>
   * If set, autogenerated theme is used.
   * </pre>
   *
   * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
   */
  private void setAutogeneratedTheme(org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme value) {
    if (value == null) {
      throw new NullPointerException();
    }
    autogeneratedTheme_ = value;
    bitField0_ |= 0x00000020;
    }
  /**
   * <pre>
   * If set, autogenerated theme is used.
   * </pre>
   *
   * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
   */
  private void setAutogeneratedTheme(
      org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme.Builder builderForValue) {
    autogeneratedTheme_ = builderForValue.build();
    bitField0_ |= 0x00000020;
  }
  /**
   * <pre>
   * If set, autogenerated theme is used.
   * </pre>
   *
   * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
   */
  private void mergeAutogeneratedTheme(org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme value) {
    if (autogeneratedTheme_ != null &&
        autogeneratedTheme_ != org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme.getDefaultInstance()) {
      autogeneratedTheme_ =
        org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme.newBuilder(autogeneratedTheme_).mergeFrom(value).buildPartial();
    } else {
      autogeneratedTheme_ = value;
    }
    bitField0_ |= 0x00000020;
  }
  /**
   * <pre>
   * If set, autogenerated theme is used.
   * </pre>
   *
   * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
   */
  private void clearAutogeneratedTheme() {  autogeneratedTheme_ = null;
    bitField0_ = (bitField0_ & ~0x00000020);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeBool(1, useCustomTheme_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeBool(2, useSystemThemeByDefault_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeString(3, getCustomThemeName());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeString(4, getCustomThemeId());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeString(5, getCustomThemeUpdateUrl());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeMessage(6, getAutogeneratedTheme());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, useCustomTheme_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, useSystemThemeByDefault_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getCustomThemeName());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(4, getCustomThemeId());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(5, getCustomThemeUpdateUrl());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getAutogeneratedTheme());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.ThemeSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ThemeSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ThemeSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ThemeSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ThemeSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ThemeSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ThemeSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ThemeSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ThemeSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ThemeSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ThemeSpecifics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Properties of theme sync objects.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ThemeSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ThemeSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ThemeSpecifics)
      org.chromium.components.sync.protocol.ThemeSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ThemeSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * If set, we're using a extension and all custom_* fields should be
     * present.  If not set, and all custom_* fields should be omitted.
     * </pre>
     *
     * <code>optional bool use_custom_theme = 1;</code>
     */
    public boolean hasUseCustomTheme() {
      return instance.hasUseCustomTheme();
    }
    /**
     * <pre>
     * If set, we're using a extension and all custom_* fields should be
     * present.  If not set, and all custom_* fields should be omitted.
     * </pre>
     *
     * <code>optional bool use_custom_theme = 1;</code>
     */
    public boolean getUseCustomTheme() {
      return instance.getUseCustomTheme();
    }
    /**
     * <pre>
     * If set, we're using a extension and all custom_* fields should be
     * present.  If not set, and all custom_* fields should be omitted.
     * </pre>
     *
     * <code>optional bool use_custom_theme = 1;</code>
     */
    public Builder setUseCustomTheme(boolean value) {
      copyOnWrite();
      instance.setUseCustomTheme(value);
      return this;
    }
    /**
     * <pre>
     * If set, we're using a extension and all custom_* fields should be
     * present.  If not set, and all custom_* fields should be omitted.
     * </pre>
     *
     * <code>optional bool use_custom_theme = 1;</code>
     */
    public Builder clearUseCustomTheme() {
      copyOnWrite();
      instance.clearUseCustomTheme();
      return this;
    }

    /**
     * <pre>
     * This field is only set (i.e., not cleared) on platforms that have
     * a distinction between the system theme and the default theme, but
     * other platforms must be careful to pass through the set state (not
     * just the value) of this flag.
     * If true, we use the system theme by default (i.e., when we don't use
     * a custom theme) for platforms that make a distinction between the
     * default theme and the system theme.  Has no effect if use_custom_theme
     * is set.
     * </pre>
     *
     * <code>optional bool use_system_theme_by_default = 2;</code>
     */
    public boolean hasUseSystemThemeByDefault() {
      return instance.hasUseSystemThemeByDefault();
    }
    /**
     * <pre>
     * This field is only set (i.e., not cleared) on platforms that have
     * a distinction between the system theme and the default theme, but
     * other platforms must be careful to pass through the set state (not
     * just the value) of this flag.
     * If true, we use the system theme by default (i.e., when we don't use
     * a custom theme) for platforms that make a distinction between the
     * default theme and the system theme.  Has no effect if use_custom_theme
     * is set.
     * </pre>
     *
     * <code>optional bool use_system_theme_by_default = 2;</code>
     */
    public boolean getUseSystemThemeByDefault() {
      return instance.getUseSystemThemeByDefault();
    }
    /**
     * <pre>
     * This field is only set (i.e., not cleared) on platforms that have
     * a distinction between the system theme and the default theme, but
     * other platforms must be careful to pass through the set state (not
     * just the value) of this flag.
     * If true, we use the system theme by default (i.e., when we don't use
     * a custom theme) for platforms that make a distinction between the
     * default theme and the system theme.  Has no effect if use_custom_theme
     * is set.
     * </pre>
     *
     * <code>optional bool use_system_theme_by_default = 2;</code>
     */
    public Builder setUseSystemThemeByDefault(boolean value) {
      copyOnWrite();
      instance.setUseSystemThemeByDefault(value);
      return this;
    }
    /**
     * <pre>
     * This field is only set (i.e., not cleared) on platforms that have
     * a distinction between the system theme and the default theme, but
     * other platforms must be careful to pass through the set state (not
     * just the value) of this flag.
     * If true, we use the system theme by default (i.e., when we don't use
     * a custom theme) for platforms that make a distinction between the
     * default theme and the system theme.  Has no effect if use_custom_theme
     * is set.
     * </pre>
     *
     * <code>optional bool use_system_theme_by_default = 2;</code>
     */
    public Builder clearUseSystemThemeByDefault() {
      copyOnWrite();
      instance.clearUseSystemThemeByDefault();
      return this;
    }

    /**
     * <pre>
     * TODO(gayane): Migrate custom_* fields to a separate message.
     * Extension specific fields. Ignored if |autogenerated_theme| is set.
     * </pre>
     *
     * <code>optional string custom_theme_name = 3;</code>
     */
    public boolean hasCustomThemeName() {
      return instance.hasCustomThemeName();
    }
    /**
     * <pre>
     * TODO(gayane): Migrate custom_* fields to a separate message.
     * Extension specific fields. Ignored if |autogenerated_theme| is set.
     * </pre>
     *
     * <code>optional string custom_theme_name = 3;</code>
     */
    public java.lang.String getCustomThemeName() {
      return instance.getCustomThemeName();
    }
    /**
     * <pre>
     * TODO(gayane): Migrate custom_* fields to a separate message.
     * Extension specific fields. Ignored if |autogenerated_theme| is set.
     * </pre>
     *
     * <code>optional string custom_theme_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCustomThemeNameBytes() {
      return instance.getCustomThemeNameBytes();
    }
    /**
     * <pre>
     * TODO(gayane): Migrate custom_* fields to a separate message.
     * Extension specific fields. Ignored if |autogenerated_theme| is set.
     * </pre>
     *
     * <code>optional string custom_theme_name = 3;</code>
     */
    public Builder setCustomThemeName(
        java.lang.String value) {
      copyOnWrite();
      instance.setCustomThemeName(value);
      return this;
    }
    /**
     * <pre>
     * TODO(gayane): Migrate custom_* fields to a separate message.
     * Extension specific fields. Ignored if |autogenerated_theme| is set.
     * </pre>
     *
     * <code>optional string custom_theme_name = 3;</code>
     */
    public Builder clearCustomThemeName() {
      copyOnWrite();
      instance.clearCustomThemeName();
      return this;
    }
    /**
     * <pre>
     * TODO(gayane): Migrate custom_* fields to a separate message.
     * Extension specific fields. Ignored if |autogenerated_theme| is set.
     * </pre>
     *
     * <code>optional string custom_theme_name = 3;</code>
     */
    public Builder setCustomThemeNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCustomThemeNameBytes(value);
      return this;
    }

    /**
     * <code>optional string custom_theme_id = 4;</code>
     */
    public boolean hasCustomThemeId() {
      return instance.hasCustomThemeId();
    }
    /**
     * <code>optional string custom_theme_id = 4;</code>
     */
    public java.lang.String getCustomThemeId() {
      return instance.getCustomThemeId();
    }
    /**
     * <code>optional string custom_theme_id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getCustomThemeIdBytes() {
      return instance.getCustomThemeIdBytes();
    }
    /**
     * <code>optional string custom_theme_id = 4;</code>
     */
    public Builder setCustomThemeId(
        java.lang.String value) {
      copyOnWrite();
      instance.setCustomThemeId(value);
      return this;
    }
    /**
     * <code>optional string custom_theme_id = 4;</code>
     */
    public Builder clearCustomThemeId() {
      copyOnWrite();
      instance.clearCustomThemeId();
      return this;
    }
    /**
     * <code>optional string custom_theme_id = 4;</code>
     */
    public Builder setCustomThemeIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCustomThemeIdBytes(value);
      return this;
    }

    /**
     * <code>optional string custom_theme_update_url = 5;</code>
     */
    public boolean hasCustomThemeUpdateUrl() {
      return instance.hasCustomThemeUpdateUrl();
    }
    /**
     * <code>optional string custom_theme_update_url = 5;</code>
     */
    public java.lang.String getCustomThemeUpdateUrl() {
      return instance.getCustomThemeUpdateUrl();
    }
    /**
     * <code>optional string custom_theme_update_url = 5;</code>
     */
    public com.google.protobuf.ByteString
        getCustomThemeUpdateUrlBytes() {
      return instance.getCustomThemeUpdateUrlBytes();
    }
    /**
     * <code>optional string custom_theme_update_url = 5;</code>
     */
    public Builder setCustomThemeUpdateUrl(
        java.lang.String value) {
      copyOnWrite();
      instance.setCustomThemeUpdateUrl(value);
      return this;
    }
    /**
     * <code>optional string custom_theme_update_url = 5;</code>
     */
    public Builder clearCustomThemeUpdateUrl() {
      copyOnWrite();
      instance.clearCustomThemeUpdateUrl();
      return this;
    }
    /**
     * <code>optional string custom_theme_update_url = 5;</code>
     */
    public Builder setCustomThemeUpdateUrlBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCustomThemeUpdateUrlBytes(value);
      return this;
    }

    /**
     * <pre>
     * If set, autogenerated theme is used.
     * </pre>
     *
     * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
     */
    public boolean hasAutogeneratedTheme() {
      return instance.hasAutogeneratedTheme();
    }
    /**
     * <pre>
     * If set, autogenerated theme is used.
     * </pre>
     *
     * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
     */
    public org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme getAutogeneratedTheme() {
      return instance.getAutogeneratedTheme();
    }
    /**
     * <pre>
     * If set, autogenerated theme is used.
     * </pre>
     *
     * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
     */
    public Builder setAutogeneratedTheme(org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme value) {
      copyOnWrite();
      instance.setAutogeneratedTheme(value);
      return this;
      }
    /**
     * <pre>
     * If set, autogenerated theme is used.
     * </pre>
     *
     * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
     */
    public Builder setAutogeneratedTheme(
        org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme.Builder builderForValue) {
      copyOnWrite();
      instance.setAutogeneratedTheme(builderForValue);
      return this;
    }
    /**
     * <pre>
     * If set, autogenerated theme is used.
     * </pre>
     *
     * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
     */
    public Builder mergeAutogeneratedTheme(org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme value) {
      copyOnWrite();
      instance.mergeAutogeneratedTheme(value);
      return this;
    }
    /**
     * <pre>
     * If set, autogenerated theme is used.
     * </pre>
     *
     * <code>optional .sync_pb.ThemeSpecifics.AutogeneratedTheme autogenerated_theme = 6;</code>
     */
    public Builder clearAutogeneratedTheme() {  copyOnWrite();
      instance.clearAutogeneratedTheme();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ThemeSpecifics)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ThemeSpecifics();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.ThemeSpecifics other = (org.chromium.components.sync.protocol.ThemeSpecifics) arg1;
        useCustomTheme_ = visitor.visitBoolean(
            hasUseCustomTheme(), useCustomTheme_,
            other.hasUseCustomTheme(), other.useCustomTheme_);
        useSystemThemeByDefault_ = visitor.visitBoolean(
            hasUseSystemThemeByDefault(), useSystemThemeByDefault_,
            other.hasUseSystemThemeByDefault(), other.useSystemThemeByDefault_);
        customThemeName_ = visitor.visitString(
            hasCustomThemeName(), customThemeName_,
            other.hasCustomThemeName(), other.customThemeName_);
        customThemeId_ = visitor.visitString(
            hasCustomThemeId(), customThemeId_,
            other.hasCustomThemeId(), other.customThemeId_);
        customThemeUpdateUrl_ = visitor.visitString(
            hasCustomThemeUpdateUrl(), customThemeUpdateUrl_,
            other.hasCustomThemeUpdateUrl(), other.customThemeUpdateUrl_);
        autogeneratedTheme_ = visitor.visitMessage(autogeneratedTheme_, other.autogeneratedTheme_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                useCustomTheme_ = input.readBool();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                useSystemThemeByDefault_ = input.readBool();
                break;
              }
              case 26: {
                String s = input.readString();
                bitField0_ |= 0x00000004;
                customThemeName_ = s;
                break;
              }
              case 34: {
                String s = input.readString();
                bitField0_ |= 0x00000008;
                customThemeId_ = s;
                break;
              }
              case 42: {
                String s = input.readString();
                bitField0_ |= 0x00000010;
                customThemeUpdateUrl_ = s;
                break;
              }
              case 50: {
                org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = autogeneratedTheme_.toBuilder();
                }
                autogeneratedTheme_ = input.readMessage(org.chromium.components.sync.protocol.ThemeSpecifics.AutogeneratedTheme.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(autogeneratedTheme_);
                  autogeneratedTheme_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ThemeSpecifics.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ThemeSpecifics)
  private static final org.chromium.components.sync.protocol.ThemeSpecifics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ThemeSpecifics();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.ThemeSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ThemeSpecifics> PARSER;

  public static com.google.protobuf.Parser<ThemeSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

