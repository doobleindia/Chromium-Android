// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: managed_user_specifics.proto

package org.chromium.components.sync.protocol;

public interface ManagedUserSpecificsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sync_pb.ManagedUserSpecifics)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * A randomly-generated identifier for the managed user.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  boolean hasId();
  /**
   * <pre>
   * A randomly-generated identifier for the managed user.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  java.lang.String getId();
  /**
   * <pre>
   * A randomly-generated identifier for the managed user.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * The human-visible name of the managed user
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  boolean hasName();
  /**
   * <pre>
   * The human-visible name of the managed user
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  java.lang.String getName();
  /**
   * <pre>
   * The human-visible name of the managed user
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * This flag is set by the server to acknowledge that it has committed a
   * newly created managed user.
   * </pre>
   *
   * <code>optional bool acknowledged = 3 [default = false];</code>
   */
  boolean hasAcknowledged();
  /**
   * <pre>
   * This flag is set by the server to acknowledge that it has committed a
   * newly created managed user.
   * </pre>
   *
   * <code>optional bool acknowledged = 3 [default = false];</code>
   */
  boolean getAcknowledged();

  /**
   * <pre>
   * Master key for managed user cryptohome.
   * </pre>
   *
   * <code>optional string master_key = 4;</code>
   */
  boolean hasMasterKey();
  /**
   * <pre>
   * Master key for managed user cryptohome.
   * </pre>
   *
   * <code>optional string master_key = 4;</code>
   */
  java.lang.String getMasterKey();
  /**
   * <pre>
   * Master key for managed user cryptohome.
   * </pre>
   *
   * <code>optional string master_key = 4;</code>
   */
  com.google.protobuf.ByteString
      getMasterKeyBytes();

  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome.
   * It has the following format:
   * "chrome-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chrome_avatar = 5;</code>
   */
  boolean hasChromeAvatar();
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome.
   * It has the following format:
   * "chrome-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chrome_avatar = 5;</code>
   */
  java.lang.String getChromeAvatar();
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome.
   * It has the following format:
   * "chrome-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chrome_avatar = 5;</code>
   */
  com.google.protobuf.ByteString
      getChromeAvatarBytes();

  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome OS.
   * It has the following format:
   * "chromeos-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chromeos_avatar = 6;</code>
   */
  boolean hasChromeosAvatar();
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome OS.
   * It has the following format:
   * "chromeos-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chromeos_avatar = 6;</code>
   */
  java.lang.String getChromeosAvatar();
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome OS.
   * It has the following format:
   * "chromeos-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chromeos_avatar = 6;</code>
   */
  com.google.protobuf.ByteString
      getChromeosAvatarBytes();

  /**
   * <pre>
   * Key for signing supervised user's password.
   * </pre>
   *
   * <code>optional string password_signature_key = 7;</code>
   */
  boolean hasPasswordSignatureKey();
  /**
   * <pre>
   * Key for signing supervised user's password.
   * </pre>
   *
   * <code>optional string password_signature_key = 7;</code>
   */
  java.lang.String getPasswordSignatureKey();
  /**
   * <pre>
   * Key for signing supervised user's password.
   * </pre>
   *
   * <code>optional string password_signature_key = 7;</code>
   */
  com.google.protobuf.ByteString
      getPasswordSignatureKeyBytes();

  /**
   * <pre>
   * Key for encrypting supervised user's password.
   * </pre>
   *
   * <code>optional string password_encryption_key = 8;</code>
   */
  boolean hasPasswordEncryptionKey();
  /**
   * <pre>
   * Key for encrypting supervised user's password.
   * </pre>
   *
   * <code>optional string password_encryption_key = 8;</code>
   */
  java.lang.String getPasswordEncryptionKey();
  /**
   * <pre>
   * Key for encrypting supervised user's password.
   * </pre>
   *
   * <code>optional string password_encryption_key = 8;</code>
   */
  com.google.protobuf.ByteString
      getPasswordEncryptionKeyBytes();
}
