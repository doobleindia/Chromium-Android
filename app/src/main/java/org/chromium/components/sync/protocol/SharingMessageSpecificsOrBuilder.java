// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sharing_message_specifics.proto

package org.chromium.components.sync.protocol;

public interface SharingMessageSpecificsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sync_pb.SharingMessageSpecifics)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Unique identifier of message.
   * </pre>
   *
   * <code>optional string message_id = 1;</code>
   */
  boolean hasMessageId();
  /**
   * <pre>
   * Unique identifier of message.
   * </pre>
   *
   * <code>optional string message_id = 1;</code>
   */
  java.lang.String getMessageId();
  /**
   * <pre>
   * Unique identifier of message.
   * </pre>
   *
   * <code>optional string message_id = 1;</code>
   */
  com.google.protobuf.ByteString
      getMessageIdBytes();

  /**
   * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
   */
  boolean hasChannelConfiguration();
  /**
   * <code>optional .sync_pb.SharingMessageSpecifics.ChannelConfiguration channel_configuration = 2;</code>
   */
  org.chromium.components.sync.protocol.SharingMessageSpecifics.ChannelConfiguration getChannelConfiguration();

  /**
   * <pre>
   * Payload encrypted using the target user keys according to WebPush
   * encryption scheme. The payload has to be a valid
   * chrome/browser/sharing/proto/sharing_message.proto serialized using
   * SerializeToString.
   * </pre>
   *
   * <code>optional bytes payload = 3;</code>
   */
  boolean hasPayload();
  /**
   * <pre>
   * Payload encrypted using the target user keys according to WebPush
   * encryption scheme. The payload has to be a valid
   * chrome/browser/sharing/proto/sharing_message.proto serialized using
   * SerializeToString.
   * </pre>
   *
   * <code>optional bytes payload = 3;</code>
   */
  com.google.protobuf.ByteString getPayload();
}
