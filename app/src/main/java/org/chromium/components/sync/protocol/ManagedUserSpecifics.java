// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: managed_user_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Properties of managed user sync objects.
 * </pre>
 *
 * Protobuf type {@code sync_pb.ManagedUserSpecifics}
 */
public  final class ManagedUserSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        ManagedUserSpecifics, ManagedUserSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ManagedUserSpecifics)
    ManagedUserSpecificsOrBuilder {
  private ManagedUserSpecifics() {
    id_ = "";
    name_ = "";
    masterKey_ = "";
    chromeAvatar_ = "";
    chromeosAvatar_ = "";
    passwordSignatureKey_ = "";
    passwordEncryptionKey_ = "";
  }
  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private java.lang.String id_;
  /**
   * <pre>
   * A randomly-generated identifier for the managed user.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  public boolean hasId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * A randomly-generated identifier for the managed user.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  public java.lang.String getId() {
    return id_;
  }
  /**
   * <pre>
   * A randomly-generated identifier for the managed user.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(id_);
  }
  /**
   * <pre>
   * A randomly-generated identifier for the managed user.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void setId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    id_ = value;
  }
  /**
   * <pre>
   * A randomly-generated identifier for the managed user.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void clearId() {
    bitField0_ = (bitField0_ & ~0x00000001);
    id_ = getDefaultInstance().getId();
  }
  /**
   * <pre>
   * A randomly-generated identifier for the managed user.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void setIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    id_ = value.toStringUtf8();
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private java.lang.String name_;
  /**
   * <pre>
   * The human-visible name of the managed user
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  public boolean hasName() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * The human-visible name of the managed user
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * The human-visible name of the managed user
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * The human-visible name of the managed user
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  private void setName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    name_ = value;
  }
  /**
   * <pre>
   * The human-visible name of the managed user
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  private void clearName() {
    bitField0_ = (bitField0_ & ~0x00000002);
    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * The human-visible name of the managed user
   * </pre>
   *
   * <code>optional string name = 2;</code>
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    name_ = value.toStringUtf8();
  }

  public static final int ACKNOWLEDGED_FIELD_NUMBER = 3;
  private boolean acknowledged_;
  /**
   * <pre>
   * This flag is set by the server to acknowledge that it has committed a
   * newly created managed user.
   * </pre>
   *
   * <code>optional bool acknowledged = 3 [default = false];</code>
   */
  public boolean hasAcknowledged() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * This flag is set by the server to acknowledge that it has committed a
   * newly created managed user.
   * </pre>
   *
   * <code>optional bool acknowledged = 3 [default = false];</code>
   */
  public boolean getAcknowledged() {
    return acknowledged_;
  }
  /**
   * <pre>
   * This flag is set by the server to acknowledge that it has committed a
   * newly created managed user.
   * </pre>
   *
   * <code>optional bool acknowledged = 3 [default = false];</code>
   */
  private void setAcknowledged(boolean value) {
    bitField0_ |= 0x00000004;
    acknowledged_ = value;
  }
  /**
   * <pre>
   * This flag is set by the server to acknowledge that it has committed a
   * newly created managed user.
   * </pre>
   *
   * <code>optional bool acknowledged = 3 [default = false];</code>
   */
  private void clearAcknowledged() {
    bitField0_ = (bitField0_ & ~0x00000004);
    acknowledged_ = false;
  }

  public static final int MASTER_KEY_FIELD_NUMBER = 4;
  private java.lang.String masterKey_;
  /**
   * <pre>
   * Master key for managed user cryptohome.
   * </pre>
   *
   * <code>optional string master_key = 4;</code>
   */
  public boolean hasMasterKey() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * Master key for managed user cryptohome.
   * </pre>
   *
   * <code>optional string master_key = 4;</code>
   */
  public java.lang.String getMasterKey() {
    return masterKey_;
  }
  /**
   * <pre>
   * Master key for managed user cryptohome.
   * </pre>
   *
   * <code>optional string master_key = 4;</code>
   */
  public com.google.protobuf.ByteString
      getMasterKeyBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(masterKey_);
  }
  /**
   * <pre>
   * Master key for managed user cryptohome.
   * </pre>
   *
   * <code>optional string master_key = 4;</code>
   */
  private void setMasterKey(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    masterKey_ = value;
  }
  /**
   * <pre>
   * Master key for managed user cryptohome.
   * </pre>
   *
   * <code>optional string master_key = 4;</code>
   */
  private void clearMasterKey() {
    bitField0_ = (bitField0_ & ~0x00000008);
    masterKey_ = getDefaultInstance().getMasterKey();
  }
  /**
   * <pre>
   * Master key for managed user cryptohome.
   * </pre>
   *
   * <code>optional string master_key = 4;</code>
   */
  private void setMasterKeyBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    masterKey_ = value.toStringUtf8();
  }

  public static final int CHROME_AVATAR_FIELD_NUMBER = 5;
  private java.lang.String chromeAvatar_;
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome.
   * It has the following format:
   * "chrome-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chrome_avatar = 5;</code>
   */
  public boolean hasChromeAvatar() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome.
   * It has the following format:
   * "chrome-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chrome_avatar = 5;</code>
   */
  public java.lang.String getChromeAvatar() {
    return chromeAvatar_;
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome.
   * It has the following format:
   * "chrome-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chrome_avatar = 5;</code>
   */
  public com.google.protobuf.ByteString
      getChromeAvatarBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(chromeAvatar_);
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome.
   * It has the following format:
   * "chrome-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chrome_avatar = 5;</code>
   */
  private void setChromeAvatar(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
    chromeAvatar_ = value;
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome.
   * It has the following format:
   * "chrome-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chrome_avatar = 5;</code>
   */
  private void clearChromeAvatar() {
    bitField0_ = (bitField0_ & ~0x00000010);
    chromeAvatar_ = getDefaultInstance().getChromeAvatar();
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome.
   * It has the following format:
   * "chrome-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chrome_avatar = 5;</code>
   */
  private void setChromeAvatarBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
    chromeAvatar_ = value.toStringUtf8();
  }

  public static final int CHROMEOS_AVATAR_FIELD_NUMBER = 6;
  private java.lang.String chromeosAvatar_;
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome OS.
   * It has the following format:
   * "chromeos-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chromeos_avatar = 6;</code>
   */
  public boolean hasChromeosAvatar() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome OS.
   * It has the following format:
   * "chromeos-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chromeos_avatar = 6;</code>
   */
  public java.lang.String getChromeosAvatar() {
    return chromeosAvatar_;
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome OS.
   * It has the following format:
   * "chromeos-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chromeos_avatar = 6;</code>
   */
  public com.google.protobuf.ByteString
      getChromeosAvatarBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(chromeosAvatar_);
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome OS.
   * It has the following format:
   * "chromeos-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chromeos_avatar = 6;</code>
   */
  private void setChromeosAvatar(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
    chromeosAvatar_ = value;
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome OS.
   * It has the following format:
   * "chromeos-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chromeos_avatar = 6;</code>
   */
  private void clearChromeosAvatar() {
    bitField0_ = (bitField0_ & ~0x00000020);
    chromeosAvatar_ = getDefaultInstance().getChromeosAvatar();
  }
  /**
   * <pre>
   * A string representing the index of the supervised user avatar on Chrome OS.
   * It has the following format:
   * "chromeos-avatar-index:INDEX" where INDEX is an integer.
   * </pre>
   *
   * <code>optional string chromeos_avatar = 6;</code>
   */
  private void setChromeosAvatarBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
    chromeosAvatar_ = value.toStringUtf8();
  }

  public static final int PASSWORD_SIGNATURE_KEY_FIELD_NUMBER = 7;
  private java.lang.String passwordSignatureKey_;
  /**
   * <pre>
   * Key for signing supervised user's password.
   * </pre>
   *
   * <code>optional string password_signature_key = 7;</code>
   */
  public boolean hasPasswordSignatureKey() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   * Key for signing supervised user's password.
   * </pre>
   *
   * <code>optional string password_signature_key = 7;</code>
   */
  public java.lang.String getPasswordSignatureKey() {
    return passwordSignatureKey_;
  }
  /**
   * <pre>
   * Key for signing supervised user's password.
   * </pre>
   *
   * <code>optional string password_signature_key = 7;</code>
   */
  public com.google.protobuf.ByteString
      getPasswordSignatureKeyBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(passwordSignatureKey_);
  }
  /**
   * <pre>
   * Key for signing supervised user's password.
   * </pre>
   *
   * <code>optional string password_signature_key = 7;</code>
   */
  private void setPasswordSignatureKey(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
    passwordSignatureKey_ = value;
  }
  /**
   * <pre>
   * Key for signing supervised user's password.
   * </pre>
   *
   * <code>optional string password_signature_key = 7;</code>
   */
  private void clearPasswordSignatureKey() {
    bitField0_ = (bitField0_ & ~0x00000040);
    passwordSignatureKey_ = getDefaultInstance().getPasswordSignatureKey();
  }
  /**
   * <pre>
   * Key for signing supervised user's password.
   * </pre>
   *
   * <code>optional string password_signature_key = 7;</code>
   */
  private void setPasswordSignatureKeyBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
    passwordSignatureKey_ = value.toStringUtf8();
  }

  public static final int PASSWORD_ENCRYPTION_KEY_FIELD_NUMBER = 8;
  private java.lang.String passwordEncryptionKey_;
  /**
   * <pre>
   * Key for encrypting supervised user's password.
   * </pre>
   *
   * <code>optional string password_encryption_key = 8;</code>
   */
  public boolean hasPasswordEncryptionKey() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   * Key for encrypting supervised user's password.
   * </pre>
   *
   * <code>optional string password_encryption_key = 8;</code>
   */
  public java.lang.String getPasswordEncryptionKey() {
    return passwordEncryptionKey_;
  }
  /**
   * <pre>
   * Key for encrypting supervised user's password.
   * </pre>
   *
   * <code>optional string password_encryption_key = 8;</code>
   */
  public com.google.protobuf.ByteString
      getPasswordEncryptionKeyBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(passwordEncryptionKey_);
  }
  /**
   * <pre>
   * Key for encrypting supervised user's password.
   * </pre>
   *
   * <code>optional string password_encryption_key = 8;</code>
   */
  private void setPasswordEncryptionKey(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
    passwordEncryptionKey_ = value;
  }
  /**
   * <pre>
   * Key for encrypting supervised user's password.
   * </pre>
   *
   * <code>optional string password_encryption_key = 8;</code>
   */
  private void clearPasswordEncryptionKey() {
    bitField0_ = (bitField0_ & ~0x00000080);
    passwordEncryptionKey_ = getDefaultInstance().getPasswordEncryptionKey();
  }
  /**
   * <pre>
   * Key for encrypting supervised user's password.
   * </pre>
   *
   * <code>optional string password_encryption_key = 8;</code>
   */
  private void setPasswordEncryptionKeyBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
    passwordEncryptionKey_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getId());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeString(2, getName());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeBool(3, acknowledged_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeString(4, getMasterKey());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeString(5, getChromeAvatar());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeString(6, getChromeosAvatar());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeString(7, getPasswordSignatureKey());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeString(8, getPasswordEncryptionKey());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getId());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getName());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, acknowledged_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(4, getMasterKey());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(5, getChromeAvatar());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(6, getChromeosAvatar());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(7, getPasswordSignatureKey());
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(8, getPasswordEncryptionKey());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ManagedUserSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ManagedUserSpecifics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Properties of managed user sync objects.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ManagedUserSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ManagedUserSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ManagedUserSpecifics)
      org.chromium.components.sync.protocol.ManagedUserSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ManagedUserSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * A randomly-generated identifier for the managed user.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public boolean hasId() {
      return instance.hasId();
    }
    /**
     * <pre>
     * A randomly-generated identifier for the managed user.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      return instance.getId();
    }
    /**
     * <pre>
     * A randomly-generated identifier for the managed user.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      return instance.getIdBytes();
    }
    /**
     * <pre>
     * A randomly-generated identifier for the managed user.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder setId(
        java.lang.String value) {
      copyOnWrite();
      instance.setId(value);
      return this;
    }
    /**
     * <pre>
     * A randomly-generated identifier for the managed user.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder clearId() {
      copyOnWrite();
      instance.clearId();
      return this;
    }
    /**
     * <pre>
     * A randomly-generated identifier for the managed user.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * The human-visible name of the managed user
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public boolean hasName() {
      return instance.hasName();
    }
    /**
     * <pre>
     * The human-visible name of the managed user
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * The human-visible name of the managed user
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * The human-visible name of the managed user
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * The human-visible name of the managed user
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * The human-visible name of the managed user
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * This flag is set by the server to acknowledge that it has committed a
     * newly created managed user.
     * </pre>
     *
     * <code>optional bool acknowledged = 3 [default = false];</code>
     */
    public boolean hasAcknowledged() {
      return instance.hasAcknowledged();
    }
    /**
     * <pre>
     * This flag is set by the server to acknowledge that it has committed a
     * newly created managed user.
     * </pre>
     *
     * <code>optional bool acknowledged = 3 [default = false];</code>
     */
    public boolean getAcknowledged() {
      return instance.getAcknowledged();
    }
    /**
     * <pre>
     * This flag is set by the server to acknowledge that it has committed a
     * newly created managed user.
     * </pre>
     *
     * <code>optional bool acknowledged = 3 [default = false];</code>
     */
    public Builder setAcknowledged(boolean value) {
      copyOnWrite();
      instance.setAcknowledged(value);
      return this;
    }
    /**
     * <pre>
     * This flag is set by the server to acknowledge that it has committed a
     * newly created managed user.
     * </pre>
     *
     * <code>optional bool acknowledged = 3 [default = false];</code>
     */
    public Builder clearAcknowledged() {
      copyOnWrite();
      instance.clearAcknowledged();
      return this;
    }

    /**
     * <pre>
     * Master key for managed user cryptohome.
     * </pre>
     *
     * <code>optional string master_key = 4;</code>
     */
    public boolean hasMasterKey() {
      return instance.hasMasterKey();
    }
    /**
     * <pre>
     * Master key for managed user cryptohome.
     * </pre>
     *
     * <code>optional string master_key = 4;</code>
     */
    public java.lang.String getMasterKey() {
      return instance.getMasterKey();
    }
    /**
     * <pre>
     * Master key for managed user cryptohome.
     * </pre>
     *
     * <code>optional string master_key = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMasterKeyBytes() {
      return instance.getMasterKeyBytes();
    }
    /**
     * <pre>
     * Master key for managed user cryptohome.
     * </pre>
     *
     * <code>optional string master_key = 4;</code>
     */
    public Builder setMasterKey(
        java.lang.String value) {
      copyOnWrite();
      instance.setMasterKey(value);
      return this;
    }
    /**
     * <pre>
     * Master key for managed user cryptohome.
     * </pre>
     *
     * <code>optional string master_key = 4;</code>
     */
    public Builder clearMasterKey() {
      copyOnWrite();
      instance.clearMasterKey();
      return this;
    }
    /**
     * <pre>
     * Master key for managed user cryptohome.
     * </pre>
     *
     * <code>optional string master_key = 4;</code>
     */
    public Builder setMasterKeyBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMasterKeyBytes(value);
      return this;
    }

    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome.
     * It has the following format:
     * "chrome-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chrome_avatar = 5;</code>
     */
    public boolean hasChromeAvatar() {
      return instance.hasChromeAvatar();
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome.
     * It has the following format:
     * "chrome-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chrome_avatar = 5;</code>
     */
    public java.lang.String getChromeAvatar() {
      return instance.getChromeAvatar();
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome.
     * It has the following format:
     * "chrome-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chrome_avatar = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChromeAvatarBytes() {
      return instance.getChromeAvatarBytes();
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome.
     * It has the following format:
     * "chrome-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chrome_avatar = 5;</code>
     */
    public Builder setChromeAvatar(
        java.lang.String value) {
      copyOnWrite();
      instance.setChromeAvatar(value);
      return this;
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome.
     * It has the following format:
     * "chrome-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chrome_avatar = 5;</code>
     */
    public Builder clearChromeAvatar() {
      copyOnWrite();
      instance.clearChromeAvatar();
      return this;
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome.
     * It has the following format:
     * "chrome-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chrome_avatar = 5;</code>
     */
    public Builder setChromeAvatarBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setChromeAvatarBytes(value);
      return this;
    }

    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome OS.
     * It has the following format:
     * "chromeos-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chromeos_avatar = 6;</code>
     */
    public boolean hasChromeosAvatar() {
      return instance.hasChromeosAvatar();
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome OS.
     * It has the following format:
     * "chromeos-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chromeos_avatar = 6;</code>
     */
    public java.lang.String getChromeosAvatar() {
      return instance.getChromeosAvatar();
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome OS.
     * It has the following format:
     * "chromeos-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chromeos_avatar = 6;</code>
     */
    public com.google.protobuf.ByteString
        getChromeosAvatarBytes() {
      return instance.getChromeosAvatarBytes();
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome OS.
     * It has the following format:
     * "chromeos-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chromeos_avatar = 6;</code>
     */
    public Builder setChromeosAvatar(
        java.lang.String value) {
      copyOnWrite();
      instance.setChromeosAvatar(value);
      return this;
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome OS.
     * It has the following format:
     * "chromeos-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chromeos_avatar = 6;</code>
     */
    public Builder clearChromeosAvatar() {
      copyOnWrite();
      instance.clearChromeosAvatar();
      return this;
    }
    /**
     * <pre>
     * A string representing the index of the supervised user avatar on Chrome OS.
     * It has the following format:
     * "chromeos-avatar-index:INDEX" where INDEX is an integer.
     * </pre>
     *
     * <code>optional string chromeos_avatar = 6;</code>
     */
    public Builder setChromeosAvatarBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setChromeosAvatarBytes(value);
      return this;
    }

    /**
     * <pre>
     * Key for signing supervised user's password.
     * </pre>
     *
     * <code>optional string password_signature_key = 7;</code>
     */
    public boolean hasPasswordSignatureKey() {
      return instance.hasPasswordSignatureKey();
    }
    /**
     * <pre>
     * Key for signing supervised user's password.
     * </pre>
     *
     * <code>optional string password_signature_key = 7;</code>
     */
    public java.lang.String getPasswordSignatureKey() {
      return instance.getPasswordSignatureKey();
    }
    /**
     * <pre>
     * Key for signing supervised user's password.
     * </pre>
     *
     * <code>optional string password_signature_key = 7;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordSignatureKeyBytes() {
      return instance.getPasswordSignatureKeyBytes();
    }
    /**
     * <pre>
     * Key for signing supervised user's password.
     * </pre>
     *
     * <code>optional string password_signature_key = 7;</code>
     */
    public Builder setPasswordSignatureKey(
        java.lang.String value) {
      copyOnWrite();
      instance.setPasswordSignatureKey(value);
      return this;
    }
    /**
     * <pre>
     * Key for signing supervised user's password.
     * </pre>
     *
     * <code>optional string password_signature_key = 7;</code>
     */
    public Builder clearPasswordSignatureKey() {
      copyOnWrite();
      instance.clearPasswordSignatureKey();
      return this;
    }
    /**
     * <pre>
     * Key for signing supervised user's password.
     * </pre>
     *
     * <code>optional string password_signature_key = 7;</code>
     */
    public Builder setPasswordSignatureKeyBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPasswordSignatureKeyBytes(value);
      return this;
    }

    /**
     * <pre>
     * Key for encrypting supervised user's password.
     * </pre>
     *
     * <code>optional string password_encryption_key = 8;</code>
     */
    public boolean hasPasswordEncryptionKey() {
      return instance.hasPasswordEncryptionKey();
    }
    /**
     * <pre>
     * Key for encrypting supervised user's password.
     * </pre>
     *
     * <code>optional string password_encryption_key = 8;</code>
     */
    public java.lang.String getPasswordEncryptionKey() {
      return instance.getPasswordEncryptionKey();
    }
    /**
     * <pre>
     * Key for encrypting supervised user's password.
     * </pre>
     *
     * <code>optional string password_encryption_key = 8;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordEncryptionKeyBytes() {
      return instance.getPasswordEncryptionKeyBytes();
    }
    /**
     * <pre>
     * Key for encrypting supervised user's password.
     * </pre>
     *
     * <code>optional string password_encryption_key = 8;</code>
     */
    public Builder setPasswordEncryptionKey(
        java.lang.String value) {
      copyOnWrite();
      instance.setPasswordEncryptionKey(value);
      return this;
    }
    /**
     * <pre>
     * Key for encrypting supervised user's password.
     * </pre>
     *
     * <code>optional string password_encryption_key = 8;</code>
     */
    public Builder clearPasswordEncryptionKey() {
      copyOnWrite();
      instance.clearPasswordEncryptionKey();
      return this;
    }
    /**
     * <pre>
     * Key for encrypting supervised user's password.
     * </pre>
     *
     * <code>optional string password_encryption_key = 8;</code>
     */
    public Builder setPasswordEncryptionKeyBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPasswordEncryptionKeyBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ManagedUserSpecifics)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ManagedUserSpecifics();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.ManagedUserSpecifics other = (org.chromium.components.sync.protocol.ManagedUserSpecifics) arg1;
        id_ = visitor.visitString(
            hasId(), id_,
            other.hasId(), other.id_);
        name_ = visitor.visitString(
            hasName(), name_,
            other.hasName(), other.name_);
        acknowledged_ = visitor.visitBoolean(
            hasAcknowledged(), acknowledged_,
            other.hasAcknowledged(), other.acknowledged_);
        masterKey_ = visitor.visitString(
            hasMasterKey(), masterKey_,
            other.hasMasterKey(), other.masterKey_);
        chromeAvatar_ = visitor.visitString(
            hasChromeAvatar(), chromeAvatar_,
            other.hasChromeAvatar(), other.chromeAvatar_);
        chromeosAvatar_ = visitor.visitString(
            hasChromeosAvatar(), chromeosAvatar_,
            other.hasChromeosAvatar(), other.chromeosAvatar_);
        passwordSignatureKey_ = visitor.visitString(
            hasPasswordSignatureKey(), passwordSignatureKey_,
            other.hasPasswordSignatureKey(), other.passwordSignatureKey_);
        passwordEncryptionKey_ = visitor.visitString(
            hasPasswordEncryptionKey(), passwordEncryptionKey_,
            other.hasPasswordEncryptionKey(), other.passwordEncryptionKey_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                id_ = s;
                break;
              }
              case 18: {
                String s = input.readString();
                bitField0_ |= 0x00000002;
                name_ = s;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                acknowledged_ = input.readBool();
                break;
              }
              case 34: {
                String s = input.readString();
                bitField0_ |= 0x00000008;
                masterKey_ = s;
                break;
              }
              case 42: {
                String s = input.readString();
                bitField0_ |= 0x00000010;
                chromeAvatar_ = s;
                break;
              }
              case 50: {
                String s = input.readString();
                bitField0_ |= 0x00000020;
                chromeosAvatar_ = s;
                break;
              }
              case 58: {
                String s = input.readString();
                bitField0_ |= 0x00000040;
                passwordSignatureKey_ = s;
                break;
              }
              case 66: {
                String s = input.readString();
                bitField0_ |= 0x00000080;
                passwordEncryptionKey_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ManagedUserSpecifics.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ManagedUserSpecifics)
  private static final org.chromium.components.sync.protocol.ManagedUserSpecifics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ManagedUserSpecifics();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.ManagedUserSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ManagedUserSpecifics> PARSER;

  public static com.google.protobuf.Parser<ManagedUserSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

