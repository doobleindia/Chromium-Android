// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: session_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Properties of session sync objects.
 * </pre>
 *
 * Protobuf type {@code sync_pb.SessionHeader}
 */
public  final class SessionHeader extends
    com.google.protobuf.GeneratedMessageLite<
        SessionHeader, SessionHeader.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.SessionHeader)
    SessionHeaderOrBuilder {
  private SessionHeader() {
    window_ = emptyProtobufList();
    clientName_ = "";
  }
  private int bitField0_;
  public static final int WINDOW_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.components.sync.protocol.SessionWindow> window_;
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  public java.util.List<org.chromium.components.sync.protocol.SessionWindow> getWindowList() {
    return window_;
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  public java.util.List<? extends org.chromium.components.sync.protocol.SessionWindowOrBuilder> 
      getWindowOrBuilderList() {
    return window_;
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  public int getWindowCount() {
    return window_.size();
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  public org.chromium.components.sync.protocol.SessionWindow getWindow(int index) {
    return window_.get(index);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  public org.chromium.components.sync.protocol.SessionWindowOrBuilder getWindowOrBuilder(
      int index) {
    return window_.get(index);
  }
  private void ensureWindowIsMutable() {
    if (!window_.isModifiable()) {
      window_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(window_);
     }
  }

  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void setWindow(
      int index, org.chromium.components.sync.protocol.SessionWindow value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureWindowIsMutable();
    window_.set(index, value);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void setWindow(
      int index, org.chromium.components.sync.protocol.SessionWindow.Builder builderForValue) {
    ensureWindowIsMutable();
    window_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void addWindow(org.chromium.components.sync.protocol.SessionWindow value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureWindowIsMutable();
    window_.add(value);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void addWindow(
      int index, org.chromium.components.sync.protocol.SessionWindow value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureWindowIsMutable();
    window_.add(index, value);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void addWindow(
      org.chromium.components.sync.protocol.SessionWindow.Builder builderForValue) {
    ensureWindowIsMutable();
    window_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void addWindow(
      int index, org.chromium.components.sync.protocol.SessionWindow.Builder builderForValue) {
    ensureWindowIsMutable();
    window_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void addAllWindow(
      java.lang.Iterable<? extends org.chromium.components.sync.protocol.SessionWindow> values) {
    ensureWindowIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, window_);
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void clearWindow() {
    window_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Each session is composed of windows.
   * </pre>
   *
   * <code>repeated .sync_pb.SessionWindow window = 2;</code>
   */
  private void removeWindow(int index) {
    ensureWindowIsMutable();
    window_.remove(index);
  }

  public static final int CLIENT_NAME_FIELD_NUMBER = 3;
  private java.lang.String clientName_;
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   */
  public boolean hasClientName() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   */
  public java.lang.String getClientName() {
    return clientName_;
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   */
  public com.google.protobuf.ByteString
      getClientNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(clientName_);
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   */
  private void setClientName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    clientName_ = value;
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   */
  private void clearClientName() {
    bitField0_ = (bitField0_ & ~0x00000001);
    clientName_ = getDefaultInstance().getClientName();
  }
  /**
   * <pre>
   * A non-unique but human-readable name to describe this client.
   * </pre>
   *
   * <code>optional string client_name = 3;</code>
   */
  private void setClientNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    clientName_ = value.toStringUtf8();
  }

  public static final int DEVICE_TYPE_FIELD_NUMBER = 4;
  private int deviceType_;
  /**
   * <pre>
   * The type of device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
   */
  public boolean hasDeviceType() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * The type of device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
   */
  public org.chromium.components.sync.protocol.SyncEnums.DeviceType getDeviceType() {
    org.chromium.components.sync.protocol.SyncEnums.DeviceType result = org.chromium.components.sync.protocol.SyncEnums.DeviceType.forNumber(deviceType_);
    return result == null ? org.chromium.components.sync.protocol.SyncEnums.DeviceType.TYPE_UNSET : result;
  }
  /**
   * <pre>
   * The type of device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
   */
  private void setDeviceType(org.chromium.components.sync.protocol.SyncEnums.DeviceType value) {
    if (value == null) {
      throw new NullPointerException();
    }
    bitField0_ |= 0x00000002;
    deviceType_ = value.getNumber();
  }
  /**
   * <pre>
   * The type of device.
   * </pre>
   *
   * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
   */
  private void clearDeviceType() {
    bitField0_ = (bitField0_ & ~0x00000002);
    deviceType_ = 0;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < window_.size(); i++) {
      output.writeMessage(2, window_.get(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(3, getClientName());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeEnum(4, deviceType_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < window_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, window_.get(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getClientName());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, deviceType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionHeader parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.SessionHeader prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Properties of session sync objects.
   * </pre>
   *
   * Protobuf type {@code sync_pb.SessionHeader}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.SessionHeader, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.SessionHeader)
      org.chromium.components.sync.protocol.SessionHeaderOrBuilder {
    // Construct using org.chromium.components.sync.protocol.SessionHeader.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public java.util.List<org.chromium.components.sync.protocol.SessionWindow> getWindowList() {
      return java.util.Collections.unmodifiableList(
          instance.getWindowList());
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public int getWindowCount() {
      return instance.getWindowCount();
    }/**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public org.chromium.components.sync.protocol.SessionWindow getWindow(int index) {
      return instance.getWindow(index);
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder setWindow(
        int index, org.chromium.components.sync.protocol.SessionWindow value) {
      copyOnWrite();
      instance.setWindow(index, value);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder setWindow(
        int index, org.chromium.components.sync.protocol.SessionWindow.Builder builderForValue) {
      copyOnWrite();
      instance.setWindow(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addWindow(org.chromium.components.sync.protocol.SessionWindow value) {
      copyOnWrite();
      instance.addWindow(value);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addWindow(
        int index, org.chromium.components.sync.protocol.SessionWindow value) {
      copyOnWrite();
      instance.addWindow(index, value);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addWindow(
        org.chromium.components.sync.protocol.SessionWindow.Builder builderForValue) {
      copyOnWrite();
      instance.addWindow(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addWindow(
        int index, org.chromium.components.sync.protocol.SessionWindow.Builder builderForValue) {
      copyOnWrite();
      instance.addWindow(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder addAllWindow(
        java.lang.Iterable<? extends org.chromium.components.sync.protocol.SessionWindow> values) {
      copyOnWrite();
      instance.addAllWindow(values);
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder clearWindow() {
      copyOnWrite();
      instance.clearWindow();
      return this;
    }
    /**
     * <pre>
     * Each session is composed of windows.
     * </pre>
     *
     * <code>repeated .sync_pb.SessionWindow window = 2;</code>
     */
    public Builder removeWindow(int index) {
      copyOnWrite();
      instance.removeWindow(index);
      return this;
    }

    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     */
    public boolean hasClientName() {
      return instance.hasClientName();
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     */
    public java.lang.String getClientName() {
      return instance.getClientName();
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getClientNameBytes() {
      return instance.getClientNameBytes();
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     */
    public Builder setClientName(
        java.lang.String value) {
      copyOnWrite();
      instance.setClientName(value);
      return this;
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     */
    public Builder clearClientName() {
      copyOnWrite();
      instance.clearClientName();
      return this;
    }
    /**
     * <pre>
     * A non-unique but human-readable name to describe this client.
     * </pre>
     *
     * <code>optional string client_name = 3;</code>
     */
    public Builder setClientNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setClientNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The type of device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
     */
    public boolean hasDeviceType() {
      return instance.hasDeviceType();
    }
    /**
     * <pre>
     * The type of device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
     */
    public org.chromium.components.sync.protocol.SyncEnums.DeviceType getDeviceType() {
      return instance.getDeviceType();
    }
    /**
     * <pre>
     * The type of device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
     */
    public Builder setDeviceType(org.chromium.components.sync.protocol.SyncEnums.DeviceType value) {
      copyOnWrite();
      instance.setDeviceType(value);
      return this;
    }
    /**
     * <pre>
     * The type of device.
     * </pre>
     *
     * <code>optional .sync_pb.SyncEnums.DeviceType device_type = 4;</code>
     */
    public Builder clearDeviceType() {
      copyOnWrite();
      instance.clearDeviceType();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.SessionHeader)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.SessionHeader();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        window_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.SessionHeader other = (org.chromium.components.sync.protocol.SessionHeader) arg1;
        window_= visitor.visitList(window_, other.window_);
        clientName_ = visitor.visitString(
            hasClientName(), clientName_,
            other.hasClientName(), other.clientName_);
        deviceType_ = visitor.visitInt(hasDeviceType(), deviceType_,
            other.hasDeviceType(), other.deviceType_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 18: {
                if (!window_.isModifiable()) {
                  window_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(window_);
                }
                window_.add(
                    input.readMessage(org.chromium.components.sync.protocol.SessionWindow.parser(), extensionRegistry));
                break;
              }
              case 26: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                clientName_ = s;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                org.chromium.components.sync.protocol.SyncEnums.DeviceType value = org.chromium.components.sync.protocol.SyncEnums.DeviceType.forNumber(rawValue);
                if (value == null) {
                  super.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  deviceType_ = rawValue;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.SessionHeader.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.SessionHeader)
  private static final org.chromium.components.sync.protocol.SessionHeader DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SessionHeader();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.SessionHeader getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SessionHeader> PARSER;

  public static com.google.protobuf.Parser<SessionHeader> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

