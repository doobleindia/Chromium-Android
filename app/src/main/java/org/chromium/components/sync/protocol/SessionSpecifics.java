// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: session_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.SessionSpecifics}
 */
public  final class SessionSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        SessionSpecifics, SessionSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.SessionSpecifics)
    SessionSpecificsOrBuilder {
  private SessionSpecifics() {
    sessionTag_ = "";
    tabNodeId_ = -1;
  }
  private int bitField0_;
  public static final int SESSION_TAG_FIELD_NUMBER = 1;
  private java.lang.String sessionTag_;
  /**
   * <pre>
   * Unique id for the client.
   * </pre>
   *
   * <code>optional string session_tag = 1;</code>
   */
  public boolean hasSessionTag() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Unique id for the client.
   * </pre>
   *
   * <code>optional string session_tag = 1;</code>
   */
  public java.lang.String getSessionTag() {
    return sessionTag_;
  }
  /**
   * <pre>
   * Unique id for the client.
   * </pre>
   *
   * <code>optional string session_tag = 1;</code>
   */
  public com.google.protobuf.ByteString
      getSessionTagBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(sessionTag_);
  }
  /**
   * <pre>
   * Unique id for the client.
   * </pre>
   *
   * <code>optional string session_tag = 1;</code>
   */
  private void setSessionTag(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    sessionTag_ = value;
  }
  /**
   * <pre>
   * Unique id for the client.
   * </pre>
   *
   * <code>optional string session_tag = 1;</code>
   */
  private void clearSessionTag() {
    bitField0_ = (bitField0_ & ~0x00000001);
    sessionTag_ = getDefaultInstance().getSessionTag();
  }
  /**
   * <pre>
   * Unique id for the client.
   * </pre>
   *
   * <code>optional string session_tag = 1;</code>
   */
  private void setSessionTagBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    sessionTag_ = value.toStringUtf8();
  }

  public static final int HEADER_FIELD_NUMBER = 2;
  private org.chromium.components.sync.protocol.SessionHeader header_;
  /**
   * <code>optional .sync_pb.SessionHeader header = 2;</code>
   */
  public boolean hasHeader() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional .sync_pb.SessionHeader header = 2;</code>
   */
  public org.chromium.components.sync.protocol.SessionHeader getHeader() {
    return header_ == null ? org.chromium.components.sync.protocol.SessionHeader.getDefaultInstance() : header_;
  }
  /**
   * <code>optional .sync_pb.SessionHeader header = 2;</code>
   */
  private void setHeader(org.chromium.components.sync.protocol.SessionHeader value) {
    if (value == null) {
      throw new NullPointerException();
    }
    header_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <code>optional .sync_pb.SessionHeader header = 2;</code>
   */
  private void setHeader(
      org.chromium.components.sync.protocol.SessionHeader.Builder builderForValue) {
    header_ = builderForValue.build();
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .sync_pb.SessionHeader header = 2;</code>
   */
  private void mergeHeader(org.chromium.components.sync.protocol.SessionHeader value) {
    if (header_ != null &&
        header_ != org.chromium.components.sync.protocol.SessionHeader.getDefaultInstance()) {
      header_ =
        org.chromium.components.sync.protocol.SessionHeader.newBuilder(header_).mergeFrom(value).buildPartial();
    } else {
      header_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .sync_pb.SessionHeader header = 2;</code>
   */
  private void clearHeader() {  header_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int TAB_FIELD_NUMBER = 3;
  private org.chromium.components.sync.protocol.SessionTab tab_;
  /**
   * <code>optional .sync_pb.SessionTab tab = 3;</code>
   */
  public boolean hasTab() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional .sync_pb.SessionTab tab = 3;</code>
   */
  public org.chromium.components.sync.protocol.SessionTab getTab() {
    return tab_ == null ? org.chromium.components.sync.protocol.SessionTab.getDefaultInstance() : tab_;
  }
  /**
   * <code>optional .sync_pb.SessionTab tab = 3;</code>
   */
  private void setTab(org.chromium.components.sync.protocol.SessionTab value) {
    if (value == null) {
      throw new NullPointerException();
    }
    tab_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <code>optional .sync_pb.SessionTab tab = 3;</code>
   */
  private void setTab(
      org.chromium.components.sync.protocol.SessionTab.Builder builderForValue) {
    tab_ = builderForValue.build();
    bitField0_ |= 0x00000004;
  }
  /**
   * <code>optional .sync_pb.SessionTab tab = 3;</code>
   */
  private void mergeTab(org.chromium.components.sync.protocol.SessionTab value) {
    if (tab_ != null &&
        tab_ != org.chromium.components.sync.protocol.SessionTab.getDefaultInstance()) {
      tab_ =
        org.chromium.components.sync.protocol.SessionTab.newBuilder(tab_).mergeFrom(value).buildPartial();
    } else {
      tab_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <code>optional .sync_pb.SessionTab tab = 3;</code>
   */
  private void clearTab() {  tab_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int TAB_NODE_ID_FIELD_NUMBER = 4;
  private int tabNodeId_;
  /**
   * <pre>
   * The local tab id used by sync. Unique across all nodes for that client.
   * </pre>
   *
   * <code>optional int32 tab_node_id = 4 [default = -1];</code>
   */
  public boolean hasTabNodeId() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * The local tab id used by sync. Unique across all nodes for that client.
   * </pre>
   *
   * <code>optional int32 tab_node_id = 4 [default = -1];</code>
   */
  public int getTabNodeId() {
    return tabNodeId_;
  }
  /**
   * <pre>
   * The local tab id used by sync. Unique across all nodes for that client.
   * </pre>
   *
   * <code>optional int32 tab_node_id = 4 [default = -1];</code>
   */
  private void setTabNodeId(int value) {
    bitField0_ |= 0x00000008;
    tabNodeId_ = value;
  }
  /**
   * <pre>
   * The local tab id used by sync. Unique across all nodes for that client.
   * </pre>
   *
   * <code>optional int32 tab_node_id = 4 [default = -1];</code>
   */
  private void clearTabNodeId() {
    bitField0_ = (bitField0_ & ~0x00000008);
    tabNodeId_ = -1;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getSessionTag());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(2, getHeader());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeMessage(3, getTab());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, tabNodeId_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getSessionTag());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getHeader());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTab());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, tabNodeId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.SessionSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.SessionSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.SessionSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.SessionSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.SessionSpecifics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.SessionSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.SessionSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.SessionSpecifics)
      org.chromium.components.sync.protocol.SessionSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.SessionSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Unique id for the client.
     * </pre>
     *
     * <code>optional string session_tag = 1;</code>
     */
    public boolean hasSessionTag() {
      return instance.hasSessionTag();
    }
    /**
     * <pre>
     * Unique id for the client.
     * </pre>
     *
     * <code>optional string session_tag = 1;</code>
     */
    public java.lang.String getSessionTag() {
      return instance.getSessionTag();
    }
    /**
     * <pre>
     * Unique id for the client.
     * </pre>
     *
     * <code>optional string session_tag = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSessionTagBytes() {
      return instance.getSessionTagBytes();
    }
    /**
     * <pre>
     * Unique id for the client.
     * </pre>
     *
     * <code>optional string session_tag = 1;</code>
     */
    public Builder setSessionTag(
        java.lang.String value) {
      copyOnWrite();
      instance.setSessionTag(value);
      return this;
    }
    /**
     * <pre>
     * Unique id for the client.
     * </pre>
     *
     * <code>optional string session_tag = 1;</code>
     */
    public Builder clearSessionTag() {
      copyOnWrite();
      instance.clearSessionTag();
      return this;
    }
    /**
     * <pre>
     * Unique id for the client.
     * </pre>
     *
     * <code>optional string session_tag = 1;</code>
     */
    public Builder setSessionTagBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSessionTagBytes(value);
      return this;
    }

    /**
     * <code>optional .sync_pb.SessionHeader header = 2;</code>
     */
    public boolean hasHeader() {
      return instance.hasHeader();
    }
    /**
     * <code>optional .sync_pb.SessionHeader header = 2;</code>
     */
    public org.chromium.components.sync.protocol.SessionHeader getHeader() {
      return instance.getHeader();
    }
    /**
     * <code>optional .sync_pb.SessionHeader header = 2;</code>
     */
    public Builder setHeader(org.chromium.components.sync.protocol.SessionHeader value) {
      copyOnWrite();
      instance.setHeader(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.SessionHeader header = 2;</code>
     */
    public Builder setHeader(
        org.chromium.components.sync.protocol.SessionHeader.Builder builderForValue) {
      copyOnWrite();
      instance.setHeader(builderForValue);
      return this;
    }
    /**
     * <code>optional .sync_pb.SessionHeader header = 2;</code>
     */
    public Builder mergeHeader(org.chromium.components.sync.protocol.SessionHeader value) {
      copyOnWrite();
      instance.mergeHeader(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.SessionHeader header = 2;</code>
     */
    public Builder clearHeader() {  copyOnWrite();
      instance.clearHeader();
      return this;
    }

    /**
     * <code>optional .sync_pb.SessionTab tab = 3;</code>
     */
    public boolean hasTab() {
      return instance.hasTab();
    }
    /**
     * <code>optional .sync_pb.SessionTab tab = 3;</code>
     */
    public org.chromium.components.sync.protocol.SessionTab getTab() {
      return instance.getTab();
    }
    /**
     * <code>optional .sync_pb.SessionTab tab = 3;</code>
     */
    public Builder setTab(org.chromium.components.sync.protocol.SessionTab value) {
      copyOnWrite();
      instance.setTab(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.SessionTab tab = 3;</code>
     */
    public Builder setTab(
        org.chromium.components.sync.protocol.SessionTab.Builder builderForValue) {
      copyOnWrite();
      instance.setTab(builderForValue);
      return this;
    }
    /**
     * <code>optional .sync_pb.SessionTab tab = 3;</code>
     */
    public Builder mergeTab(org.chromium.components.sync.protocol.SessionTab value) {
      copyOnWrite();
      instance.mergeTab(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.SessionTab tab = 3;</code>
     */
    public Builder clearTab() {  copyOnWrite();
      instance.clearTab();
      return this;
    }

    /**
     * <pre>
     * The local tab id used by sync. Unique across all nodes for that client.
     * </pre>
     *
     * <code>optional int32 tab_node_id = 4 [default = -1];</code>
     */
    public boolean hasTabNodeId() {
      return instance.hasTabNodeId();
    }
    /**
     * <pre>
     * The local tab id used by sync. Unique across all nodes for that client.
     * </pre>
     *
     * <code>optional int32 tab_node_id = 4 [default = -1];</code>
     */
    public int getTabNodeId() {
      return instance.getTabNodeId();
    }
    /**
     * <pre>
     * The local tab id used by sync. Unique across all nodes for that client.
     * </pre>
     *
     * <code>optional int32 tab_node_id = 4 [default = -1];</code>
     */
    public Builder setTabNodeId(int value) {
      copyOnWrite();
      instance.setTabNodeId(value);
      return this;
    }
    /**
     * <pre>
     * The local tab id used by sync. Unique across all nodes for that client.
     * </pre>
     *
     * <code>optional int32 tab_node_id = 4 [default = -1];</code>
     */
    public Builder clearTabNodeId() {
      copyOnWrite();
      instance.clearTabNodeId();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.SessionSpecifics)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.SessionSpecifics();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.SessionSpecifics other = (org.chromium.components.sync.protocol.SessionSpecifics) arg1;
        sessionTag_ = visitor.visitString(
            hasSessionTag(), sessionTag_,
            other.hasSessionTag(), other.sessionTag_);
        header_ = visitor.visitMessage(header_, other.header_);
        tab_ = visitor.visitMessage(tab_, other.tab_);
        tabNodeId_ = visitor.visitInt(
            hasTabNodeId(), tabNodeId_,
            other.hasTabNodeId(), other.tabNodeId_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                sessionTag_ = s;
                break;
              }
              case 18: {
                org.chromium.components.sync.protocol.SessionHeader.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = header_.toBuilder();
                }
                header_ = input.readMessage(org.chromium.components.sync.protocol.SessionHeader.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(header_);
                  header_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                org.chromium.components.sync.protocol.SessionTab.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = tab_.toBuilder();
                }
                tab_ = input.readMessage(org.chromium.components.sync.protocol.SessionTab.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(tab_);
                  tab_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                tabNodeId_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.SessionSpecifics.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.SessionSpecifics)
  private static final org.chromium.components.sync.protocol.SessionSpecifics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SessionSpecifics();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.SessionSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<SessionSpecifics> PARSER;

  public static com.google.protobuf.Parser<SessionSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

