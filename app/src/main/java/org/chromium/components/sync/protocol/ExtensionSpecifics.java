// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: extension_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Properties of extension sync objects.
 * Merge policy: the settings for the higher version number win; in
 * the case of a tie, server wins.
 * </pre>
 *
 * Protobuf type {@code sync_pb.ExtensionSpecifics}
 */
public  final class ExtensionSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        ExtensionSpecifics, ExtensionSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ExtensionSpecifics)
    ExtensionSpecificsOrBuilder {
  private ExtensionSpecifics() {
    id_ = "";
    version_ = "";
    updateUrl_ = "";
    name_ = "";
  }
  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private java.lang.String id_;
  /**
   * <pre>
   * Globally unique id for this extension.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  public boolean hasId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Globally unique id for this extension.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  public java.lang.String getId() {
    return id_;
  }
  /**
   * <pre>
   * Globally unique id for this extension.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(id_);
  }
  /**
   * <pre>
   * Globally unique id for this extension.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void setId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    id_ = value;
  }
  /**
   * <pre>
   * Globally unique id for this extension.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void clearId() {
    bitField0_ = (bitField0_ & ~0x00000001);
    id_ = getDefaultInstance().getId();
  }
  /**
   * <pre>
   * Globally unique id for this extension.
   * </pre>
   *
   * <code>optional string id = 1;</code>
   */
  private void setIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    id_ = value.toStringUtf8();
  }

  public static final int VERSION_FIELD_NUMBER = 2;
  private java.lang.String version_;
  /**
   * <pre>
   * The known installed version.
   * </pre>
   *
   * <code>optional string version = 2;</code>
   */
  public boolean hasVersion() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * The known installed version.
   * </pre>
   *
   * <code>optional string version = 2;</code>
   */
  public java.lang.String getVersion() {
    return version_;
  }
  /**
   * <pre>
   * The known installed version.
   * </pre>
   *
   * <code>optional string version = 2;</code>
   */
  public com.google.protobuf.ByteString
      getVersionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(version_);
  }
  /**
   * <pre>
   * The known installed version.
   * </pre>
   *
   * <code>optional string version = 2;</code>
   */
  private void setVersion(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    version_ = value;
  }
  /**
   * <pre>
   * The known installed version.
   * </pre>
   *
   * <code>optional string version = 2;</code>
   */
  private void clearVersion() {
    bitField0_ = (bitField0_ & ~0x00000002);
    version_ = getDefaultInstance().getVersion();
  }
  /**
   * <pre>
   * The known installed version.
   * </pre>
   *
   * <code>optional string version = 2;</code>
   */
  private void setVersionBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    version_ = value.toStringUtf8();
  }

  public static final int UPDATE_URL_FIELD_NUMBER = 3;
  private java.lang.String updateUrl_;
  /**
   * <pre>
   * Auto-update URL to use for this extension.  May be blank, in
   * which case the default one (i.e., the one for the Chrome
   * Extensions Gallery) is used.
   * </pre>
   *
   * <code>optional string update_url = 3;</code>
   */
  public boolean hasUpdateUrl() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * Auto-update URL to use for this extension.  May be blank, in
   * which case the default one (i.e., the one for the Chrome
   * Extensions Gallery) is used.
   * </pre>
   *
   * <code>optional string update_url = 3;</code>
   */
  public java.lang.String getUpdateUrl() {
    return updateUrl_;
  }
  /**
   * <pre>
   * Auto-update URL to use for this extension.  May be blank, in
   * which case the default one (i.e., the one for the Chrome
   * Extensions Gallery) is used.
   * </pre>
   *
   * <code>optional string update_url = 3;</code>
   */
  public com.google.protobuf.ByteString
      getUpdateUrlBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(updateUrl_);
  }
  /**
   * <pre>
   * Auto-update URL to use for this extension.  May be blank, in
   * which case the default one (i.e., the one for the Chrome
   * Extensions Gallery) is used.
   * </pre>
   *
   * <code>optional string update_url = 3;</code>
   */
  private void setUpdateUrl(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    updateUrl_ = value;
  }
  /**
   * <pre>
   * Auto-update URL to use for this extension.  May be blank, in
   * which case the default one (i.e., the one for the Chrome
   * Extensions Gallery) is used.
   * </pre>
   *
   * <code>optional string update_url = 3;</code>
   */
  private void clearUpdateUrl() {
    bitField0_ = (bitField0_ & ~0x00000004);
    updateUrl_ = getDefaultInstance().getUpdateUrl();
  }
  /**
   * <pre>
   * Auto-update URL to use for this extension.  May be blank, in
   * which case the default one (i.e., the one for the Chrome
   * Extensions Gallery) is used.
   * </pre>
   *
   * <code>optional string update_url = 3;</code>
   */
  private void setUpdateUrlBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    updateUrl_ = value.toStringUtf8();
  }

  public static final int ENABLED_FIELD_NUMBER = 4;
  private boolean enabled_;
  /**
   * <pre>
   * Whether or not this extension is enabled.
   * </pre>
   *
   * <code>optional bool enabled = 4;</code>
   */
  public boolean hasEnabled() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * Whether or not this extension is enabled.
   * </pre>
   *
   * <code>optional bool enabled = 4;</code>
   */
  public boolean getEnabled() {
    return enabled_;
  }
  /**
   * <pre>
   * Whether or not this extension is enabled.
   * </pre>
   *
   * <code>optional bool enabled = 4;</code>
   */
  private void setEnabled(boolean value) {
    bitField0_ |= 0x00000008;
    enabled_ = value;
  }
  /**
   * <pre>
   * Whether or not this extension is enabled.
   * </pre>
   *
   * <code>optional bool enabled = 4;</code>
   */
  private void clearEnabled() {
    bitField0_ = (bitField0_ & ~0x00000008);
    enabled_ = false;
  }

  public static final int INCOGNITO_ENABLED_FIELD_NUMBER = 5;
  private boolean incognitoEnabled_;
  /**
   * <pre>
   * Whether or not this extension is enabled in incognito mode.
   * </pre>
   *
   * <code>optional bool incognito_enabled = 5;</code>
   */
  public boolean hasIncognitoEnabled() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * Whether or not this extension is enabled in incognito mode.
   * </pre>
   *
   * <code>optional bool incognito_enabled = 5;</code>
   */
  public boolean getIncognitoEnabled() {
    return incognitoEnabled_;
  }
  /**
   * <pre>
   * Whether or not this extension is enabled in incognito mode.
   * </pre>
   *
   * <code>optional bool incognito_enabled = 5;</code>
   */
  private void setIncognitoEnabled(boolean value) {
    bitField0_ |= 0x00000010;
    incognitoEnabled_ = value;
  }
  /**
   * <pre>
   * Whether or not this extension is enabled in incognito mode.
   * </pre>
   *
   * <code>optional bool incognito_enabled = 5;</code>
   */
  private void clearIncognitoEnabled() {
    bitField0_ = (bitField0_ & ~0x00000010);
    incognitoEnabled_ = false;
  }

  public static final int NAME_FIELD_NUMBER = 6;
  private java.lang.String name_;
  /**
   * <pre>
   * The name of the extension. Used for bookmark apps.
   * </pre>
   *
   * <code>optional string name = 6;</code>
   */
  public boolean hasName() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * The name of the extension. Used for bookmark apps.
   * </pre>
   *
   * <code>optional string name = 6;</code>
   */
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * The name of the extension. Used for bookmark apps.
   * </pre>
   *
   * <code>optional string name = 6;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * The name of the extension. Used for bookmark apps.
   * </pre>
   *
   * <code>optional string name = 6;</code>
   */
  private void setName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
    name_ = value;
  }
  /**
   * <pre>
   * The name of the extension. Used for bookmark apps.
   * </pre>
   *
   * <code>optional string name = 6;</code>
   */
  private void clearName() {
    bitField0_ = (bitField0_ & ~0x00000020);
    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * The name of the extension. Used for bookmark apps.
   * </pre>
   *
   * <code>optional string name = 6;</code>
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
    name_ = value.toStringUtf8();
  }

  public static final int REMOTE_INSTALL_FIELD_NUMBER = 7;
  private boolean remoteInstall_;
  /**
   * <pre>
   * Whether this extension was installed remotely, and hasn't been approved by
   * a user in chrome yet.
   * </pre>
   *
   * <code>optional bool remote_install = 7;</code>
   */
  public boolean hasRemoteInstall() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   * Whether this extension was installed remotely, and hasn't been approved by
   * a user in chrome yet.
   * </pre>
   *
   * <code>optional bool remote_install = 7;</code>
   */
  public boolean getRemoteInstall() {
    return remoteInstall_;
  }
  /**
   * <pre>
   * Whether this extension was installed remotely, and hasn't been approved by
   * a user in chrome yet.
   * </pre>
   *
   * <code>optional bool remote_install = 7;</code>
   */
  private void setRemoteInstall(boolean value) {
    bitField0_ |= 0x00000040;
    remoteInstall_ = value;
  }
  /**
   * <pre>
   * Whether this extension was installed remotely, and hasn't been approved by
   * a user in chrome yet.
   * </pre>
   *
   * <code>optional bool remote_install = 7;</code>
   */
  private void clearRemoteInstall() {
    bitField0_ = (bitField0_ & ~0x00000040);
    remoteInstall_ = false;
  }

  public static final int INSTALLED_BY_CUSTODIAN_FIELD_NUMBER = 8;
  private boolean installedByCustodian_;
  /**
   * <pre>
   * DEPRECATED. See https://crbug.com/1014183.
   * </pre>
   *
   * <code>optional bool installed_by_custodian = 8 [deprecated = true];</code>
   */
  @java.lang.Deprecated public boolean hasInstalledByCustodian() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   * DEPRECATED. See https://crbug.com/1014183.
   * </pre>
   *
   * <code>optional bool installed_by_custodian = 8 [deprecated = true];</code>
   */
  @java.lang.Deprecated public boolean getInstalledByCustodian() {
    return installedByCustodian_;
  }
  /**
   * <pre>
   * DEPRECATED. See https://crbug.com/1014183.
   * </pre>
   *
   * <code>optional bool installed_by_custodian = 8 [deprecated = true];</code>
   */
  private void setInstalledByCustodian(boolean value) {
    bitField0_ |= 0x00000080;
    installedByCustodian_ = value;
  }
  /**
   * <pre>
   * DEPRECATED. See https://crbug.com/1014183.
   * </pre>
   *
   * <code>optional bool installed_by_custodian = 8 [deprecated = true];</code>
   */
  private void clearInstalledByCustodian() {
    bitField0_ = (bitField0_ & ~0x00000080);
    installedByCustodian_ = false;
  }

  public static final int ALL_URLS_ENABLED_FIELD_NUMBER = 9;
  private boolean allUrlsEnabled_;
  /**
   * <pre>
   * DEPRECATED. See https://crbug.com/839681.
   * </pre>
   *
   * <code>optional bool all_urls_enabled = 9 [deprecated = true];</code>
   */
  @java.lang.Deprecated public boolean hasAllUrlsEnabled() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   * DEPRECATED. See https://crbug.com/839681.
   * </pre>
   *
   * <code>optional bool all_urls_enabled = 9 [deprecated = true];</code>
   */
  @java.lang.Deprecated public boolean getAllUrlsEnabled() {
    return allUrlsEnabled_;
  }
  /**
   * <pre>
   * DEPRECATED. See https://crbug.com/839681.
   * </pre>
   *
   * <code>optional bool all_urls_enabled = 9 [deprecated = true];</code>
   */
  private void setAllUrlsEnabled(boolean value) {
    bitField0_ |= 0x00000100;
    allUrlsEnabled_ = value;
  }
  /**
   * <pre>
   * DEPRECATED. See https://crbug.com/839681.
   * </pre>
   *
   * <code>optional bool all_urls_enabled = 9 [deprecated = true];</code>
   */
  private void clearAllUrlsEnabled() {
    bitField0_ = (bitField0_ & ~0x00000100);
    allUrlsEnabled_ = false;
  }

  public static final int DISABLE_REASONS_FIELD_NUMBER = 10;
  private int disableReasons_;
  /**
   * <pre>
   * Bitmask of the set of reasons why the extension is disabled (see
   * extensions::disable_reason::DisableReason). Only relevant when enabled ==
   * false. Note that old clients (&lt;M45) won't set this, even when enabled is
   * false.
   * </pre>
   *
   * <code>optional int32 disable_reasons = 10;</code>
   */
  public boolean hasDisableReasons() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   * Bitmask of the set of reasons why the extension is disabled (see
   * extensions::disable_reason::DisableReason). Only relevant when enabled ==
   * false. Note that old clients (&lt;M45) won't set this, even when enabled is
   * false.
   * </pre>
   *
   * <code>optional int32 disable_reasons = 10;</code>
   */
  public int getDisableReasons() {
    return disableReasons_;
  }
  /**
   * <pre>
   * Bitmask of the set of reasons why the extension is disabled (see
   * extensions::disable_reason::DisableReason). Only relevant when enabled ==
   * false. Note that old clients (&lt;M45) won't set this, even when enabled is
   * false.
   * </pre>
   *
   * <code>optional int32 disable_reasons = 10;</code>
   */
  private void setDisableReasons(int value) {
    bitField0_ |= 0x00000200;
    disableReasons_ = value;
  }
  /**
   * <pre>
   * Bitmask of the set of reasons why the extension is disabled (see
   * extensions::disable_reason::DisableReason). Only relevant when enabled ==
   * false. Note that old clients (&lt;M45) won't set this, even when enabled is
   * false.
   * </pre>
   *
   * <code>optional int32 disable_reasons = 10;</code>
   */
  private void clearDisableReasons() {
    bitField0_ = (bitField0_ & ~0x00000200);
    disableReasons_ = 0;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getId());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeString(2, getVersion());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeString(3, getUpdateUrl());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeBool(4, enabled_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeBool(5, incognitoEnabled_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeString(6, getName());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeBool(7, remoteInstall_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeBool(8, installedByCustodian_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeBool(9, allUrlsEnabled_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(10, disableReasons_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getId());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getVersion());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getUpdateUrl());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, enabled_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, incognitoEnabled_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(6, getName());
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, remoteInstall_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, installedByCustodian_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, allUrlsEnabled_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, disableReasons_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ExtensionSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ExtensionSpecifics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Properties of extension sync objects.
   * Merge policy: the settings for the higher version number win; in
   * the case of a tie, server wins.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ExtensionSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ExtensionSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ExtensionSpecifics)
      org.chromium.components.sync.protocol.ExtensionSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ExtensionSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Globally unique id for this extension.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public boolean hasId() {
      return instance.hasId();
    }
    /**
     * <pre>
     * Globally unique id for this extension.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      return instance.getId();
    }
    /**
     * <pre>
     * Globally unique id for this extension.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      return instance.getIdBytes();
    }
    /**
     * <pre>
     * Globally unique id for this extension.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder setId(
        java.lang.String value) {
      copyOnWrite();
      instance.setId(value);
      return this;
    }
    /**
     * <pre>
     * Globally unique id for this extension.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder clearId() {
      copyOnWrite();
      instance.clearId();
      return this;
    }
    /**
     * <pre>
     * Globally unique id for this extension.
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * The known installed version.
     * </pre>
     *
     * <code>optional string version = 2;</code>
     */
    public boolean hasVersion() {
      return instance.hasVersion();
    }
    /**
     * <pre>
     * The known installed version.
     * </pre>
     *
     * <code>optional string version = 2;</code>
     */
    public java.lang.String getVersion() {
      return instance.getVersion();
    }
    /**
     * <pre>
     * The known installed version.
     * </pre>
     *
     * <code>optional string version = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      return instance.getVersionBytes();
    }
    /**
     * <pre>
     * The known installed version.
     * </pre>
     *
     * <code>optional string version = 2;</code>
     */
    public Builder setVersion(
        java.lang.String value) {
      copyOnWrite();
      instance.setVersion(value);
      return this;
    }
    /**
     * <pre>
     * The known installed version.
     * </pre>
     *
     * <code>optional string version = 2;</code>
     */
    public Builder clearVersion() {
      copyOnWrite();
      instance.clearVersion();
      return this;
    }
    /**
     * <pre>
     * The known installed version.
     * </pre>
     *
     * <code>optional string version = 2;</code>
     */
    public Builder setVersionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setVersionBytes(value);
      return this;
    }

    /**
     * <pre>
     * Auto-update URL to use for this extension.  May be blank, in
     * which case the default one (i.e., the one for the Chrome
     * Extensions Gallery) is used.
     * </pre>
     *
     * <code>optional string update_url = 3;</code>
     */
    public boolean hasUpdateUrl() {
      return instance.hasUpdateUrl();
    }
    /**
     * <pre>
     * Auto-update URL to use for this extension.  May be blank, in
     * which case the default one (i.e., the one for the Chrome
     * Extensions Gallery) is used.
     * </pre>
     *
     * <code>optional string update_url = 3;</code>
     */
    public java.lang.String getUpdateUrl() {
      return instance.getUpdateUrl();
    }
    /**
     * <pre>
     * Auto-update URL to use for this extension.  May be blank, in
     * which case the default one (i.e., the one for the Chrome
     * Extensions Gallery) is used.
     * </pre>
     *
     * <code>optional string update_url = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUpdateUrlBytes() {
      return instance.getUpdateUrlBytes();
    }
    /**
     * <pre>
     * Auto-update URL to use for this extension.  May be blank, in
     * which case the default one (i.e., the one for the Chrome
     * Extensions Gallery) is used.
     * </pre>
     *
     * <code>optional string update_url = 3;</code>
     */
    public Builder setUpdateUrl(
        java.lang.String value) {
      copyOnWrite();
      instance.setUpdateUrl(value);
      return this;
    }
    /**
     * <pre>
     * Auto-update URL to use for this extension.  May be blank, in
     * which case the default one (i.e., the one for the Chrome
     * Extensions Gallery) is used.
     * </pre>
     *
     * <code>optional string update_url = 3;</code>
     */
    public Builder clearUpdateUrl() {
      copyOnWrite();
      instance.clearUpdateUrl();
      return this;
    }
    /**
     * <pre>
     * Auto-update URL to use for this extension.  May be blank, in
     * which case the default one (i.e., the one for the Chrome
     * Extensions Gallery) is used.
     * </pre>
     *
     * <code>optional string update_url = 3;</code>
     */
    public Builder setUpdateUrlBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setUpdateUrlBytes(value);
      return this;
    }

    /**
     * <pre>
     * Whether or not this extension is enabled.
     * </pre>
     *
     * <code>optional bool enabled = 4;</code>
     */
    public boolean hasEnabled() {
      return instance.hasEnabled();
    }
    /**
     * <pre>
     * Whether or not this extension is enabled.
     * </pre>
     *
     * <code>optional bool enabled = 4;</code>
     */
    public boolean getEnabled() {
      return instance.getEnabled();
    }
    /**
     * <pre>
     * Whether or not this extension is enabled.
     * </pre>
     *
     * <code>optional bool enabled = 4;</code>
     */
    public Builder setEnabled(boolean value) {
      copyOnWrite();
      instance.setEnabled(value);
      return this;
    }
    /**
     * <pre>
     * Whether or not this extension is enabled.
     * </pre>
     *
     * <code>optional bool enabled = 4;</code>
     */
    public Builder clearEnabled() {
      copyOnWrite();
      instance.clearEnabled();
      return this;
    }

    /**
     * <pre>
     * Whether or not this extension is enabled in incognito mode.
     * </pre>
     *
     * <code>optional bool incognito_enabled = 5;</code>
     */
    public boolean hasIncognitoEnabled() {
      return instance.hasIncognitoEnabled();
    }
    /**
     * <pre>
     * Whether or not this extension is enabled in incognito mode.
     * </pre>
     *
     * <code>optional bool incognito_enabled = 5;</code>
     */
    public boolean getIncognitoEnabled() {
      return instance.getIncognitoEnabled();
    }
    /**
     * <pre>
     * Whether or not this extension is enabled in incognito mode.
     * </pre>
     *
     * <code>optional bool incognito_enabled = 5;</code>
     */
    public Builder setIncognitoEnabled(boolean value) {
      copyOnWrite();
      instance.setIncognitoEnabled(value);
      return this;
    }
    /**
     * <pre>
     * Whether or not this extension is enabled in incognito mode.
     * </pre>
     *
     * <code>optional bool incognito_enabled = 5;</code>
     */
    public Builder clearIncognitoEnabled() {
      copyOnWrite();
      instance.clearIncognitoEnabled();
      return this;
    }

    /**
     * <pre>
     * The name of the extension. Used for bookmark apps.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    public boolean hasName() {
      return instance.hasName();
    }
    /**
     * <pre>
     * The name of the extension. Used for bookmark apps.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * The name of the extension. Used for bookmark apps.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * The name of the extension. Used for bookmark apps.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * The name of the extension. Used for bookmark apps.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * The name of the extension. Used for bookmark apps.
     * </pre>
     *
     * <code>optional string name = 6;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Whether this extension was installed remotely, and hasn't been approved by
     * a user in chrome yet.
     * </pre>
     *
     * <code>optional bool remote_install = 7;</code>
     */
    public boolean hasRemoteInstall() {
      return instance.hasRemoteInstall();
    }
    /**
     * <pre>
     * Whether this extension was installed remotely, and hasn't been approved by
     * a user in chrome yet.
     * </pre>
     *
     * <code>optional bool remote_install = 7;</code>
     */
    public boolean getRemoteInstall() {
      return instance.getRemoteInstall();
    }
    /**
     * <pre>
     * Whether this extension was installed remotely, and hasn't been approved by
     * a user in chrome yet.
     * </pre>
     *
     * <code>optional bool remote_install = 7;</code>
     */
    public Builder setRemoteInstall(boolean value) {
      copyOnWrite();
      instance.setRemoteInstall(value);
      return this;
    }
    /**
     * <pre>
     * Whether this extension was installed remotely, and hasn't been approved by
     * a user in chrome yet.
     * </pre>
     *
     * <code>optional bool remote_install = 7;</code>
     */
    public Builder clearRemoteInstall() {
      copyOnWrite();
      instance.clearRemoteInstall();
      return this;
    }

    /**
     * <pre>
     * DEPRECATED. See https://crbug.com/1014183.
     * </pre>
     *
     * <code>optional bool installed_by_custodian = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasInstalledByCustodian() {
      return instance.hasInstalledByCustodian();
    }
    /**
     * <pre>
     * DEPRECATED. See https://crbug.com/1014183.
     * </pre>
     *
     * <code>optional bool installed_by_custodian = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean getInstalledByCustodian() {
      return instance.getInstalledByCustodian();
    }
    /**
     * <pre>
     * DEPRECATED. See https://crbug.com/1014183.
     * </pre>
     *
     * <code>optional bool installed_by_custodian = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setInstalledByCustodian(boolean value) {
      copyOnWrite();
      instance.setInstalledByCustodian(value);
      return this;
    }
    /**
     * <pre>
     * DEPRECATED. See https://crbug.com/1014183.
     * </pre>
     *
     * <code>optional bool installed_by_custodian = 8 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearInstalledByCustodian() {
      copyOnWrite();
      instance.clearInstalledByCustodian();
      return this;
    }

    /**
     * <pre>
     * DEPRECATED. See https://crbug.com/839681.
     * </pre>
     *
     * <code>optional bool all_urls_enabled = 9 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasAllUrlsEnabled() {
      return instance.hasAllUrlsEnabled();
    }
    /**
     * <pre>
     * DEPRECATED. See https://crbug.com/839681.
     * </pre>
     *
     * <code>optional bool all_urls_enabled = 9 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean getAllUrlsEnabled() {
      return instance.getAllUrlsEnabled();
    }
    /**
     * <pre>
     * DEPRECATED. See https://crbug.com/839681.
     * </pre>
     *
     * <code>optional bool all_urls_enabled = 9 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setAllUrlsEnabled(boolean value) {
      copyOnWrite();
      instance.setAllUrlsEnabled(value);
      return this;
    }
    /**
     * <pre>
     * DEPRECATED. See https://crbug.com/839681.
     * </pre>
     *
     * <code>optional bool all_urls_enabled = 9 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearAllUrlsEnabled() {
      copyOnWrite();
      instance.clearAllUrlsEnabled();
      return this;
    }

    /**
     * <pre>
     * Bitmask of the set of reasons why the extension is disabled (see
     * extensions::disable_reason::DisableReason). Only relevant when enabled ==
     * false. Note that old clients (&lt;M45) won't set this, even when enabled is
     * false.
     * </pre>
     *
     * <code>optional int32 disable_reasons = 10;</code>
     */
    public boolean hasDisableReasons() {
      return instance.hasDisableReasons();
    }
    /**
     * <pre>
     * Bitmask of the set of reasons why the extension is disabled (see
     * extensions::disable_reason::DisableReason). Only relevant when enabled ==
     * false. Note that old clients (&lt;M45) won't set this, even when enabled is
     * false.
     * </pre>
     *
     * <code>optional int32 disable_reasons = 10;</code>
     */
    public int getDisableReasons() {
      return instance.getDisableReasons();
    }
    /**
     * <pre>
     * Bitmask of the set of reasons why the extension is disabled (see
     * extensions::disable_reason::DisableReason). Only relevant when enabled ==
     * false. Note that old clients (&lt;M45) won't set this, even when enabled is
     * false.
     * </pre>
     *
     * <code>optional int32 disable_reasons = 10;</code>
     */
    public Builder setDisableReasons(int value) {
      copyOnWrite();
      instance.setDisableReasons(value);
      return this;
    }
    /**
     * <pre>
     * Bitmask of the set of reasons why the extension is disabled (see
     * extensions::disable_reason::DisableReason). Only relevant when enabled ==
     * false. Note that old clients (&lt;M45) won't set this, even when enabled is
     * false.
     * </pre>
     *
     * <code>optional int32 disable_reasons = 10;</code>
     */
    public Builder clearDisableReasons() {
      copyOnWrite();
      instance.clearDisableReasons();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ExtensionSpecifics)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ExtensionSpecifics();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.ExtensionSpecifics other = (org.chromium.components.sync.protocol.ExtensionSpecifics) arg1;
        id_ = visitor.visitString(
            hasId(), id_,
            other.hasId(), other.id_);
        version_ = visitor.visitString(
            hasVersion(), version_,
            other.hasVersion(), other.version_);
        updateUrl_ = visitor.visitString(
            hasUpdateUrl(), updateUrl_,
            other.hasUpdateUrl(), other.updateUrl_);
        enabled_ = visitor.visitBoolean(
            hasEnabled(), enabled_,
            other.hasEnabled(), other.enabled_);
        incognitoEnabled_ = visitor.visitBoolean(
            hasIncognitoEnabled(), incognitoEnabled_,
            other.hasIncognitoEnabled(), other.incognitoEnabled_);
        name_ = visitor.visitString(
            hasName(), name_,
            other.hasName(), other.name_);
        remoteInstall_ = visitor.visitBoolean(
            hasRemoteInstall(), remoteInstall_,
            other.hasRemoteInstall(), other.remoteInstall_);
        installedByCustodian_ = visitor.visitBoolean(
            hasInstalledByCustodian(), installedByCustodian_,
            other.hasInstalledByCustodian(), other.installedByCustodian_);
        allUrlsEnabled_ = visitor.visitBoolean(
            hasAllUrlsEnabled(), allUrlsEnabled_,
            other.hasAllUrlsEnabled(), other.allUrlsEnabled_);
        disableReasons_ = visitor.visitInt(
            hasDisableReasons(), disableReasons_,
            other.hasDisableReasons(), other.disableReasons_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                id_ = s;
                break;
              }
              case 18: {
                String s = input.readString();
                bitField0_ |= 0x00000002;
                version_ = s;
                break;
              }
              case 26: {
                String s = input.readString();
                bitField0_ |= 0x00000004;
                updateUrl_ = s;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                enabled_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                incognitoEnabled_ = input.readBool();
                break;
              }
              case 50: {
                String s = input.readString();
                bitField0_ |= 0x00000020;
                name_ = s;
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                remoteInstall_ = input.readBool();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                installedByCustodian_ = input.readBool();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                allUrlsEnabled_ = input.readBool();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                disableReasons_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ExtensionSpecifics.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ExtensionSpecifics)
  private static final org.chromium.components.sync.protocol.ExtensionSpecifics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ExtensionSpecifics();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.ExtensionSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ExtensionSpecifics> PARSER;

  public static com.google.protobuf.Parser<ExtensionSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

