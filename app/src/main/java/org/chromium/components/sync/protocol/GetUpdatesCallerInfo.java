// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_updates_caller_info.proto

package org.chromium.components.sync.protocol;

/**
 * Protobuf type {@code sync_pb.GetUpdatesCallerInfo}
 */
public  final class GetUpdatesCallerInfo extends
    com.google.protobuf.GeneratedMessageLite<
        GetUpdatesCallerInfo, GetUpdatesCallerInfo.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.GetUpdatesCallerInfo)
    GetUpdatesCallerInfoOrBuilder {
  private GetUpdatesCallerInfo() {
  }
  /**
   * <pre>
   * This enum was deprecated in M28.  The preferred represenation of this
   * information is now the GetUpdatesOrigin enum, which is defined in
   * sync_enums.proto.
   * TODO(crbug.com/510165): Remove all values except for UNKNOWN and stop
   * filling the field once the server doesn't depend on it anymore.
   * </pre>
   *
   * Protobuf enum {@code sync_pb.GetUpdatesCallerInfo.GetUpdatesSource}
   */
  public enum GetUpdatesSource
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * The source was not set by the caller.
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     * First request after browser restart.  Not to
     * </pre>
     *
     * <code>FIRST_UPDATE = 1;</code>
     */
    FIRST_UPDATE(1),
    /**
     * <pre>
     * be confused with "NEW_CLIENT".
     * </pre>
     *
     * <code>LOCAL = 2;</code>
     */
    LOCAL(2),
    /**
     * <pre>
     * The source of the update was a p2p notification.
     * </pre>
     *
     * <code>NOTIFICATION = 3;</code>
     */
    NOTIFICATION(3),
    /**
     * <pre>
     * The source of the update was periodic polling.
     * </pre>
     *
     * <code>PERIODIC = 4;</code>
     */
    PERIODIC(4),
    /**
     * <pre>
     * The source of the update was a
     * </pre>
     *
     * <code>SYNC_CYCLE_CONTINUATION = 5;</code>
     */
    SYNC_CYCLE_CONTINUATION(5),
    /**
     * <pre>
     * The client is in configuration mode
     * </pre>
     *
     * <code>NEWLY_SUPPORTED_DATATYPE = 7;</code>
     */
    NEWLY_SUPPORTED_DATATYPE(7),
    /**
     * <pre>
     * because it's syncing all datatypes, and
     * support for a new datatype was recently
     * released via a software auto-update.
     * </pre>
     *
     * <code>MIGRATION = 8;</code>
     */
    MIGRATION(8),
    /**
     * <pre>
     * MIGRATION_DONE error previously returned by the
     * server necessitated resynchronization.
     * </pre>
     *
     * <code>NEW_CLIENT = 9;</code>
     */
    NEW_CLIENT(9),
    /**
     * <pre>
     * user enabled sync for the first time.  Not to be
     * confused with FIRST_UPDATE.
     * </pre>
     *
     * <code>RECONFIGURATION = 10;</code>
     */
    RECONFIGURATION(10),
    /**
     * <pre>
     * user opted to sync a different set of datatypes.
     * </pre>
     *
     * <code>DATATYPE_REFRESH = 11;</code>
     */
    DATATYPE_REFRESH(11),
    /**
     * <pre>
     * typically used when datatype's have custom
     * sync UI, e.g. sessions.
     * </pre>
     *
     * <code>RETRY = 13;</code>
     */
    RETRY(13),
    /**
     * <pre>
     * The client is programmatically enabling/disabling
     * </pre>
     *
     * <code>PROGRAMMATIC = 14;</code>
     */
    PROGRAMMATIC(14),
    ;

    /**
     * <pre>
     * The source was not set by the caller.
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * First request after browser restart.  Not to
     * </pre>
     *
     * <code>FIRST_UPDATE = 1;</code>
     */
    public static final int FIRST_UPDATE_VALUE = 1;
    /**
     * <pre>
     * be confused with "NEW_CLIENT".
     * </pre>
     *
     * <code>LOCAL = 2;</code>
     */
    public static final int LOCAL_VALUE = 2;
    /**
     * <pre>
     * The source of the update was a p2p notification.
     * </pre>
     *
     * <code>NOTIFICATION = 3;</code>
     */
    public static final int NOTIFICATION_VALUE = 3;
    /**
     * <pre>
     * The source of the update was periodic polling.
     * </pre>
     *
     * <code>PERIODIC = 4;</code>
     */
    public static final int PERIODIC_VALUE = 4;
    /**
     * <pre>
     * The source of the update was a
     * </pre>
     *
     * <code>SYNC_CYCLE_CONTINUATION = 5;</code>
     */
    public static final int SYNC_CYCLE_CONTINUATION_VALUE = 5;
    /**
     * <pre>
     * The client is in configuration mode
     * </pre>
     *
     * <code>NEWLY_SUPPORTED_DATATYPE = 7;</code>
     */
    public static final int NEWLY_SUPPORTED_DATATYPE_VALUE = 7;
    /**
     * <pre>
     * because it's syncing all datatypes, and
     * support for a new datatype was recently
     * released via a software auto-update.
     * </pre>
     *
     * <code>MIGRATION = 8;</code>
     */
    public static final int MIGRATION_VALUE = 8;
    /**
     * <pre>
     * MIGRATION_DONE error previously returned by the
     * server necessitated resynchronization.
     * </pre>
     *
     * <code>NEW_CLIENT = 9;</code>
     */
    public static final int NEW_CLIENT_VALUE = 9;
    /**
     * <pre>
     * user enabled sync for the first time.  Not to be
     * confused with FIRST_UPDATE.
     * </pre>
     *
     * <code>RECONFIGURATION = 10;</code>
     */
    public static final int RECONFIGURATION_VALUE = 10;
    /**
     * <pre>
     * user opted to sync a different set of datatypes.
     * </pre>
     *
     * <code>DATATYPE_REFRESH = 11;</code>
     */
    public static final int DATATYPE_REFRESH_VALUE = 11;
    /**
     * <pre>
     * typically used when datatype's have custom
     * sync UI, e.g. sessions.
     * </pre>
     *
     * <code>RETRY = 13;</code>
     */
    public static final int RETRY_VALUE = 13;
    /**
     * <pre>
     * The client is programmatically enabling/disabling
     * </pre>
     *
     * <code>PROGRAMMATIC = 14;</code>
     */
    public static final int PROGRAMMATIC_VALUE = 14;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GetUpdatesSource valueOf(int value) {
      return forNumber(value);
    }

    public static GetUpdatesSource forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return FIRST_UPDATE;
        case 2: return LOCAL;
        case 3: return NOTIFICATION;
        case 4: return PERIODIC;
        case 5: return SYNC_CYCLE_CONTINUATION;
        case 7: return NEWLY_SUPPORTED_DATATYPE;
        case 8: return MIGRATION;
        case 9: return NEW_CLIENT;
        case 10: return RECONFIGURATION;
        case 11: return DATATYPE_REFRESH;
        case 13: return RETRY;
        case 14: return PROGRAMMATIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GetUpdatesSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GetUpdatesSource> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GetUpdatesSource>() {
            public GetUpdatesSource findValueByNumber(int number) {
              return GetUpdatesSource.forNumber(number);
            }
          };

    private final int value;

    private GetUpdatesSource(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:sync_pb.GetUpdatesCallerInfo.GetUpdatesSource)
  }

  private int bitField0_;
  public static final int SOURCE_FIELD_NUMBER = 1;
  private int source_;
  /**
   * <code>required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];</code>
   */
  @java.lang.Deprecated public boolean hasSource() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];</code>
   */
  @java.lang.Deprecated public org.chromium.components.sync.protocol.GetUpdatesCallerInfo.GetUpdatesSource getSource() {
    org.chromium.components.sync.protocol.GetUpdatesCallerInfo.GetUpdatesSource result = org.chromium.components.sync.protocol.GetUpdatesCallerInfo.GetUpdatesSource.forNumber(source_);
    return result == null ? org.chromium.components.sync.protocol.GetUpdatesCallerInfo.GetUpdatesSource.UNKNOWN : result;
  }
  /**
   * <code>required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];</code>
   */
  private void setSource(org.chromium.components.sync.protocol.GetUpdatesCallerInfo.GetUpdatesSource value) {
    if (value == null) {
      throw new NullPointerException();
    }
    bitField0_ |= 0x00000001;
    source_ = value.getNumber();
  }
  /**
   * <code>required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];</code>
   */
  private void clearSource() {
    bitField0_ = (bitField0_ & ~0x00000001);
    source_ = 0;
  }

  public static final int NOTIFICATIONS_ENABLED_FIELD_NUMBER = 2;
  private boolean notificationsEnabled_;
  /**
   * <pre>
   * True only if notifications were enabled for this GetUpdateMessage.
   * TODO(crbug.com/510165): Move this bool out of GetUpdatesCallerInfo so that
   * GetUpdatesCallerInfo can eventually be removed.
   * </pre>
   *
   * <code>optional bool notifications_enabled = 2;</code>
   */
  public boolean hasNotificationsEnabled() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * True only if notifications were enabled for this GetUpdateMessage.
   * TODO(crbug.com/510165): Move this bool out of GetUpdatesCallerInfo so that
   * GetUpdatesCallerInfo can eventually be removed.
   * </pre>
   *
   * <code>optional bool notifications_enabled = 2;</code>
   */
  public boolean getNotificationsEnabled() {
    return notificationsEnabled_;
  }
  /**
   * <pre>
   * True only if notifications were enabled for this GetUpdateMessage.
   * TODO(crbug.com/510165): Move this bool out of GetUpdatesCallerInfo so that
   * GetUpdatesCallerInfo can eventually be removed.
   * </pre>
   *
   * <code>optional bool notifications_enabled = 2;</code>
   */
  private void setNotificationsEnabled(boolean value) {
    bitField0_ |= 0x00000002;
    notificationsEnabled_ = value;
  }
  /**
   * <pre>
   * True only if notifications were enabled for this GetUpdateMessage.
   * TODO(crbug.com/510165): Move this bool out of GetUpdatesCallerInfo so that
   * GetUpdatesCallerInfo can eventually be removed.
   * </pre>
   *
   * <code>optional bool notifications_enabled = 2;</code>
   */
  private void clearNotificationsEnabled() {
    bitField0_ = (bitField0_ & ~0x00000002);
    notificationsEnabled_ = false;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeEnum(1, source_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeBool(2, notificationsEnabled_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, source_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, notificationsEnabled_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.GetUpdatesCallerInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code sync_pb.GetUpdatesCallerInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.GetUpdatesCallerInfo, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.GetUpdatesCallerInfo)
      org.chromium.components.sync.protocol.GetUpdatesCallerInfoOrBuilder {
    // Construct using org.chromium.components.sync.protocol.GetUpdatesCallerInfo.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasSource() {
      return instance.hasSource();
    }
    /**
     * <code>required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public org.chromium.components.sync.protocol.GetUpdatesCallerInfo.GetUpdatesSource getSource() {
      return instance.getSource();
    }
    /**
     * <code>required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setSource(org.chromium.components.sync.protocol.GetUpdatesCallerInfo.GetUpdatesSource value) {
      copyOnWrite();
      instance.setSource(value);
      return this;
    }
    /**
     * <code>required .sync_pb.GetUpdatesCallerInfo.GetUpdatesSource source = 1 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearSource() {
      copyOnWrite();
      instance.clearSource();
      return this;
    }

    /**
     * <pre>
     * True only if notifications were enabled for this GetUpdateMessage.
     * TODO(crbug.com/510165): Move this bool out of GetUpdatesCallerInfo so that
     * GetUpdatesCallerInfo can eventually be removed.
     * </pre>
     *
     * <code>optional bool notifications_enabled = 2;</code>
     */
    public boolean hasNotificationsEnabled() {
      return instance.hasNotificationsEnabled();
    }
    /**
     * <pre>
     * True only if notifications were enabled for this GetUpdateMessage.
     * TODO(crbug.com/510165): Move this bool out of GetUpdatesCallerInfo so that
     * GetUpdatesCallerInfo can eventually be removed.
     * </pre>
     *
     * <code>optional bool notifications_enabled = 2;</code>
     */
    public boolean getNotificationsEnabled() {
      return instance.getNotificationsEnabled();
    }
    /**
     * <pre>
     * True only if notifications were enabled for this GetUpdateMessage.
     * TODO(crbug.com/510165): Move this bool out of GetUpdatesCallerInfo so that
     * GetUpdatesCallerInfo can eventually be removed.
     * </pre>
     *
     * <code>optional bool notifications_enabled = 2;</code>
     */
    public Builder setNotificationsEnabled(boolean value) {
      copyOnWrite();
      instance.setNotificationsEnabled(value);
      return this;
    }
    /**
     * <pre>
     * True only if notifications were enabled for this GetUpdateMessage.
     * TODO(crbug.com/510165): Move this bool out of GetUpdatesCallerInfo so that
     * GetUpdatesCallerInfo can eventually be removed.
     * </pre>
     *
     * <code>optional bool notifications_enabled = 2;</code>
     */
    public Builder clearNotificationsEnabled() {
      copyOnWrite();
      instance.clearNotificationsEnabled();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.GetUpdatesCallerInfo)
  }
  private byte memoizedIsInitialized = -1;
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.GetUpdatesCallerInfo();
      }
      case IS_INITIALIZED: {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return DEFAULT_INSTANCE;
        if (isInitialized == 0) return null;

        boolean shouldMemoize = ((Boolean) arg0).booleanValue();
        if (!hasSource()) {
          if (shouldMemoize) {
            memoizedIsInitialized = 0;
          }
          return null;
        }
        if (shouldMemoize) memoizedIsInitialized = 1;
        return DEFAULT_INSTANCE;

      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.GetUpdatesCallerInfo other = (org.chromium.components.sync.protocol.GetUpdatesCallerInfo) arg1;
        source_ = visitor.visitInt(hasSource(), source_,
            other.hasSource(), other.source_);
        notificationsEnabled_ = visitor.visitBoolean(
            hasNotificationsEnabled(), notificationsEnabled_,
            other.hasNotificationsEnabled(), other.notificationsEnabled_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                org.chromium.components.sync.protocol.GetUpdatesCallerInfo.GetUpdatesSource value = org.chromium.components.sync.protocol.GetUpdatesCallerInfo.GetUpdatesSource.forNumber(rawValue);
                if (value == null) {
                  super.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  source_ = rawValue;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                notificationsEnabled_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.GetUpdatesCallerInfo.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.GetUpdatesCallerInfo)
  private static final org.chromium.components.sync.protocol.GetUpdatesCallerInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new GetUpdatesCallerInfo();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.GetUpdatesCallerInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<GetUpdatesCallerInfo> PARSER;

  public static com.google.protobuf.Parser<GetUpdatesCallerInfo> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

