// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: autofill_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Contains information about the cloud token data of server credit cards.
 * </pre>
 *
 * Protobuf type {@code sync_pb.WalletCreditCardCloudTokenData}
 */
public  final class WalletCreditCardCloudTokenData extends
    com.google.protobuf.GeneratedMessageLite<
        WalletCreditCardCloudTokenData, WalletCreditCardCloudTokenData.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.WalletCreditCardCloudTokenData)
    WalletCreditCardCloudTokenDataOrBuilder {
  private WalletCreditCardCloudTokenData() {
    maskedCardId_ = "";
    suffix_ = "";
    artFifeUrl_ = "";
    instrumentToken_ = "";
  }
  private int bitField0_;
  public static final int MASKED_CARD_ID_FIELD_NUMBER = 1;
  private java.lang.String maskedCardId_;
  /**
   * <pre>
   * Server-generated ID string for the card this cloud token data is related
   * to. This should match the id in WalletMaskedCreditCard for to fetch the
   * corresponding actual card data. Note this is not unique across all cloud
   * token data, which means one card can have multiple sets of cloud token data
   * with the same masked_card_id.
   * </pre>
   *
   * <code>optional string masked_card_id = 1;</code>
   */
  public boolean hasMaskedCardId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Server-generated ID string for the card this cloud token data is related
   * to. This should match the id in WalletMaskedCreditCard for to fetch the
   * corresponding actual card data. Note this is not unique across all cloud
   * token data, which means one card can have multiple sets of cloud token data
   * with the same masked_card_id.
   * </pre>
   *
   * <code>optional string masked_card_id = 1;</code>
   */
  public java.lang.String getMaskedCardId() {
    return maskedCardId_;
  }
  /**
   * <pre>
   * Server-generated ID string for the card this cloud token data is related
   * to. This should match the id in WalletMaskedCreditCard for to fetch the
   * corresponding actual card data. Note this is not unique across all cloud
   * token data, which means one card can have multiple sets of cloud token data
   * with the same masked_card_id.
   * </pre>
   *
   * <code>optional string masked_card_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getMaskedCardIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(maskedCardId_);
  }
  /**
   * <pre>
   * Server-generated ID string for the card this cloud token data is related
   * to. This should match the id in WalletMaskedCreditCard for to fetch the
   * corresponding actual card data. Note this is not unique across all cloud
   * token data, which means one card can have multiple sets of cloud token data
   * with the same masked_card_id.
   * </pre>
   *
   * <code>optional string masked_card_id = 1;</code>
   */
  private void setMaskedCardId(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    maskedCardId_ = value;
  }
  /**
   * <pre>
   * Server-generated ID string for the card this cloud token data is related
   * to. This should match the id in WalletMaskedCreditCard for to fetch the
   * corresponding actual card data. Note this is not unique across all cloud
   * token data, which means one card can have multiple sets of cloud token data
   * with the same masked_card_id.
   * </pre>
   *
   * <code>optional string masked_card_id = 1;</code>
   */
  private void clearMaskedCardId() {
    bitField0_ = (bitField0_ & ~0x00000001);
    maskedCardId_ = getDefaultInstance().getMaskedCardId();
  }
  /**
   * <pre>
   * Server-generated ID string for the card this cloud token data is related
   * to. This should match the id in WalletMaskedCreditCard for to fetch the
   * corresponding actual card data. Note this is not unique across all cloud
   * token data, which means one card can have multiple sets of cloud token data
   * with the same masked_card_id.
   * </pre>
   *
   * <code>optional string masked_card_id = 1;</code>
   */
  private void setMaskedCardIdBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    maskedCardId_ = value.toStringUtf8();
  }

  public static final int SUFFIX_FIELD_NUMBER = 2;
  private java.lang.String suffix_;
  /**
   * <pre>
   * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
   * </pre>
   *
   * <code>optional string suffix = 2;</code>
   */
  public boolean hasSuffix() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
   * </pre>
   *
   * <code>optional string suffix = 2;</code>
   */
  public java.lang.String getSuffix() {
    return suffix_;
  }
  /**
   * <pre>
   * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
   * </pre>
   *
   * <code>optional string suffix = 2;</code>
   */
  public com.google.protobuf.ByteString
      getSuffixBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(suffix_);
  }
  /**
   * <pre>
   * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
   * </pre>
   *
   * <code>optional string suffix = 2;</code>
   */
  private void setSuffix(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    suffix_ = value;
  }
  /**
   * <pre>
   * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
   * </pre>
   *
   * <code>optional string suffix = 2;</code>
   */
  private void clearSuffix() {
    bitField0_ = (bitField0_ & ~0x00000002);
    suffix_ = getDefaultInstance().getSuffix();
  }
  /**
   * <pre>
   * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
   * </pre>
   *
   * <code>optional string suffix = 2;</code>
   */
  private void setSuffixBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    suffix_ = value.toStringUtf8();
  }

  public static final int EXP_MONTH_FIELD_NUMBER = 3;
  private int expMonth_;
  /**
   * <pre>
   * CPAN Month number 1-12.
   * </pre>
   *
   * <code>optional int32 exp_month = 3;</code>
   */
  public boolean hasExpMonth() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * CPAN Month number 1-12.
   * </pre>
   *
   * <code>optional int32 exp_month = 3;</code>
   */
  public int getExpMonth() {
    return expMonth_;
  }
  /**
   * <pre>
   * CPAN Month number 1-12.
   * </pre>
   *
   * <code>optional int32 exp_month = 3;</code>
   */
  private void setExpMonth(int value) {
    bitField0_ |= 0x00000004;
    expMonth_ = value;
  }
  /**
   * <pre>
   * CPAN Month number 1-12.
   * </pre>
   *
   * <code>optional int32 exp_month = 3;</code>
   */
  private void clearExpMonth() {
    bitField0_ = (bitField0_ & ~0x00000004);
    expMonth_ = 0;
  }

  public static final int EXP_YEAR_FIELD_NUMBER = 4;
  private int expYear_;
  /**
   * <pre>
   * CPAN Four-digit year (e.g. 2017).
   * </pre>
   *
   * <code>optional int32 exp_year = 4;</code>
   */
  public boolean hasExpYear() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * CPAN Four-digit year (e.g. 2017).
   * </pre>
   *
   * <code>optional int32 exp_year = 4;</code>
   */
  public int getExpYear() {
    return expYear_;
  }
  /**
   * <pre>
   * CPAN Four-digit year (e.g. 2017).
   * </pre>
   *
   * <code>optional int32 exp_year = 4;</code>
   */
  private void setExpYear(int value) {
    bitField0_ |= 0x00000008;
    expYear_ = value;
  }
  /**
   * <pre>
   * CPAN Four-digit year (e.g. 2017).
   * </pre>
   *
   * <code>optional int32 exp_year = 4;</code>
   */
  private void clearExpYear() {
    bitField0_ = (bitField0_ & ~0x00000008);
    expYear_ = 0;
  }

  public static final int ART_FIFE_URL_FIELD_NUMBER = 5;
  private java.lang.String artFifeUrl_;
  /**
   * <pre>
   * URL of the card art to be displayed for CPAN.
   * </pre>
   *
   * <code>optional string art_fife_url = 5;</code>
   */
  public boolean hasArtFifeUrl() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * URL of the card art to be displayed for CPAN.
   * </pre>
   *
   * <code>optional string art_fife_url = 5;</code>
   */
  public java.lang.String getArtFifeUrl() {
    return artFifeUrl_;
  }
  /**
   * <pre>
   * URL of the card art to be displayed for CPAN.
   * </pre>
   *
   * <code>optional string art_fife_url = 5;</code>
   */
  public com.google.protobuf.ByteString
      getArtFifeUrlBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(artFifeUrl_);
  }
  /**
   * <pre>
   * URL of the card art to be displayed for CPAN.
   * </pre>
   *
   * <code>optional string art_fife_url = 5;</code>
   */
  private void setArtFifeUrl(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
    artFifeUrl_ = value;
  }
  /**
   * <pre>
   * URL of the card art to be displayed for CPAN.
   * </pre>
   *
   * <code>optional string art_fife_url = 5;</code>
   */
  private void clearArtFifeUrl() {
    bitField0_ = (bitField0_ & ~0x00000010);
    artFifeUrl_ = getDefaultInstance().getArtFifeUrl();
  }
  /**
   * <pre>
   * URL of the card art to be displayed for CPAN.
   * </pre>
   *
   * <code>optional string art_fife_url = 5;</code>
   */
  private void setArtFifeUrlBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
    artFifeUrl_ = value.toStringUtf8();
  }

  public static final int INSTRUMENT_TOKEN_FIELD_NUMBER = 6;
  private java.lang.String instrumentToken_;
  /**
   * <pre>
   * Opaque identifier for the cloud token.
   * </pre>
   *
   * <code>optional string instrument_token = 6;</code>
   */
  public boolean hasInstrumentToken() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * Opaque identifier for the cloud token.
   * </pre>
   *
   * <code>optional string instrument_token = 6;</code>
   */
  public java.lang.String getInstrumentToken() {
    return instrumentToken_;
  }
  /**
   * <pre>
   * Opaque identifier for the cloud token.
   * </pre>
   *
   * <code>optional string instrument_token = 6;</code>
   */
  public com.google.protobuf.ByteString
      getInstrumentTokenBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(instrumentToken_);
  }
  /**
   * <pre>
   * Opaque identifier for the cloud token.
   * </pre>
   *
   * <code>optional string instrument_token = 6;</code>
   */
  private void setInstrumentToken(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
    instrumentToken_ = value;
  }
  /**
   * <pre>
   * Opaque identifier for the cloud token.
   * </pre>
   *
   * <code>optional string instrument_token = 6;</code>
   */
  private void clearInstrumentToken() {
    bitField0_ = (bitField0_ & ~0x00000020);
    instrumentToken_ = getDefaultInstance().getInstrumentToken();
  }
  /**
   * <pre>
   * Opaque identifier for the cloud token.
   * </pre>
   *
   * <code>optional string instrument_token = 6;</code>
   */
  private void setInstrumentTokenBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
    instrumentToken_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getMaskedCardId());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeString(2, getSuffix());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, expMonth_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, expYear_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeString(5, getArtFifeUrl());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeString(6, getInstrumentToken());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getMaskedCardId());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getSuffix());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, expMonth_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, expYear_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(5, getArtFifeUrl());
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(6, getInstrumentToken());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Contains information about the cloud token data of server credit cards.
   * </pre>
   *
   * Protobuf type {@code sync_pb.WalletCreditCardCloudTokenData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.WalletCreditCardCloudTokenData)
      org.chromium.components.sync.protocol.WalletCreditCardCloudTokenDataOrBuilder {
    // Construct using org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Server-generated ID string for the card this cloud token data is related
     * to. This should match the id in WalletMaskedCreditCard for to fetch the
     * corresponding actual card data. Note this is not unique across all cloud
     * token data, which means one card can have multiple sets of cloud token data
     * with the same masked_card_id.
     * </pre>
     *
     * <code>optional string masked_card_id = 1;</code>
     */
    public boolean hasMaskedCardId() {
      return instance.hasMaskedCardId();
    }
    /**
     * <pre>
     * Server-generated ID string for the card this cloud token data is related
     * to. This should match the id in WalletMaskedCreditCard for to fetch the
     * corresponding actual card data. Note this is not unique across all cloud
     * token data, which means one card can have multiple sets of cloud token data
     * with the same masked_card_id.
     * </pre>
     *
     * <code>optional string masked_card_id = 1;</code>
     */
    public java.lang.String getMaskedCardId() {
      return instance.getMaskedCardId();
    }
    /**
     * <pre>
     * Server-generated ID string for the card this cloud token data is related
     * to. This should match the id in WalletMaskedCreditCard for to fetch the
     * corresponding actual card data. Note this is not unique across all cloud
     * token data, which means one card can have multiple sets of cloud token data
     * with the same masked_card_id.
     * </pre>
     *
     * <code>optional string masked_card_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMaskedCardIdBytes() {
      return instance.getMaskedCardIdBytes();
    }
    /**
     * <pre>
     * Server-generated ID string for the card this cloud token data is related
     * to. This should match the id in WalletMaskedCreditCard for to fetch the
     * corresponding actual card data. Note this is not unique across all cloud
     * token data, which means one card can have multiple sets of cloud token data
     * with the same masked_card_id.
     * </pre>
     *
     * <code>optional string masked_card_id = 1;</code>
     */
    public Builder setMaskedCardId(
        java.lang.String value) {
      copyOnWrite();
      instance.setMaskedCardId(value);
      return this;
    }
    /**
     * <pre>
     * Server-generated ID string for the card this cloud token data is related
     * to. This should match the id in WalletMaskedCreditCard for to fetch the
     * corresponding actual card data. Note this is not unique across all cloud
     * token data, which means one card can have multiple sets of cloud token data
     * with the same masked_card_id.
     * </pre>
     *
     * <code>optional string masked_card_id = 1;</code>
     */
    public Builder clearMaskedCardId() {
      copyOnWrite();
      instance.clearMaskedCardId();
      return this;
    }
    /**
     * <pre>
     * Server-generated ID string for the card this cloud token data is related
     * to. This should match the id in WalletMaskedCreditCard for to fetch the
     * corresponding actual card data. Note this is not unique across all cloud
     * token data, which means one card can have multiple sets of cloud token data
     * with the same masked_card_id.
     * </pre>
     *
     * <code>optional string masked_card_id = 1;</code>
     */
    public Builder setMaskedCardIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMaskedCardIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
     * </pre>
     *
     * <code>optional string suffix = 2;</code>
     */
    public boolean hasSuffix() {
      return instance.hasSuffix();
    }
    /**
     * <pre>
     * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
     * </pre>
     *
     * <code>optional string suffix = 2;</code>
     */
    public java.lang.String getSuffix() {
      return instance.getSuffix();
    }
    /**
     * <pre>
     * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
     * </pre>
     *
     * <code>optional string suffix = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSuffixBytes() {
      return instance.getSuffixBytes();
    }
    /**
     * <pre>
     * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
     * </pre>
     *
     * <code>optional string suffix = 2;</code>
     */
    public Builder setSuffix(
        java.lang.String value) {
      copyOnWrite();
      instance.setSuffix(value);
      return this;
    }
    /**
     * <pre>
     * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
     * </pre>
     *
     * <code>optional string suffix = 2;</code>
     */
    public Builder clearSuffix() {
      copyOnWrite();
      instance.clearSuffix();
      return this;
    }
    /**
     * <pre>
     * Last 4-5 digits of the Cloud Primary Account Number (CPAN).
     * </pre>
     *
     * <code>optional string suffix = 2;</code>
     */
    public Builder setSuffixBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSuffixBytes(value);
      return this;
    }

    /**
     * <pre>
     * CPAN Month number 1-12.
     * </pre>
     *
     * <code>optional int32 exp_month = 3;</code>
     */
    public boolean hasExpMonth() {
      return instance.hasExpMonth();
    }
    /**
     * <pre>
     * CPAN Month number 1-12.
     * </pre>
     *
     * <code>optional int32 exp_month = 3;</code>
     */
    public int getExpMonth() {
      return instance.getExpMonth();
    }
    /**
     * <pre>
     * CPAN Month number 1-12.
     * </pre>
     *
     * <code>optional int32 exp_month = 3;</code>
     */
    public Builder setExpMonth(int value) {
      copyOnWrite();
      instance.setExpMonth(value);
      return this;
    }
    /**
     * <pre>
     * CPAN Month number 1-12.
     * </pre>
     *
     * <code>optional int32 exp_month = 3;</code>
     */
    public Builder clearExpMonth() {
      copyOnWrite();
      instance.clearExpMonth();
      return this;
    }

    /**
     * <pre>
     * CPAN Four-digit year (e.g. 2017).
     * </pre>
     *
     * <code>optional int32 exp_year = 4;</code>
     */
    public boolean hasExpYear() {
      return instance.hasExpYear();
    }
    /**
     * <pre>
     * CPAN Four-digit year (e.g. 2017).
     * </pre>
     *
     * <code>optional int32 exp_year = 4;</code>
     */
    public int getExpYear() {
      return instance.getExpYear();
    }
    /**
     * <pre>
     * CPAN Four-digit year (e.g. 2017).
     * </pre>
     *
     * <code>optional int32 exp_year = 4;</code>
     */
    public Builder setExpYear(int value) {
      copyOnWrite();
      instance.setExpYear(value);
      return this;
    }
    /**
     * <pre>
     * CPAN Four-digit year (e.g. 2017).
     * </pre>
     *
     * <code>optional int32 exp_year = 4;</code>
     */
    public Builder clearExpYear() {
      copyOnWrite();
      instance.clearExpYear();
      return this;
    }

    /**
     * <pre>
     * URL of the card art to be displayed for CPAN.
     * </pre>
     *
     * <code>optional string art_fife_url = 5;</code>
     */
    public boolean hasArtFifeUrl() {
      return instance.hasArtFifeUrl();
    }
    /**
     * <pre>
     * URL of the card art to be displayed for CPAN.
     * </pre>
     *
     * <code>optional string art_fife_url = 5;</code>
     */
    public java.lang.String getArtFifeUrl() {
      return instance.getArtFifeUrl();
    }
    /**
     * <pre>
     * URL of the card art to be displayed for CPAN.
     * </pre>
     *
     * <code>optional string art_fife_url = 5;</code>
     */
    public com.google.protobuf.ByteString
        getArtFifeUrlBytes() {
      return instance.getArtFifeUrlBytes();
    }
    /**
     * <pre>
     * URL of the card art to be displayed for CPAN.
     * </pre>
     *
     * <code>optional string art_fife_url = 5;</code>
     */
    public Builder setArtFifeUrl(
        java.lang.String value) {
      copyOnWrite();
      instance.setArtFifeUrl(value);
      return this;
    }
    /**
     * <pre>
     * URL of the card art to be displayed for CPAN.
     * </pre>
     *
     * <code>optional string art_fife_url = 5;</code>
     */
    public Builder clearArtFifeUrl() {
      copyOnWrite();
      instance.clearArtFifeUrl();
      return this;
    }
    /**
     * <pre>
     * URL of the card art to be displayed for CPAN.
     * </pre>
     *
     * <code>optional string art_fife_url = 5;</code>
     */
    public Builder setArtFifeUrlBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setArtFifeUrlBytes(value);
      return this;
    }

    /**
     * <pre>
     * Opaque identifier for the cloud token.
     * </pre>
     *
     * <code>optional string instrument_token = 6;</code>
     */
    public boolean hasInstrumentToken() {
      return instance.hasInstrumentToken();
    }
    /**
     * <pre>
     * Opaque identifier for the cloud token.
     * </pre>
     *
     * <code>optional string instrument_token = 6;</code>
     */
    public java.lang.String getInstrumentToken() {
      return instance.getInstrumentToken();
    }
    /**
     * <pre>
     * Opaque identifier for the cloud token.
     * </pre>
     *
     * <code>optional string instrument_token = 6;</code>
     */
    public com.google.protobuf.ByteString
        getInstrumentTokenBytes() {
      return instance.getInstrumentTokenBytes();
    }
    /**
     * <pre>
     * Opaque identifier for the cloud token.
     * </pre>
     *
     * <code>optional string instrument_token = 6;</code>
     */
    public Builder setInstrumentToken(
        java.lang.String value) {
      copyOnWrite();
      instance.setInstrumentToken(value);
      return this;
    }
    /**
     * <pre>
     * Opaque identifier for the cloud token.
     * </pre>
     *
     * <code>optional string instrument_token = 6;</code>
     */
    public Builder clearInstrumentToken() {
      copyOnWrite();
      instance.clearInstrumentToken();
      return this;
    }
    /**
     * <pre>
     * Opaque identifier for the cloud token.
     * </pre>
     *
     * <code>optional string instrument_token = 6;</code>
     */
    public Builder setInstrumentTokenBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setInstrumentTokenBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.WalletCreditCardCloudTokenData)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData other = (org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData) arg1;
        maskedCardId_ = visitor.visitString(
            hasMaskedCardId(), maskedCardId_,
            other.hasMaskedCardId(), other.maskedCardId_);
        suffix_ = visitor.visitString(
            hasSuffix(), suffix_,
            other.hasSuffix(), other.suffix_);
        expMonth_ = visitor.visitInt(
            hasExpMonth(), expMonth_,
            other.hasExpMonth(), other.expMonth_);
        expYear_ = visitor.visitInt(
            hasExpYear(), expYear_,
            other.hasExpYear(), other.expYear_);
        artFifeUrl_ = visitor.visitString(
            hasArtFifeUrl(), artFifeUrl_,
            other.hasArtFifeUrl(), other.artFifeUrl_);
        instrumentToken_ = visitor.visitString(
            hasInstrumentToken(), instrumentToken_,
            other.hasInstrumentToken(), other.instrumentToken_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                maskedCardId_ = s;
                break;
              }
              case 18: {
                String s = input.readString();
                bitField0_ |= 0x00000002;
                suffix_ = s;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                expMonth_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                expYear_ = input.readInt32();
                break;
              }
              case 42: {
                String s = input.readString();
                bitField0_ |= 0x00000010;
                artFifeUrl_ = s;
                break;
              }
              case 50: {
                String s = input.readString();
                bitField0_ |= 0x00000020;
                instrumentToken_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.WalletCreditCardCloudTokenData)
  private static final org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new WalletCreditCardCloudTokenData();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.WalletCreditCardCloudTokenData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<WalletCreditCardCloudTokenData> PARSER;

  public static com.google.protobuf.Parser<WalletCreditCardCloudTokenData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

