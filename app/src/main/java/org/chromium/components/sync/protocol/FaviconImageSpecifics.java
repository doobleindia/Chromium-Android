// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: favicon_image_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Image data for favicons. Multiple resolutions are supported.
 * </pre>
 *
 * Protobuf type {@code sync_pb.FaviconImageSpecifics}
 */
public  final class FaviconImageSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        FaviconImageSpecifics, FaviconImageSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.FaviconImageSpecifics)
    FaviconImageSpecificsOrBuilder {
  private FaviconImageSpecifics() {
    faviconUrl_ = "";
  }
  private int bitField0_;
  public static final int FAVICON_URL_FIELD_NUMBER = 1;
  private java.lang.String faviconUrl_;
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   */
  public boolean hasFaviconUrl() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   */
  public java.lang.String getFaviconUrl() {
    return faviconUrl_;
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   */
  public com.google.protobuf.ByteString
      getFaviconUrlBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(faviconUrl_);
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   */
  private void setFaviconUrl(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    faviconUrl_ = value;
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   */
  private void clearFaviconUrl() {
    bitField0_ = (bitField0_ & ~0x00000001);
    faviconUrl_ = getDefaultInstance().getFaviconUrl();
  }
  /**
   * <pre>
   * The url of the favicon image.
   * </pre>
   *
   * <code>optional string favicon_url = 1;</code>
   */
  private void setFaviconUrlBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    faviconUrl_ = value.toStringUtf8();
  }

  public static final int FAVICON_WEB_FIELD_NUMBER = 2;
  private org.chromium.components.sync.protocol.FaviconData faviconWeb_;
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  public boolean hasFaviconWeb() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  public org.chromium.components.sync.protocol.FaviconData getFaviconWeb() {
    return faviconWeb_ == null ? org.chromium.components.sync.protocol.FaviconData.getDefaultInstance() : faviconWeb_;
  }
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  private void setFaviconWeb(org.chromium.components.sync.protocol.FaviconData value) {
    if (value == null) {
      throw new NullPointerException();
    }
    faviconWeb_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  private void setFaviconWeb(
      org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
    faviconWeb_ = builderForValue.build();
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  private void mergeFaviconWeb(org.chromium.components.sync.protocol.FaviconData value) {
    if (faviconWeb_ != null &&
        faviconWeb_ != org.chromium.components.sync.protocol.FaviconData.getDefaultInstance()) {
      faviconWeb_ =
        org.chromium.components.sync.protocol.FaviconData.newBuilder(faviconWeb_).mergeFrom(value).buildPartial();
    } else {
      faviconWeb_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * A normal low-resolution web favicon (max resolution 16x16).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
   */
  private void clearFaviconWeb() {  faviconWeb_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int FAVICON_WEB_32_FIELD_NUMBER = 3;
  private org.chromium.components.sync.protocol.FaviconData faviconWeb32_;
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  public boolean hasFaviconWeb32() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  public org.chromium.components.sync.protocol.FaviconData getFaviconWeb32() {
    return faviconWeb32_ == null ? org.chromium.components.sync.protocol.FaviconData.getDefaultInstance() : faviconWeb32_;
  }
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  private void setFaviconWeb32(org.chromium.components.sync.protocol.FaviconData value) {
    if (value == null) {
      throw new NullPointerException();
    }
    faviconWeb32_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  private void setFaviconWeb32(
      org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
    faviconWeb32_ = builderForValue.build();
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  private void mergeFaviconWeb32(org.chromium.components.sync.protocol.FaviconData value) {
    if (faviconWeb32_ != null &&
        faviconWeb32_ != org.chromium.components.sync.protocol.FaviconData.getDefaultInstance()) {
      faviconWeb32_ =
        org.chromium.components.sync.protocol.FaviconData.newBuilder(faviconWeb32_).mergeFrom(value).buildPartial();
    } else {
      faviconWeb32_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <pre>
   * A slightly higher-resolution web favicon (max resolution 32x32).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
   */
  private void clearFaviconWeb32() {  faviconWeb32_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int FAVICON_TOUCH_64_FIELD_NUMBER = 4;
  private org.chromium.components.sync.protocol.FaviconData faviconTouch64_;
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  public boolean hasFaviconTouch64() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  public org.chromium.components.sync.protocol.FaviconData getFaviconTouch64() {
    return faviconTouch64_ == null ? org.chromium.components.sync.protocol.FaviconData.getDefaultInstance() : faviconTouch64_;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  private void setFaviconTouch64(org.chromium.components.sync.protocol.FaviconData value) {
    if (value == null) {
      throw new NullPointerException();
    }
    faviconTouch64_ = value;
    bitField0_ |= 0x00000008;
    }
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  private void setFaviconTouch64(
      org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
    faviconTouch64_ = builderForValue.build();
    bitField0_ |= 0x00000008;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  private void mergeFaviconTouch64(org.chromium.components.sync.protocol.FaviconData value) {
    if (faviconTouch64_ != null &&
        faviconTouch64_ != org.chromium.components.sync.protocol.FaviconData.getDefaultInstance()) {
      faviconTouch64_ =
        org.chromium.components.sync.protocol.FaviconData.newBuilder(faviconTouch64_).mergeFrom(value).buildPartial();
    } else {
      faviconTouch64_ = value;
    }
    bitField0_ |= 0x00000008;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (not precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
   */
  private void clearFaviconTouch64() {  faviconTouch64_ = null;
    bitField0_ = (bitField0_ & ~0x00000008);
  }

  public static final int FAVICON_TOUCH_PRECOMPOSED_64_FIELD_NUMBER = 5;
  private org.chromium.components.sync.protocol.FaviconData faviconTouchPrecomposed64_;
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  public boolean hasFaviconTouchPrecomposed64() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  public org.chromium.components.sync.protocol.FaviconData getFaviconTouchPrecomposed64() {
    return faviconTouchPrecomposed64_ == null ? org.chromium.components.sync.protocol.FaviconData.getDefaultInstance() : faviconTouchPrecomposed64_;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  private void setFaviconTouchPrecomposed64(org.chromium.components.sync.protocol.FaviconData value) {
    if (value == null) {
      throw new NullPointerException();
    }
    faviconTouchPrecomposed64_ = value;
    bitField0_ |= 0x00000010;
    }
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  private void setFaviconTouchPrecomposed64(
      org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
    faviconTouchPrecomposed64_ = builderForValue.build();
    bitField0_ |= 0x00000010;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  private void mergeFaviconTouchPrecomposed64(org.chromium.components.sync.protocol.FaviconData value) {
    if (faviconTouchPrecomposed64_ != null &&
        faviconTouchPrecomposed64_ != org.chromium.components.sync.protocol.FaviconData.getDefaultInstance()) {
      faviconTouchPrecomposed64_ =
        org.chromium.components.sync.protocol.FaviconData.newBuilder(faviconTouchPrecomposed64_).mergeFrom(value).buildPartial();
    } else {
      faviconTouchPrecomposed64_ = value;
    }
    bitField0_ |= 0x00000010;
  }
  /**
   * <pre>
   * A high-resolution touch favicon (precomposed, max resolution 64x64).
   * </pre>
   *
   * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
   */
  private void clearFaviconTouchPrecomposed64() {  faviconTouchPrecomposed64_ = null;
    bitField0_ = (bitField0_ & ~0x00000010);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getFaviconUrl());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(2, getFaviconWeb());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeMessage(3, getFaviconWeb32());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeMessage(4, getFaviconTouch64());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(5, getFaviconTouchPrecomposed64());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getFaviconUrl());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getFaviconWeb());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getFaviconWeb32());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getFaviconTouch64());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getFaviconTouchPrecomposed64());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.FaviconImageSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.FaviconImageSpecifics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Image data for favicons. Multiple resolutions are supported.
   * </pre>
   *
   * Protobuf type {@code sync_pb.FaviconImageSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.FaviconImageSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.FaviconImageSpecifics)
      org.chromium.components.sync.protocol.FaviconImageSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.FaviconImageSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     */
    public boolean hasFaviconUrl() {
      return instance.hasFaviconUrl();
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     */
    public java.lang.String getFaviconUrl() {
      return instance.getFaviconUrl();
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFaviconUrlBytes() {
      return instance.getFaviconUrlBytes();
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     */
    public Builder setFaviconUrl(
        java.lang.String value) {
      copyOnWrite();
      instance.setFaviconUrl(value);
      return this;
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     */
    public Builder clearFaviconUrl() {
      copyOnWrite();
      instance.clearFaviconUrl();
      return this;
    }
    /**
     * <pre>
     * The url of the favicon image.
     * </pre>
     *
     * <code>optional string favicon_url = 1;</code>
     */
    public Builder setFaviconUrlBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setFaviconUrlBytes(value);
      return this;
    }

    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public boolean hasFaviconWeb() {
      return instance.hasFaviconWeb();
    }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public org.chromium.components.sync.protocol.FaviconData getFaviconWeb() {
      return instance.getFaviconWeb();
    }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public Builder setFaviconWeb(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.setFaviconWeb(value);
      return this;
      }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public Builder setFaviconWeb(
        org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
      copyOnWrite();
      instance.setFaviconWeb(builderForValue);
      return this;
    }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public Builder mergeFaviconWeb(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.mergeFaviconWeb(value);
      return this;
    }
    /**
     * <pre>
     * A normal low-resolution web favicon (max resolution 16x16).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web = 2;</code>
     */
    public Builder clearFaviconWeb() {  copyOnWrite();
      instance.clearFaviconWeb();
      return this;
    }

    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public boolean hasFaviconWeb32() {
      return instance.hasFaviconWeb32();
    }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public org.chromium.components.sync.protocol.FaviconData getFaviconWeb32() {
      return instance.getFaviconWeb32();
    }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public Builder setFaviconWeb32(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.setFaviconWeb32(value);
      return this;
      }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public Builder setFaviconWeb32(
        org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
      copyOnWrite();
      instance.setFaviconWeb32(builderForValue);
      return this;
    }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public Builder mergeFaviconWeb32(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.mergeFaviconWeb32(value);
      return this;
    }
    /**
     * <pre>
     * A slightly higher-resolution web favicon (max resolution 32x32).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_web_32 = 3;</code>
     */
    public Builder clearFaviconWeb32() {  copyOnWrite();
      instance.clearFaviconWeb32();
      return this;
    }

    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public boolean hasFaviconTouch64() {
      return instance.hasFaviconTouch64();
    }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public org.chromium.components.sync.protocol.FaviconData getFaviconTouch64() {
      return instance.getFaviconTouch64();
    }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public Builder setFaviconTouch64(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.setFaviconTouch64(value);
      return this;
      }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public Builder setFaviconTouch64(
        org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
      copyOnWrite();
      instance.setFaviconTouch64(builderForValue);
      return this;
    }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public Builder mergeFaviconTouch64(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.mergeFaviconTouch64(value);
      return this;
    }
    /**
     * <pre>
     * A high-resolution touch favicon (not precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_64 = 4;</code>
     */
    public Builder clearFaviconTouch64() {  copyOnWrite();
      instance.clearFaviconTouch64();
      return this;
    }

    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public boolean hasFaviconTouchPrecomposed64() {
      return instance.hasFaviconTouchPrecomposed64();
    }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public org.chromium.components.sync.protocol.FaviconData getFaviconTouchPrecomposed64() {
      return instance.getFaviconTouchPrecomposed64();
    }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public Builder setFaviconTouchPrecomposed64(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.setFaviconTouchPrecomposed64(value);
      return this;
      }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public Builder setFaviconTouchPrecomposed64(
        org.chromium.components.sync.protocol.FaviconData.Builder builderForValue) {
      copyOnWrite();
      instance.setFaviconTouchPrecomposed64(builderForValue);
      return this;
    }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public Builder mergeFaviconTouchPrecomposed64(org.chromium.components.sync.protocol.FaviconData value) {
      copyOnWrite();
      instance.mergeFaviconTouchPrecomposed64(value);
      return this;
    }
    /**
     * <pre>
     * A high-resolution touch favicon (precomposed, max resolution 64x64).
     * </pre>
     *
     * <code>optional .sync_pb.FaviconData favicon_touch_precomposed_64 = 5;</code>
     */
    public Builder clearFaviconTouchPrecomposed64() {  copyOnWrite();
      instance.clearFaviconTouchPrecomposed64();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.FaviconImageSpecifics)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.FaviconImageSpecifics();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.FaviconImageSpecifics other = (org.chromium.components.sync.protocol.FaviconImageSpecifics) arg1;
        faviconUrl_ = visitor.visitString(
            hasFaviconUrl(), faviconUrl_,
            other.hasFaviconUrl(), other.faviconUrl_);
        faviconWeb_ = visitor.visitMessage(faviconWeb_, other.faviconWeb_);
        faviconWeb32_ = visitor.visitMessage(faviconWeb32_, other.faviconWeb32_);
        faviconTouch64_ = visitor.visitMessage(faviconTouch64_, other.faviconTouch64_);
        faviconTouchPrecomposed64_ = visitor.visitMessage(faviconTouchPrecomposed64_, other.faviconTouchPrecomposed64_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                faviconUrl_ = s;
                break;
              }
              case 18: {
                org.chromium.components.sync.protocol.FaviconData.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = faviconWeb_.toBuilder();
                }
                faviconWeb_ = input.readMessage(org.chromium.components.sync.protocol.FaviconData.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(faviconWeb_);
                  faviconWeb_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                org.chromium.components.sync.protocol.FaviconData.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = faviconWeb32_.toBuilder();
                }
                faviconWeb32_ = input.readMessage(org.chromium.components.sync.protocol.FaviconData.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(faviconWeb32_);
                  faviconWeb32_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                org.chromium.components.sync.protocol.FaviconData.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = faviconTouch64_.toBuilder();
                }
                faviconTouch64_ = input.readMessage(org.chromium.components.sync.protocol.FaviconData.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(faviconTouch64_);
                  faviconTouch64_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
              case 42: {
                org.chromium.components.sync.protocol.FaviconData.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                  subBuilder = faviconTouchPrecomposed64_.toBuilder();
                }
                faviconTouchPrecomposed64_ = input.readMessage(org.chromium.components.sync.protocol.FaviconData.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(faviconTouchPrecomposed64_);
                  faviconTouchPrecomposed64_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.FaviconImageSpecifics.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.FaviconImageSpecifics)
  private static final org.chromium.components.sync.protocol.FaviconImageSpecifics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new FaviconImageSpecifics();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.FaviconImageSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<FaviconImageSpecifics> PARSER;

  public static com.google.protobuf.Parser<FaviconImageSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

