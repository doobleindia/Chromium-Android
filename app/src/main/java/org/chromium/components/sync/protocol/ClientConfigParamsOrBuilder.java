// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync.proto

package org.chromium.components.sync.protocol;

public interface ClientConfigParamsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:sync_pb.ClientConfigParams)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  java.util.List<java.lang.Integer> getEnabledTypeIdsList();
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  int getEnabledTypeIdsCount();
  /**
   * <pre>
   * The set of data types this client has enabled. Note that this does not
   * include proxy types, as they do not have protocol field numbers and are
   * placeholder types that implicitly enable protocol types.
   * </pre>
   *
   * <code>repeated int32 enabled_type_ids = 1;</code>
   */
  int getEnabledTypeIds(int index);

  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   */
  boolean hasTabsDatatypeEnabled();
  /**
   * <pre>
   * Whether the PROXY_TABS proxy datatype is enabled on this client.
   * </pre>
   *
   * <code>optional bool tabs_datatype_enabled = 2;</code>
   */
  boolean getTabsDatatypeEnabled();

  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   */
  boolean hasCookieJarMismatch();
  /**
   * <pre>
   * Whether the account(s) present in the content area's cookie jar match the
   * chrome account. If multiple accounts are present in the cookie jar, a
   * mismatch implies all of them are different from the chrome account.
   * </pre>
   *
   * <code>optional bool cookie_jar_mismatch = 3;</code>
   */
  boolean getCookieJarMismatch();
}
