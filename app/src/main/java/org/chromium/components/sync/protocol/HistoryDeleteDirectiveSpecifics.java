// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: history_delete_directive_specifics.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Properties of history delete directive sync objects.
 * </pre>
 *
 * Protobuf type {@code sync_pb.HistoryDeleteDirectiveSpecifics}
 */
public  final class HistoryDeleteDirectiveSpecifics extends
    com.google.protobuf.GeneratedMessageLite<
        HistoryDeleteDirectiveSpecifics, HistoryDeleteDirectiveSpecifics.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.HistoryDeleteDirectiveSpecifics)
    HistoryDeleteDirectiveSpecificsOrBuilder {
  private HistoryDeleteDirectiveSpecifics() {
  }
  private int bitField0_;
  public static final int GLOBAL_ID_DIRECTIVE_FIELD_NUMBER = 1;
  private org.chromium.components.sync.protocol.GlobalIdDirective globalIdDirective_;
  /**
   * <pre>
   * Exactly one of the fields below must be filled in.  Otherwise, this
   * delete directive must be ignored.
   * </pre>
   *
   * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
   */
  public boolean hasGlobalIdDirective() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Exactly one of the fields below must be filled in.  Otherwise, this
   * delete directive must be ignored.
   * </pre>
   *
   * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
   */
  public org.chromium.components.sync.protocol.GlobalIdDirective getGlobalIdDirective() {
    return globalIdDirective_ == null ? org.chromium.components.sync.protocol.GlobalIdDirective.getDefaultInstance() : globalIdDirective_;
  }
  /**
   * <pre>
   * Exactly one of the fields below must be filled in.  Otherwise, this
   * delete directive must be ignored.
   * </pre>
   *
   * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
   */
  private void setGlobalIdDirective(org.chromium.components.sync.protocol.GlobalIdDirective value) {
    if (value == null) {
      throw new NullPointerException();
    }
    globalIdDirective_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <pre>
   * Exactly one of the fields below must be filled in.  Otherwise, this
   * delete directive must be ignored.
   * </pre>
   *
   * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
   */
  private void setGlobalIdDirective(
      org.chromium.components.sync.protocol.GlobalIdDirective.Builder builderForValue) {
    globalIdDirective_ = builderForValue.build();
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * Exactly one of the fields below must be filled in.  Otherwise, this
   * delete directive must be ignored.
   * </pre>
   *
   * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
   */
  private void mergeGlobalIdDirective(org.chromium.components.sync.protocol.GlobalIdDirective value) {
    if (globalIdDirective_ != null &&
        globalIdDirective_ != org.chromium.components.sync.protocol.GlobalIdDirective.getDefaultInstance()) {
      globalIdDirective_ =
        org.chromium.components.sync.protocol.GlobalIdDirective.newBuilder(globalIdDirective_).mergeFrom(value).buildPartial();
    } else {
      globalIdDirective_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * Exactly one of the fields below must be filled in.  Otherwise, this
   * delete directive must be ignored.
   * </pre>
   *
   * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
   */
  private void clearGlobalIdDirective() {  globalIdDirective_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int TIME_RANGE_DIRECTIVE_FIELD_NUMBER = 2;
  private org.chromium.components.sync.protocol.TimeRangeDirective timeRangeDirective_;
  /**
   * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
   */
  public boolean hasTimeRangeDirective() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
   */
  public org.chromium.components.sync.protocol.TimeRangeDirective getTimeRangeDirective() {
    return timeRangeDirective_ == null ? org.chromium.components.sync.protocol.TimeRangeDirective.getDefaultInstance() : timeRangeDirective_;
  }
  /**
   * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
   */
  private void setTimeRangeDirective(org.chromium.components.sync.protocol.TimeRangeDirective value) {
    if (value == null) {
      throw new NullPointerException();
    }
    timeRangeDirective_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
   */
  private void setTimeRangeDirective(
      org.chromium.components.sync.protocol.TimeRangeDirective.Builder builderForValue) {
    timeRangeDirective_ = builderForValue.build();
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
   */
  private void mergeTimeRangeDirective(org.chromium.components.sync.protocol.TimeRangeDirective value) {
    if (timeRangeDirective_ != null &&
        timeRangeDirective_ != org.chromium.components.sync.protocol.TimeRangeDirective.getDefaultInstance()) {
      timeRangeDirective_ =
        org.chromium.components.sync.protocol.TimeRangeDirective.newBuilder(timeRangeDirective_).mergeFrom(value).buildPartial();
    } else {
      timeRangeDirective_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
   */
  private void clearTimeRangeDirective() {  timeRangeDirective_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int URL_DIRECTIVE_FIELD_NUMBER = 3;
  private org.chromium.components.sync.protocol.UrlDirective urlDirective_;
  /**
   * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
   */
  public boolean hasUrlDirective() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
   */
  public org.chromium.components.sync.protocol.UrlDirective getUrlDirective() {
    return urlDirective_ == null ? org.chromium.components.sync.protocol.UrlDirective.getDefaultInstance() : urlDirective_;
  }
  /**
   * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
   */
  private void setUrlDirective(org.chromium.components.sync.protocol.UrlDirective value) {
    if (value == null) {
      throw new NullPointerException();
    }
    urlDirective_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
   */
  private void setUrlDirective(
      org.chromium.components.sync.protocol.UrlDirective.Builder builderForValue) {
    urlDirective_ = builderForValue.build();
    bitField0_ |= 0x00000004;
  }
  /**
   * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
   */
  private void mergeUrlDirective(org.chromium.components.sync.protocol.UrlDirective value) {
    if (urlDirective_ != null &&
        urlDirective_ != org.chromium.components.sync.protocol.UrlDirective.getDefaultInstance()) {
      urlDirective_ =
        org.chromium.components.sync.protocol.UrlDirective.newBuilder(urlDirective_).mergeFrom(value).buildPartial();
    } else {
      urlDirective_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
   */
  private void clearUrlDirective() {  urlDirective_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, getGlobalIdDirective());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(2, getTimeRangeDirective());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeMessage(3, getUrlDirective());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getGlobalIdDirective());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTimeRangeDirective());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getUrlDirective());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Properties of history delete directive sync objects.
   * </pre>
   *
   * Protobuf type {@code sync_pb.HistoryDeleteDirectiveSpecifics}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.HistoryDeleteDirectiveSpecifics)
      org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecificsOrBuilder {
    // Construct using org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Exactly one of the fields below must be filled in.  Otherwise, this
     * delete directive must be ignored.
     * </pre>
     *
     * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
     */
    public boolean hasGlobalIdDirective() {
      return instance.hasGlobalIdDirective();
    }
    /**
     * <pre>
     * Exactly one of the fields below must be filled in.  Otherwise, this
     * delete directive must be ignored.
     * </pre>
     *
     * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
     */
    public org.chromium.components.sync.protocol.GlobalIdDirective getGlobalIdDirective() {
      return instance.getGlobalIdDirective();
    }
    /**
     * <pre>
     * Exactly one of the fields below must be filled in.  Otherwise, this
     * delete directive must be ignored.
     * </pre>
     *
     * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
     */
    public Builder setGlobalIdDirective(org.chromium.components.sync.protocol.GlobalIdDirective value) {
      copyOnWrite();
      instance.setGlobalIdDirective(value);
      return this;
      }
    /**
     * <pre>
     * Exactly one of the fields below must be filled in.  Otherwise, this
     * delete directive must be ignored.
     * </pre>
     *
     * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
     */
    public Builder setGlobalIdDirective(
        org.chromium.components.sync.protocol.GlobalIdDirective.Builder builderForValue) {
      copyOnWrite();
      instance.setGlobalIdDirective(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Exactly one of the fields below must be filled in.  Otherwise, this
     * delete directive must be ignored.
     * </pre>
     *
     * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
     */
    public Builder mergeGlobalIdDirective(org.chromium.components.sync.protocol.GlobalIdDirective value) {
      copyOnWrite();
      instance.mergeGlobalIdDirective(value);
      return this;
    }
    /**
     * <pre>
     * Exactly one of the fields below must be filled in.  Otherwise, this
     * delete directive must be ignored.
     * </pre>
     *
     * <code>optional .sync_pb.GlobalIdDirective global_id_directive = 1;</code>
     */
    public Builder clearGlobalIdDirective() {  copyOnWrite();
      instance.clearGlobalIdDirective();
      return this;
    }

    /**
     * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
     */
    public boolean hasTimeRangeDirective() {
      return instance.hasTimeRangeDirective();
    }
    /**
     * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
     */
    public org.chromium.components.sync.protocol.TimeRangeDirective getTimeRangeDirective() {
      return instance.getTimeRangeDirective();
    }
    /**
     * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
     */
    public Builder setTimeRangeDirective(org.chromium.components.sync.protocol.TimeRangeDirective value) {
      copyOnWrite();
      instance.setTimeRangeDirective(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
     */
    public Builder setTimeRangeDirective(
        org.chromium.components.sync.protocol.TimeRangeDirective.Builder builderForValue) {
      copyOnWrite();
      instance.setTimeRangeDirective(builderForValue);
      return this;
    }
    /**
     * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
     */
    public Builder mergeTimeRangeDirective(org.chromium.components.sync.protocol.TimeRangeDirective value) {
      copyOnWrite();
      instance.mergeTimeRangeDirective(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.TimeRangeDirective time_range_directive = 2;</code>
     */
    public Builder clearTimeRangeDirective() {  copyOnWrite();
      instance.clearTimeRangeDirective();
      return this;
    }

    /**
     * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
     */
    public boolean hasUrlDirective() {
      return instance.hasUrlDirective();
    }
    /**
     * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
     */
    public org.chromium.components.sync.protocol.UrlDirective getUrlDirective() {
      return instance.getUrlDirective();
    }
    /**
     * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
     */
    public Builder setUrlDirective(org.chromium.components.sync.protocol.UrlDirective value) {
      copyOnWrite();
      instance.setUrlDirective(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
     */
    public Builder setUrlDirective(
        org.chromium.components.sync.protocol.UrlDirective.Builder builderForValue) {
      copyOnWrite();
      instance.setUrlDirective(builderForValue);
      return this;
    }
    /**
     * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
     */
    public Builder mergeUrlDirective(org.chromium.components.sync.protocol.UrlDirective value) {
      copyOnWrite();
      instance.mergeUrlDirective(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.UrlDirective url_directive = 3;</code>
     */
    public Builder clearUrlDirective() {  copyOnWrite();
      instance.clearUrlDirective();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.HistoryDeleteDirectiveSpecifics)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics other = (org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics) arg1;
        globalIdDirective_ = visitor.visitMessage(globalIdDirective_, other.globalIdDirective_);
        timeRangeDirective_ = visitor.visitMessage(timeRangeDirective_, other.timeRangeDirective_);
        urlDirective_ = visitor.visitMessage(urlDirective_, other.urlDirective_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.chromium.components.sync.protocol.GlobalIdDirective.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = globalIdDirective_.toBuilder();
                }
                globalIdDirective_ = input.readMessage(org.chromium.components.sync.protocol.GlobalIdDirective.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(globalIdDirective_);
                  globalIdDirective_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                org.chromium.components.sync.protocol.TimeRangeDirective.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = timeRangeDirective_.toBuilder();
                }
                timeRangeDirective_ = input.readMessage(org.chromium.components.sync.protocol.TimeRangeDirective.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(timeRangeDirective_);
                  timeRangeDirective_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                org.chromium.components.sync.protocol.UrlDirective.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = urlDirective_.toBuilder();
                }
                urlDirective_ = input.readMessage(org.chromium.components.sync.protocol.UrlDirective.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(urlDirective_);
                  urlDirective_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.HistoryDeleteDirectiveSpecifics)
  private static final org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new HistoryDeleteDirectiveSpecifics();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.HistoryDeleteDirectiveSpecifics getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<HistoryDeleteDirectiveSpecifics> PARSER;

  public static com.google.protobuf.Parser<HistoryDeleteDirectiveSpecifics> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

