// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/libraries/api/internal/stream_data.proto

package org.chromium.components.feed.core.proto.libraries.api.internal;

public final class StreamDataProto {
  private StreamDataProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata.clientBasicLoggingMetadata);
  }
  public interface StreamFeatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamFeature)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    boolean hasContentId();
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    java.lang.String getContentId();
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getContentIdBytes();

    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    boolean hasParentId();
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    java.lang.String getParentId();
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getParentIdBytes();

    /**
     * <pre>
     * Stream structure which defines how a stream will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
     */
    boolean hasStream();
    /**
     * <pre>
     * Stream structure which defines how a stream will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
     */
    org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream getStream();

    /**
     * <pre>
     * Card stream structure which defines how a card will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
     */
    boolean hasCard();
    /**
     * <pre>
     * Card stream structure which defines how a card will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
     */
    org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card getCard();

    /**
     * <pre>
     * Content stream structure.  Describes information which will be rendered
     * on screen.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
     */
    boolean hasContent();
    /**
     * <pre>
     * Content stream structure.  Describes information which will be rendered
     * on screen.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
     */
    org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content getContent();

    /**
     * <pre>
     * Cluster stream structure which defines a logical grouping of Content and
     * Cards.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
     */
    boolean hasCluster();
    /**
     * <pre>
     * Cluster stream structure which defines a logical grouping of Content and
     * Cards.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
     */
    org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster getCluster();

    /**
     * <pre>
     * Legacy content
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
     */
    boolean hasLegacyContent();
    /**
     * <pre>
     * Legacy content
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload getLegacyContent();

    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.FeaturePayloadCase getFeaturePayloadCase();
  }
  /**
   * <pre>
   * A StreamFeature represents a node within the tree forming the Stream.  The
   * stream contains structure and content at multiple levels.  This
   * structure is represented as a tree of features.  These features include
   * Clusters, Hero Cards, Carousels, Piet Content, etc.  Nodes internal to the
   * tree may have both content and children.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamFeature}
   */
  public  static final class StreamFeature extends
      com.google.protobuf.GeneratedMessageLite<
          StreamFeature, StreamFeature.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamFeature)
      StreamFeatureOrBuilder {
    private StreamFeature() {
      contentId_ = "";
      parentId_ = "";
    }
    private int bitField0_;
    private int featurePayloadCase_ = 0;
    private java.lang.Object featurePayload_;
    public enum FeaturePayloadCase
        implements com.google.protobuf.Internal.EnumLite {
      STREAM(4),
      CARD(5),
      CONTENT(6),
      CLUSTER(7),
      LEGACY_CONTENT(8),
      FEATUREPAYLOAD_NOT_SET(0);
      private final int value;
      private FeaturePayloadCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FeaturePayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static FeaturePayloadCase forNumber(int value) {
        switch (value) {
          case 4: return STREAM;
          case 5: return CARD;
          case 6: return CONTENT;
          case 7: return CLUSTER;
          case 8: return LEGACY_CONTENT;
          case 0: return FEATUREPAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FeaturePayloadCase
    getFeaturePayloadCase() {
      return FeaturePayloadCase.forNumber(
          featurePayloadCase_);
    }

    private void clearFeaturePayload() {
      featurePayloadCase_ = 0;
      featurePayload_ = null;
    }

    public static final int CONTENT_ID_FIELD_NUMBER = 1;
    private java.lang.String contentId_;
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    public boolean hasContentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    public java.lang.String getContentId() {
      return contentId_;
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getContentIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(contentId_);
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    private void setContentId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      contentId_ = value;
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    private void clearContentId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      contentId_ = getDefaultInstance().getContentId();
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    private void setContentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      contentId_ = value.toStringUtf8();
    }

    public static final int PARENT_ID_FIELD_NUMBER = 2;
    private java.lang.String parentId_;
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    public boolean hasParentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    public java.lang.String getParentId() {
      return parentId_;
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getParentIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(parentId_);
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    private void setParentId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      parentId_ = value;
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    private void clearParentId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      parentId_ = getDefaultInstance().getParentId();
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    private void setParentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      parentId_ = value.toStringUtf8();
    }

    public static final int STREAM_FIELD_NUMBER = 4;
    /**
     * <pre>
     * Stream structure which defines how a stream will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
     */
    public boolean hasStream() {
      return featurePayloadCase_ == 4;
    }
    /**
     * <pre>
     * Stream structure which defines how a stream will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
     */
    public org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream getStream() {
      if (featurePayloadCase_ == 4) {
         return (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream) featurePayload_;
      }
      return org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream.getDefaultInstance();
    }
    /**
     * <pre>
     * Stream structure which defines how a stream will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
     */
    private void setStream(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream value) {
      if (value == null) {
        throw new NullPointerException();
      }
      featurePayload_ = value;
      featurePayloadCase_ = 4;
    }
    /**
     * <pre>
     * Stream structure which defines how a stream will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
     */
    private void setStream(
        org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream.Builder builderForValue) {
      featurePayload_ = builderForValue.build();
      featurePayloadCase_ = 4;
    }
    /**
     * <pre>
     * Stream structure which defines how a stream will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
     */
    private void mergeStream(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream value) {
      if (featurePayloadCase_ == 4 &&
          featurePayload_ != org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream.getDefaultInstance()) {
        featurePayload_ = org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream.newBuilder((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream) featurePayload_)
            .mergeFrom(value).buildPartial();
      } else {
        featurePayload_ = value;
      }
      featurePayloadCase_ = 4;
    }
    /**
     * <pre>
     * Stream structure which defines how a stream will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
     */
    private void clearStream() {
      if (featurePayloadCase_ == 4) {
        featurePayloadCase_ = 0;
        featurePayload_ = null;
      }
    }

    public static final int CARD_FIELD_NUMBER = 5;
    /**
     * <pre>
     * Card stream structure which defines how a card will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
     */
    public boolean hasCard() {
      return featurePayloadCase_ == 5;
    }
    /**
     * <pre>
     * Card stream structure which defines how a card will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
     */
    public org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card getCard() {
      if (featurePayloadCase_ == 5) {
         return (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card) featurePayload_;
      }
      return org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card.getDefaultInstance();
    }
    /**
     * <pre>
     * Card stream structure which defines how a card will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
     */
    private void setCard(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card value) {
      if (value == null) {
        throw new NullPointerException();
      }
      featurePayload_ = value;
      featurePayloadCase_ = 5;
    }
    /**
     * <pre>
     * Card stream structure which defines how a card will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
     */
    private void setCard(
        org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card.Builder builderForValue) {
      featurePayload_ = builderForValue.build();
      featurePayloadCase_ = 5;
    }
    /**
     * <pre>
     * Card stream structure which defines how a card will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
     */
    private void mergeCard(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card value) {
      if (featurePayloadCase_ == 5 &&
          featurePayload_ != org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card.getDefaultInstance()) {
        featurePayload_ = org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card.newBuilder((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card) featurePayload_)
            .mergeFrom(value).buildPartial();
      } else {
        featurePayload_ = value;
      }
      featurePayloadCase_ = 5;
    }
    /**
     * <pre>
     * Card stream structure which defines how a card will work and look.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
     */
    private void clearCard() {
      if (featurePayloadCase_ == 5) {
        featurePayloadCase_ = 0;
        featurePayload_ = null;
      }
    }

    public static final int CONTENT_FIELD_NUMBER = 6;
    /**
     * <pre>
     * Content stream structure.  Describes information which will be rendered
     * on screen.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
     */
    public boolean hasContent() {
      return featurePayloadCase_ == 6;
    }
    /**
     * <pre>
     * Content stream structure.  Describes information which will be rendered
     * on screen.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
     */
    public org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content getContent() {
      if (featurePayloadCase_ == 6) {
         return (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content) featurePayload_;
      }
      return org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content.getDefaultInstance();
    }
    /**
     * <pre>
     * Content stream structure.  Describes information which will be rendered
     * on screen.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
     */
    private void setContent(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content value) {
      if (value == null) {
        throw new NullPointerException();
      }
      featurePayload_ = value;
      featurePayloadCase_ = 6;
    }
    /**
     * <pre>
     * Content stream structure.  Describes information which will be rendered
     * on screen.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
     */
    private void setContent(
        org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content.Builder builderForValue) {
      featurePayload_ = builderForValue.build();
      featurePayloadCase_ = 6;
    }
    /**
     * <pre>
     * Content stream structure.  Describes information which will be rendered
     * on screen.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
     */
    private void mergeContent(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content value) {
      if (featurePayloadCase_ == 6 &&
          featurePayload_ != org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content.getDefaultInstance()) {
        featurePayload_ = org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content.newBuilder((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content) featurePayload_)
            .mergeFrom(value).buildPartial();
      } else {
        featurePayload_ = value;
      }
      featurePayloadCase_ = 6;
    }
    /**
     * <pre>
     * Content stream structure.  Describes information which will be rendered
     * on screen.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
     */
    private void clearContent() {
      if (featurePayloadCase_ == 6) {
        featurePayloadCase_ = 0;
        featurePayload_ = null;
      }
    }

    public static final int CLUSTER_FIELD_NUMBER = 7;
    /**
     * <pre>
     * Cluster stream structure which defines a logical grouping of Content and
     * Cards.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
     */
    public boolean hasCluster() {
      return featurePayloadCase_ == 7;
    }
    /**
     * <pre>
     * Cluster stream structure which defines a logical grouping of Content and
     * Cards.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
     */
    public org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster getCluster() {
      if (featurePayloadCase_ == 7) {
         return (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster) featurePayload_;
      }
      return org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster.getDefaultInstance();
    }
    /**
     * <pre>
     * Cluster stream structure which defines a logical grouping of Content and
     * Cards.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
     */
    private void setCluster(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster value) {
      if (value == null) {
        throw new NullPointerException();
      }
      featurePayload_ = value;
      featurePayloadCase_ = 7;
    }
    /**
     * <pre>
     * Cluster stream structure which defines a logical grouping of Content and
     * Cards.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
     */
    private void setCluster(
        org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster.Builder builderForValue) {
      featurePayload_ = builderForValue.build();
      featurePayloadCase_ = 7;
    }
    /**
     * <pre>
     * Cluster stream structure which defines a logical grouping of Content and
     * Cards.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
     */
    private void mergeCluster(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster value) {
      if (featurePayloadCase_ == 7 &&
          featurePayload_ != org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster.getDefaultInstance()) {
        featurePayload_ = org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster.newBuilder((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster) featurePayload_)
            .mergeFrom(value).buildPartial();
      } else {
        featurePayload_ = value;
      }
      featurePayloadCase_ = 7;
    }
    /**
     * <pre>
     * Cluster stream structure which defines a logical grouping of Content and
     * Cards.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
     */
    private void clearCluster() {
      if (featurePayloadCase_ == 7) {
        featurePayloadCase_ = 0;
        featurePayload_ = null;
      }
    }

    public static final int LEGACY_CONTENT_FIELD_NUMBER = 8;
    /**
     * <pre>
     * Legacy content
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
     */
    public boolean hasLegacyContent() {
      return featurePayloadCase_ == 8;
    }
    /**
     * <pre>
     * Legacy content
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload getLegacyContent() {
      if (featurePayloadCase_ == 8) {
         return (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload) featurePayload_;
      }
      return org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload.getDefaultInstance();
    }
    /**
     * <pre>
     * Legacy content
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
     */
    private void setLegacyContent(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload value) {
      if (value == null) {
        throw new NullPointerException();
      }
      featurePayload_ = value;
      featurePayloadCase_ = 8;
    }
    /**
     * <pre>
     * Legacy content
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
     */
    private void setLegacyContent(
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload.Builder builderForValue) {
      featurePayload_ = builderForValue.build();
      featurePayloadCase_ = 8;
    }
    /**
     * <pre>
     * Legacy content
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
     */
    private void mergeLegacyContent(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload value) {
      if (featurePayloadCase_ == 8 &&
          featurePayload_ != org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload.getDefaultInstance()) {
        featurePayload_ = org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload.newBuilder((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload) featurePayload_)
            .mergeFrom(value).buildPartial();
      } else {
        featurePayload_ = value;
      }
      featurePayloadCase_ = 8;
    }
    /**
     * <pre>
     * Legacy content
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
     */
    private void clearLegacyContent() {
      if (featurePayloadCase_ == 8) {
        featurePayloadCase_ = 0;
        featurePayload_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getContentId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getParentId());
      }
      if (featurePayloadCase_ == 4) {
        output.writeMessage(4, (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream) featurePayload_);
      }
      if (featurePayloadCase_ == 5) {
        output.writeMessage(5, (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card) featurePayload_);
      }
      if (featurePayloadCase_ == 6) {
        output.writeMessage(6, (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content) featurePayload_);
      }
      if (featurePayloadCase_ == 7) {
        output.writeMessage(7, (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster) featurePayload_);
      }
      if (featurePayloadCase_ == 8) {
        output.writeMessage(8, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload) featurePayload_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getContentId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getParentId());
      }
      if (featurePayloadCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream) featurePayload_);
      }
      if (featurePayloadCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card) featurePayload_);
      }
      if (featurePayloadCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content) featurePayload_);
      }
      if (featurePayloadCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster) featurePayload_);
      }
      if (featurePayloadCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload) featurePayload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A StreamFeature represents a node within the tree forming the Stream.  The
     * stream contains structure and content at multiple levels.  This
     * structure is represented as a tree of features.  These features include
     * Clusters, Hero Cards, Carousels, Piet Content, etc.  Nodes internal to the
     * tree may have both content and children.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamFeature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamFeature)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeatureOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public FeaturePayloadCase
          getFeaturePayloadCase() {
        return instance.getFeaturePayloadCase();
      }

      public Builder clearFeaturePayload() {
        copyOnWrite();
        instance.clearFeaturePayload();
        return this;
      }


      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public boolean hasContentId() {
        return instance.hasContentId();
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public java.lang.String getContentId() {
        return instance.getContentId();
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getContentIdBytes() {
        return instance.getContentIdBytes();
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public Builder setContentId(
          java.lang.String value) {
        copyOnWrite();
        instance.setContentId(value);
        return this;
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public Builder clearContentId() {
        copyOnWrite();
        instance.clearContentId();
        return this;
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public Builder setContentIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContentIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public boolean hasParentId() {
        return instance.hasParentId();
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public java.lang.String getParentId() {
        return instance.getParentId();
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getParentIdBytes() {
        return instance.getParentIdBytes();
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public Builder setParentId(
          java.lang.String value) {
        copyOnWrite();
        instance.setParentId(value);
        return this;
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public Builder clearParentId() {
        copyOnWrite();
        instance.clearParentId();
        return this;
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public Builder setParentIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setParentIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Stream structure which defines how a stream will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
       */
      public boolean hasStream() {
        return instance.hasStream();
      }
      /**
       * <pre>
       * Stream structure which defines how a stream will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
       */
      public org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream getStream() {
        return instance.getStream();
      }
      /**
       * <pre>
       * Stream structure which defines how a stream will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
       */
      public Builder setStream(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream value) {
        copyOnWrite();
        instance.setStream(value);
        return this;
      }
      /**
       * <pre>
       * Stream structure which defines how a stream will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
       */
      public Builder setStream(
          org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream.Builder builderForValue) {
        copyOnWrite();
        instance.setStream(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Stream structure which defines how a stream will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
       */
      public Builder mergeStream(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream value) {
        copyOnWrite();
        instance.mergeStream(value);
        return this;
      }
      /**
       * <pre>
       * Stream structure which defines how a stream will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Stream stream = 4;</code>
       */
      public Builder clearStream() {
        copyOnWrite();
        instance.clearStream();
        return this;
      }

      /**
       * <pre>
       * Card stream structure which defines how a card will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
       */
      public boolean hasCard() {
        return instance.hasCard();
      }
      /**
       * <pre>
       * Card stream structure which defines how a card will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
       */
      public org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card getCard() {
        return instance.getCard();
      }
      /**
       * <pre>
       * Card stream structure which defines how a card will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
       */
      public Builder setCard(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card value) {
        copyOnWrite();
        instance.setCard(value);
        return this;
      }
      /**
       * <pre>
       * Card stream structure which defines how a card will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
       */
      public Builder setCard(
          org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card.Builder builderForValue) {
        copyOnWrite();
        instance.setCard(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Card stream structure which defines how a card will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
       */
      public Builder mergeCard(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card value) {
        copyOnWrite();
        instance.mergeCard(value);
        return this;
      }
      /**
       * <pre>
       * Card stream structure which defines how a card will work and look.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Card card = 5;</code>
       */
      public Builder clearCard() {
        copyOnWrite();
        instance.clearCard();
        return this;
      }

      /**
       * <pre>
       * Content stream structure.  Describes information which will be rendered
       * on screen.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
       */
      public boolean hasContent() {
        return instance.hasContent();
      }
      /**
       * <pre>
       * Content stream structure.  Describes information which will be rendered
       * on screen.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
       */
      public org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content getContent() {
        return instance.getContent();
      }
      /**
       * <pre>
       * Content stream structure.  Describes information which will be rendered
       * on screen.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
       */
      public Builder setContent(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content value) {
        copyOnWrite();
        instance.setContent(value);
        return this;
      }
      /**
       * <pre>
       * Content stream structure.  Describes information which will be rendered
       * on screen.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
       */
      public Builder setContent(
          org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content.Builder builderForValue) {
        copyOnWrite();
        instance.setContent(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Content stream structure.  Describes information which will be rendered
       * on screen.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
       */
      public Builder mergeContent(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content value) {
        copyOnWrite();
        instance.mergeContent(value);
        return this;
      }
      /**
       * <pre>
       * Content stream structure.  Describes information which will be rendered
       * on screen.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Content content = 6;</code>
       */
      public Builder clearContent() {
        copyOnWrite();
        instance.clearContent();
        return this;
      }

      /**
       * <pre>
       * Cluster stream structure which defines a logical grouping of Content and
       * Cards.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
       */
      public boolean hasCluster() {
        return instance.hasCluster();
      }
      /**
       * <pre>
       * Cluster stream structure which defines a logical grouping of Content and
       * Cards.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
       */
      public org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster getCluster() {
        return instance.getCluster();
      }
      /**
       * <pre>
       * Cluster stream structure which defines a logical grouping of Content and
       * Cards.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
       */
      public Builder setCluster(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster value) {
        copyOnWrite();
        instance.setCluster(value);
        return this;
      }
      /**
       * <pre>
       * Cluster stream structure which defines a logical grouping of Content and
       * Cards.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
       */
      public Builder setCluster(
          org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster.Builder builderForValue) {
        copyOnWrite();
        instance.setCluster(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Cluster stream structure which defines a logical grouping of Content and
       * Cards.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
       */
      public Builder mergeCluster(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster value) {
        copyOnWrite();
        instance.mergeCluster(value);
        return this;
      }
      /**
       * <pre>
       * Cluster stream structure which defines a logical grouping of Content and
       * Cards.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.ui.stream.Cluster cluster = 7;</code>
       */
      public Builder clearCluster() {
        copyOnWrite();
        instance.clearCluster();
        return this;
      }

      /**
       * <pre>
       * Legacy content
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
       */
      public boolean hasLegacyContent() {
        return instance.hasLegacyContent();
      }
      /**
       * <pre>
       * Legacy content
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload getLegacyContent() {
        return instance.getLegacyContent();
      }
      /**
       * <pre>
       * Legacy content
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
       */
      public Builder setLegacyContent(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload value) {
        copyOnWrite();
        instance.setLegacyContent(value);
        return this;
      }
      /**
       * <pre>
       * Legacy content
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
       */
      public Builder setLegacyContent(
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload.Builder builderForValue) {
        copyOnWrite();
        instance.setLegacyContent(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Legacy content
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
       */
      public Builder mergeLegacyContent(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload value) {
        copyOnWrite();
        instance.mergeLegacyContent(value);
        return this;
      }
      /**
       * <pre>
       * Legacy content
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamLegacyPayload legacy_content = 8;</code>
       */
      public Builder clearLegacyContent() {
        copyOnWrite();
        instance.clearLegacyContent();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamFeature)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasCard()) {
            if (!getCard().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasContent()) {
            if (!getContent().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature) arg1;
          contentId_ = visitor.visitString(
              hasContentId(), contentId_,
              other.hasContentId(), other.contentId_);
          parentId_ = visitor.visitString(
              hasParentId(), parentId_,
              other.hasParentId(), other.parentId_);
          switch (other.getFeaturePayloadCase()) {
            case STREAM: {
              featurePayload_ = visitor.visitOneofMessage(
                  featurePayloadCase_ == 4,
                  featurePayload_,
                  other.featurePayload_);
              break;
            }
            case CARD: {
              featurePayload_ = visitor.visitOneofMessage(
                  featurePayloadCase_ == 5,
                  featurePayload_,
                  other.featurePayload_);
              break;
            }
            case CONTENT: {
              featurePayload_ = visitor.visitOneofMessage(
                  featurePayloadCase_ == 6,
                  featurePayload_,
                  other.featurePayload_);
              break;
            }
            case CLUSTER: {
              featurePayload_ = visitor.visitOneofMessage(
                  featurePayloadCase_ == 7,
                  featurePayload_,
                  other.featurePayload_);
              break;
            }
            case LEGACY_CONTENT: {
              featurePayload_ = visitor.visitOneofMessage(
                  featurePayloadCase_ == 8,
                  featurePayload_,
                  other.featurePayload_);
              break;
            }
            case FEATUREPAYLOAD_NOT_SET: {
              visitor.visitOneofNotSet(featurePayloadCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.featurePayloadCase_ != 0) {
              featurePayloadCase_ = other.featurePayloadCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  contentId_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  parentId_ = s;
                  break;
                }
                case 34: {
                  org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream.Builder subBuilder = null;
                  if (featurePayloadCase_ == 4) {
                    subBuilder = ((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream) featurePayload_).toBuilder();
                  }
                  featurePayload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Stream) featurePayload_);
                    featurePayload_ = subBuilder.buildPartial();
                  }
                  featurePayloadCase_ = 4;
                  break;
                }
                case 42: {
                  org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card.Builder subBuilder = null;
                  if (featurePayloadCase_ == 5) {
                    subBuilder = ((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card) featurePayload_).toBuilder();
                  }
                  featurePayload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Card) featurePayload_);
                    featurePayload_ = subBuilder.buildPartial();
                  }
                  featurePayloadCase_ = 5;
                  break;
                }
                case 50: {
                  org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content.Builder subBuilder = null;
                  if (featurePayloadCase_ == 6) {
                    subBuilder = ((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content) featurePayload_).toBuilder();
                  }
                  featurePayload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Content) featurePayload_);
                    featurePayload_ = subBuilder.buildPartial();
                  }
                  featurePayloadCase_ = 6;
                  break;
                }
                case 58: {
                  org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster.Builder subBuilder = null;
                  if (featurePayloadCase_ == 7) {
                    subBuilder = ((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster) featurePayload_).toBuilder();
                  }
                  featurePayload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.Cluster) featurePayload_);
                    featurePayload_ = subBuilder.buildPartial();
                  }
                  featurePayloadCase_ = 7;
                  break;
                }
                case 66: {
                  org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload.Builder subBuilder = null;
                  if (featurePayloadCase_ == 8) {
                    subBuilder = ((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload) featurePayload_).toBuilder();
                  }
                  featurePayload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload) featurePayload_);
                    featurePayload_ = subBuilder.buildPartial();
                  }
                  featurePayloadCase_ = 8;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamFeature)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamFeature();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamFeature> PARSER;

    public static com.google.protobuf.Parser<StreamFeature> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamTokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamToken)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    boolean hasContentId();
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    java.lang.String getContentId();
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getContentIdBytes();

    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    boolean hasParentId();
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    java.lang.String getParentId();
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getParentIdBytes();

    /**
     * <pre>
     * The Token
     * </pre>
     *
     * <code>optional bytes next_page_token = 3;</code>
     */
    boolean hasNextPageToken();
    /**
     * <pre>
     * The Token
     * </pre>
     *
     * <code>optional bytes next_page_token = 3;</code>
     */
    com.google.protobuf.ByteString getNextPageToken();
  }
  /**
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamToken}
   */
  public  static final class StreamToken extends
      com.google.protobuf.GeneratedMessageLite<
          StreamToken, StreamToken.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamToken)
      StreamTokenOrBuilder {
    private StreamToken() {
      contentId_ = "";
      parentId_ = "";
      nextPageToken_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int CONTENT_ID_FIELD_NUMBER = 1;
    private java.lang.String contentId_;
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    public boolean hasContentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    public java.lang.String getContentId() {
      return contentId_;
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getContentIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(contentId_);
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    private void setContentId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      contentId_ = value;
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    private void clearContentId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      contentId_ = getDefaultInstance().getContentId();
    }
    /**
     * <pre>
     * The content id of this feature.
     * </pre>
     *
     * <code>optional string content_id = 1;</code>
     */
    private void setContentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      contentId_ = value.toStringUtf8();
    }

    public static final int PARENT_ID_FIELD_NUMBER = 2;
    private java.lang.String parentId_;
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    public boolean hasParentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    public java.lang.String getParentId() {
      return parentId_;
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getParentIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(parentId_);
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    private void setParentId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      parentId_ = value;
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    private void clearParentId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      parentId_ = getDefaultInstance().getParentId();
    }
    /**
     * <pre>
     * The parent feature if defined.  Most features will have a parent, the root
     * feature is the exception.
     * </pre>
     *
     * <code>optional string parent_id = 2;</code>
     */
    private void setParentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      parentId_ = value.toStringUtf8();
    }

    public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString nextPageToken_;
    /**
     * <pre>
     * The Token
     * </pre>
     *
     * <code>optional bytes next_page_token = 3;</code>
     */
    public boolean hasNextPageToken() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * The Token
     * </pre>
     *
     * <code>optional bytes next_page_token = 3;</code>
     */
    public com.google.protobuf.ByteString getNextPageToken() {
      return nextPageToken_;
    }
    /**
     * <pre>
     * The Token
     * </pre>
     *
     * <code>optional bytes next_page_token = 3;</code>
     */
    private void setNextPageToken(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      nextPageToken_ = value;
    }
    /**
     * <pre>
     * The Token
     * </pre>
     *
     * <code>optional bytes next_page_token = 3;</code>
     */
    private void clearNextPageToken() {
      bitField0_ = (bitField0_ & ~0x00000004);
      nextPageToken_ = getDefaultInstance().getNextPageToken();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getContentId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getParentId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, nextPageToken_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getContentId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getParentId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, nextPageToken_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamToken}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamToken)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamTokenOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public boolean hasContentId() {
        return instance.hasContentId();
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public java.lang.String getContentId() {
        return instance.getContentId();
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getContentIdBytes() {
        return instance.getContentIdBytes();
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public Builder setContentId(
          java.lang.String value) {
        copyOnWrite();
        instance.setContentId(value);
        return this;
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public Builder clearContentId() {
        copyOnWrite();
        instance.clearContentId();
        return this;
      }
      /**
       * <pre>
       * The content id of this feature.
       * </pre>
       *
       * <code>optional string content_id = 1;</code>
       */
      public Builder setContentIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContentIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public boolean hasParentId() {
        return instance.hasParentId();
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public java.lang.String getParentId() {
        return instance.getParentId();
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getParentIdBytes() {
        return instance.getParentIdBytes();
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public Builder setParentId(
          java.lang.String value) {
        copyOnWrite();
        instance.setParentId(value);
        return this;
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public Builder clearParentId() {
        copyOnWrite();
        instance.clearParentId();
        return this;
      }
      /**
       * <pre>
       * The parent feature if defined.  Most features will have a parent, the root
       * feature is the exception.
       * </pre>
       *
       * <code>optional string parent_id = 2;</code>
       */
      public Builder setParentIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setParentIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * The Token
       * </pre>
       *
       * <code>optional bytes next_page_token = 3;</code>
       */
      public boolean hasNextPageToken() {
        return instance.hasNextPageToken();
      }
      /**
       * <pre>
       * The Token
       * </pre>
       *
       * <code>optional bytes next_page_token = 3;</code>
       */
      public com.google.protobuf.ByteString getNextPageToken() {
        return instance.getNextPageToken();
      }
      /**
       * <pre>
       * The Token
       * </pre>
       *
       * <code>optional bytes next_page_token = 3;</code>
       */
      public Builder setNextPageToken(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNextPageToken(value);
        return this;
      }
      /**
       * <pre>
       * The Token
       * </pre>
       *
       * <code>optional bytes next_page_token = 3;</code>
       */
      public Builder clearNextPageToken() {
        copyOnWrite();
        instance.clearNextPageToken();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamToken)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken) arg1;
          contentId_ = visitor.visitString(
              hasContentId(), contentId_,
              other.hasContentId(), other.contentId_);
          parentId_ = visitor.visitString(
              hasParentId(), parentId_,
              other.hasParentId(), other.parentId_);
          nextPageToken_ = visitor.visitByteString(
              hasNextPageToken(), nextPageToken_,
              other.hasNextPageToken(), other.nextPageToken_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  contentId_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  parentId_ = s;
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000004;
                  nextPageToken_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamToken)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamToken();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamToken> PARSER;

    public static com.google.protobuf.Parser<StreamToken> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UiContextOrBuilder extends 
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.UiContext)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                UiContext, UiContext.Builder> {
  }
  /**
   * <pre>
   * Represents the UI state held in a mutation initiated by the UI.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.UiContext}
   */
  public  static final class UiContext extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        UiContext, UiContext.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.UiContext)
      UiContextOrBuilder {
    private UiContext() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Represents the UI state held in a mutation initiated by the UI.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.UiContext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.UiContext)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContextOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.UiContext)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext) arg1;
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.UiContext)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UiContext();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.UiContext getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UiContext> PARSER;

    public static com.google.protobuf.Parser<UiContext> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamSharedStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamSharedState)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string content_id = 1;</code>
     */
    boolean hasContentId();
    /**
     * <code>optional string content_id = 1;</code>
     */
    java.lang.String getContentId();
    /**
     * <code>optional string content_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getContentIdBytes();

    /**
     * <pre>
     * A Piet shared state item.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
     */
    boolean hasPietSharedStateItem();
    /**
     * <pre>
     * A Piet shared state item.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
     */
    org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem getPietSharedStateItem();

    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.ShareStateCase getShareStateCase();
  }
  /**
   * <pre>
   * This represents a shared state item.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamSharedState}
   */
  public  static final class StreamSharedState extends
      com.google.protobuf.GeneratedMessageLite<
          StreamSharedState, StreamSharedState.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamSharedState)
      StreamSharedStateOrBuilder {
    private StreamSharedState() {
      contentId_ = "";
    }
    private int bitField0_;
    private int shareStateCase_ = 0;
    private java.lang.Object shareState_;
    public enum ShareStateCase
        implements com.google.protobuf.Internal.EnumLite {
      PIET_SHARED_STATE_ITEM(2),
      SHARESTATE_NOT_SET(0);
      private final int value;
      private ShareStateCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ShareStateCase valueOf(int value) {
        return forNumber(value);
      }

      public static ShareStateCase forNumber(int value) {
        switch (value) {
          case 2: return PIET_SHARED_STATE_ITEM;
          case 0: return SHARESTATE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ShareStateCase
    getShareStateCase() {
      return ShareStateCase.forNumber(
          shareStateCase_);
    }

    private void clearShareState() {
      shareStateCase_ = 0;
      shareState_ = null;
    }

    public static final int CONTENT_ID_FIELD_NUMBER = 1;
    private java.lang.String contentId_;
    /**
     * <code>optional string content_id = 1;</code>
     */
    public boolean hasContentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string content_id = 1;</code>
     */
    public java.lang.String getContentId() {
      return contentId_;
    }
    /**
     * <code>optional string content_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getContentIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(contentId_);
    }
    /**
     * <code>optional string content_id = 1;</code>
     */
    private void setContentId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      contentId_ = value;
    }
    /**
     * <code>optional string content_id = 1;</code>
     */
    private void clearContentId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      contentId_ = getDefaultInstance().getContentId();
    }
    /**
     * <code>optional string content_id = 1;</code>
     */
    private void setContentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      contentId_ = value.toStringUtf8();
    }

    public static final int PIET_SHARED_STATE_ITEM_FIELD_NUMBER = 2;
    /**
     * <pre>
     * A Piet shared state item.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
     */
    public boolean hasPietSharedStateItem() {
      return shareStateCase_ == 2;
    }
    /**
     * <pre>
     * A Piet shared state item.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
     */
    public org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem getPietSharedStateItem() {
      if (shareStateCase_ == 2) {
         return (org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem) shareState_;
      }
      return org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem.getDefaultInstance();
    }
    /**
     * <pre>
     * A Piet shared state item.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
     */
    private void setPietSharedStateItem(org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem value) {
      if (value == null) {
        throw new NullPointerException();
      }
      shareState_ = value;
      shareStateCase_ = 2;
    }
    /**
     * <pre>
     * A Piet shared state item.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
     */
    private void setPietSharedStateItem(
        org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem.Builder builderForValue) {
      shareState_ = builderForValue.build();
      shareStateCase_ = 2;
    }
    /**
     * <pre>
     * A Piet shared state item.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
     */
    private void mergePietSharedStateItem(org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem value) {
      if (shareStateCase_ == 2 &&
          shareState_ != org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem.getDefaultInstance()) {
        shareState_ = org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem.newBuilder((org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem) shareState_)
            .mergeFrom(value).buildPartial();
      } else {
        shareState_ = value;
      }
      shareStateCase_ = 2;
    }
    /**
     * <pre>
     * A Piet shared state item.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
     */
    private void clearPietSharedStateItem() {
      if (shareStateCase_ == 2) {
        shareStateCase_ = 0;
        shareState_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getContentId());
      }
      if (shareStateCase_ == 2) {
        output.writeMessage(2, (org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem) shareState_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getContentId());
      }
      if (shareStateCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem) shareState_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * This represents a shared state item.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamSharedState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamSharedState)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedStateOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public ShareStateCase
          getShareStateCase() {
        return instance.getShareStateCase();
      }

      public Builder clearShareState() {
        copyOnWrite();
        instance.clearShareState();
        return this;
      }


      /**
       * <code>optional string content_id = 1;</code>
       */
      public boolean hasContentId() {
        return instance.hasContentId();
      }
      /**
       * <code>optional string content_id = 1;</code>
       */
      public java.lang.String getContentId() {
        return instance.getContentId();
      }
      /**
       * <code>optional string content_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getContentIdBytes() {
        return instance.getContentIdBytes();
      }
      /**
       * <code>optional string content_id = 1;</code>
       */
      public Builder setContentId(
          java.lang.String value) {
        copyOnWrite();
        instance.setContentId(value);
        return this;
      }
      /**
       * <code>optional string content_id = 1;</code>
       */
      public Builder clearContentId() {
        copyOnWrite();
        instance.clearContentId();
        return this;
      }
      /**
       * <code>optional string content_id = 1;</code>
       */
      public Builder setContentIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContentIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * A Piet shared state item.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
       */
      public boolean hasPietSharedStateItem() {
        return instance.hasPietSharedStateItem();
      }
      /**
       * <pre>
       * A Piet shared state item.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
       */
      public org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem getPietSharedStateItem() {
        return instance.getPietSharedStateItem();
      }
      /**
       * <pre>
       * A Piet shared state item.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
       */
      public Builder setPietSharedStateItem(org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem value) {
        copyOnWrite();
        instance.setPietSharedStateItem(value);
        return this;
      }
      /**
       * <pre>
       * A Piet shared state item.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
       */
      public Builder setPietSharedStateItem(
          org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem.Builder builderForValue) {
        copyOnWrite();
        instance.setPietSharedStateItem(builderForValue);
        return this;
      }
      /**
       * <pre>
       * A Piet shared state item.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
       */
      public Builder mergePietSharedStateItem(org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem value) {
        copyOnWrite();
        instance.mergePietSharedStateItem(value);
        return this;
      }
      /**
       * <pre>
       * A Piet shared state item.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.PietSharedStateItem piet_shared_state_item = 2;</code>
       */
      public Builder clearPietSharedStateItem() {
        copyOnWrite();
        instance.clearPietSharedStateItem();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamSharedState)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasPietSharedStateItem()) {
            if (!getPietSharedStateItem().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState) arg1;
          contentId_ = visitor.visitString(
              hasContentId(), contentId_,
              other.hasContentId(), other.contentId_);
          switch (other.getShareStateCase()) {
            case PIET_SHARED_STATE_ITEM: {
              shareState_ = visitor.visitOneofMessage(
                  shareStateCase_ == 2,
                  shareState_,
                  other.shareState_);
              break;
            }
            case SHARESTATE_NOT_SET: {
              visitor.visitOneofNotSet(shareStateCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.shareStateCase_ != 0) {
              shareStateCase_ = other.shareStateCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  contentId_ = s;
                  break;
                }
                case 18: {
                  org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem.Builder subBuilder = null;
                  if (shareStateCase_ == 2) {
                    subBuilder = ((org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem) shareState_).toBuilder();
                  }
                  shareState_ =
                       input.readMessage(org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.wire.PietSharedStateItemProto.PietSharedStateItem) shareState_);
                    shareState_ = subBuilder.buildPartial();
                  }
                  shareStateCase_ = 2;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamSharedState)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamSharedState();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamSharedState> PARSER;

    public static com.google.protobuf.Parser<StreamSharedState> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamStructureOrBuilder extends 
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamStructure)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                StreamStructure, StreamStructure.Builder> {

    /**
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
     */
    boolean hasOperation();
    /**
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation getOperation();

    /**
     * <pre>
     * ContentId of the content that is appended, removed, or required.
     * </pre>
     *
     * <code>optional string content_id = 2;</code>
     */
    boolean hasContentId();
    /**
     * <pre>
     * ContentId of the content that is appended, removed, or required.
     * </pre>
     *
     * <code>optional string content_id = 2;</code>
     */
    java.lang.String getContentId();
    /**
     * <pre>
     * ContentId of the content that is appended, removed, or required.
     * </pre>
     *
     * <code>optional string content_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getContentIdBytes();

    /**
     * <pre>
     * ContentId of the parent of content_id that is being appended.
     * </pre>
     *
     * <code>optional string parent_content_id = 3;</code>
     */
    boolean hasParentContentId();
    /**
     * <pre>
     * ContentId of the parent of content_id that is being appended.
     * </pre>
     *
     * <code>optional string parent_content_id = 3;</code>
     */
    java.lang.String getParentContentId();
    /**
     * <pre>
     * ContentId of the parent of content_id that is being appended.
     * </pre>
     *
     * <code>optional string parent_content_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getParentContentIdBytes();
  }
  /**
   * <pre>
   * This is the structure of the stream.  It is defined through the parent/child
   * relationship and an operation.  This message will be journaled.  Reading
   * the journal from start to end will fully define the structure of the stream.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamStructure}
   */
  public  static final class StreamStructure extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        StreamStructure, StreamStructure.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamStructure)
      StreamStructureOrBuilder {
    private StreamStructure() {
      contentId_ = "";
      parentContentId_ = "";
    }
    /**
     * <pre>
     * The defined set of DataOperations.
     * </pre>
     *
     * Protobuf enum {@code components.feed.core.proto.libraries.api.internal.StreamStructure.Operation}
     */
    public enum Operation
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <pre>
       * All content in this Stream has been removed. See data_operation.proto.
       * </pre>
       *
       * <code>CLEAR_ALL = 1;</code>
       */
      CLEAR_ALL(1),
      /**
       * <pre>
       * The item represented by content_id has been appended as a child to
       * parent_content_id. See data_operation.proto.
       * </pre>
       *
       * <code>UPDATE_OR_APPEND = 2;</code>
       */
      UPDATE_OR_APPEND(2),
      /**
       * <pre>
       * The item represented by content_id has been removed. See
       * data_operation.proto.
       * </pre>
       *
       * <code>REMOVE = 3;</code>
       */
      REMOVE(3),
      /**
       * <pre>
       * Indicates that the item represented by content_id is required by this
       * Stream and should not be deleted.
       * </pre>
       *
       * <code>REQUIRED_CONTENT = 4;</code>
       */
      REQUIRED_CONTENT(4),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <pre>
       * All content in this Stream has been removed. See data_operation.proto.
       * </pre>
       *
       * <code>CLEAR_ALL = 1;</code>
       */
      public static final int CLEAR_ALL_VALUE = 1;
      /**
       * <pre>
       * The item represented by content_id has been appended as a child to
       * parent_content_id. See data_operation.proto.
       * </pre>
       *
       * <code>UPDATE_OR_APPEND = 2;</code>
       */
      public static final int UPDATE_OR_APPEND_VALUE = 2;
      /**
       * <pre>
       * The item represented by content_id has been removed. See
       * data_operation.proto.
       * </pre>
       *
       * <code>REMOVE = 3;</code>
       */
      public static final int REMOVE_VALUE = 3;
      /**
       * <pre>
       * Indicates that the item represented by content_id is required by this
       * Stream and should not be deleted.
       * </pre>
       *
       * <code>REQUIRED_CONTENT = 4;</code>
       */
      public static final int REQUIRED_CONTENT_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Operation valueOf(int value) {
        return forNumber(value);
      }

      public static Operation forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return CLEAR_ALL;
          case 2: return UPDATE_OR_APPEND;
          case 3: return REMOVE;
          case 4: return REQUIRED_CONTENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Operation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Operation> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
              public Operation findValueByNumber(int number) {
                return Operation.forNumber(number);
              }
            };

      private final int value;

      private Operation(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:components.feed.core.proto.libraries.api.internal.StreamStructure.Operation)
    }

    private int bitField0_;
    public static final int OPERATION_FIELD_NUMBER = 1;
    private int operation_;
    /**
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
     */
    public boolean hasOperation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation getOperation() {
      org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation result = org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation.forNumber(operation_);
      return result == null ? org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation.UNKNOWN : result;
    }
    /**
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
     */
    private void setOperation(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      operation_ = value.getNumber();
    }
    /**
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
     */
    private void clearOperation() {
      bitField0_ = (bitField0_ & ~0x00000001);
      operation_ = 0;
    }

    public static final int CONTENT_ID_FIELD_NUMBER = 2;
    private java.lang.String contentId_;
    /**
     * <pre>
     * ContentId of the content that is appended, removed, or required.
     * </pre>
     *
     * <code>optional string content_id = 2;</code>
     */
    public boolean hasContentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * ContentId of the content that is appended, removed, or required.
     * </pre>
     *
     * <code>optional string content_id = 2;</code>
     */
    public java.lang.String getContentId() {
      return contentId_;
    }
    /**
     * <pre>
     * ContentId of the content that is appended, removed, or required.
     * </pre>
     *
     * <code>optional string content_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getContentIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(contentId_);
    }
    /**
     * <pre>
     * ContentId of the content that is appended, removed, or required.
     * </pre>
     *
     * <code>optional string content_id = 2;</code>
     */
    private void setContentId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      contentId_ = value;
    }
    /**
     * <pre>
     * ContentId of the content that is appended, removed, or required.
     * </pre>
     *
     * <code>optional string content_id = 2;</code>
     */
    private void clearContentId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      contentId_ = getDefaultInstance().getContentId();
    }
    /**
     * <pre>
     * ContentId of the content that is appended, removed, or required.
     * </pre>
     *
     * <code>optional string content_id = 2;</code>
     */
    private void setContentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      contentId_ = value.toStringUtf8();
    }

    public static final int PARENT_CONTENT_ID_FIELD_NUMBER = 3;
    private java.lang.String parentContentId_;
    /**
     * <pre>
     * ContentId of the parent of content_id that is being appended.
     * </pre>
     *
     * <code>optional string parent_content_id = 3;</code>
     */
    public boolean hasParentContentId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * ContentId of the parent of content_id that is being appended.
     * </pre>
     *
     * <code>optional string parent_content_id = 3;</code>
     */
    public java.lang.String getParentContentId() {
      return parentContentId_;
    }
    /**
     * <pre>
     * ContentId of the parent of content_id that is being appended.
     * </pre>
     *
     * <code>optional string parent_content_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getParentContentIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(parentContentId_);
    }
    /**
     * <pre>
     * ContentId of the parent of content_id that is being appended.
     * </pre>
     *
     * <code>optional string parent_content_id = 3;</code>
     */
    private void setParentContentId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      parentContentId_ = value;
    }
    /**
     * <pre>
     * ContentId of the parent of content_id that is being appended.
     * </pre>
     *
     * <code>optional string parent_content_id = 3;</code>
     */
    private void clearParentContentId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      parentContentId_ = getDefaultInstance().getParentContentId();
    }
    /**
     * <pre>
     * ContentId of the parent of content_id that is being appended.
     * </pre>
     *
     * <code>optional string parent_content_id = 3;</code>
     */
    private void setParentContentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      parentContentId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, operation_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getContentId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getParentContentId());
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, operation_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getContentId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getParentContentId());
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * This is the structure of the stream.  It is defined through the parent/child
     * relationship and an operation.  This message will be journaled.  Reading
     * the journal from start to end will fully define the structure of the stream.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamStructure}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamStructure)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructureOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
       */
      public boolean hasOperation() {
        return instance.hasOperation();
      }
      /**
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation getOperation() {
        return instance.getOperation();
      }
      /**
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
       */
      public Builder setOperation(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation value) {
        copyOnWrite();
        instance.setOperation(value);
        return this;
      }
      /**
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure.Operation operation = 1;</code>
       */
      public Builder clearOperation() {
        copyOnWrite();
        instance.clearOperation();
        return this;
      }

      /**
       * <pre>
       * ContentId of the content that is appended, removed, or required.
       * </pre>
       *
       * <code>optional string content_id = 2;</code>
       */
      public boolean hasContentId() {
        return instance.hasContentId();
      }
      /**
       * <pre>
       * ContentId of the content that is appended, removed, or required.
       * </pre>
       *
       * <code>optional string content_id = 2;</code>
       */
      public java.lang.String getContentId() {
        return instance.getContentId();
      }
      /**
       * <pre>
       * ContentId of the content that is appended, removed, or required.
       * </pre>
       *
       * <code>optional string content_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getContentIdBytes() {
        return instance.getContentIdBytes();
      }
      /**
       * <pre>
       * ContentId of the content that is appended, removed, or required.
       * </pre>
       *
       * <code>optional string content_id = 2;</code>
       */
      public Builder setContentId(
          java.lang.String value) {
        copyOnWrite();
        instance.setContentId(value);
        return this;
      }
      /**
       * <pre>
       * ContentId of the content that is appended, removed, or required.
       * </pre>
       *
       * <code>optional string content_id = 2;</code>
       */
      public Builder clearContentId() {
        copyOnWrite();
        instance.clearContentId();
        return this;
      }
      /**
       * <pre>
       * ContentId of the content that is appended, removed, or required.
       * </pre>
       *
       * <code>optional string content_id = 2;</code>
       */
      public Builder setContentIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContentIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * ContentId of the parent of content_id that is being appended.
       * </pre>
       *
       * <code>optional string parent_content_id = 3;</code>
       */
      public boolean hasParentContentId() {
        return instance.hasParentContentId();
      }
      /**
       * <pre>
       * ContentId of the parent of content_id that is being appended.
       * </pre>
       *
       * <code>optional string parent_content_id = 3;</code>
       */
      public java.lang.String getParentContentId() {
        return instance.getParentContentId();
      }
      /**
       * <pre>
       * ContentId of the parent of content_id that is being appended.
       * </pre>
       *
       * <code>optional string parent_content_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getParentContentIdBytes() {
        return instance.getParentContentIdBytes();
      }
      /**
       * <pre>
       * ContentId of the parent of content_id that is being appended.
       * </pre>
       *
       * <code>optional string parent_content_id = 3;</code>
       */
      public Builder setParentContentId(
          java.lang.String value) {
        copyOnWrite();
        instance.setParentContentId(value);
        return this;
      }
      /**
       * <pre>
       * ContentId of the parent of content_id that is being appended.
       * </pre>
       *
       * <code>optional string parent_content_id = 3;</code>
       */
      public Builder clearParentContentId() {
        copyOnWrite();
        instance.clearParentContentId();
        return this;
      }
      /**
       * <pre>
       * ContentId of the parent of content_id that is being appended.
       * </pre>
       *
       * <code>optional string parent_content_id = 3;</code>
       */
      public Builder setParentContentIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setParentContentIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamStructure)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure) arg1;
          operation_ = visitor.visitInt(hasOperation(), operation_,
              other.hasOperation(), other.operation_);
          contentId_ = visitor.visitString(
              hasContentId(), contentId_,
              other.hasContentId(), other.contentId_);
          parentContentId_ = visitor.visitString(
              hasParentContentId(), parentContentId_,
              other.hasParentContentId(), other.parentContentId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation value = org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Operation.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    operation_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  contentId_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  parentContentId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamStructure)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamStructure();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamStructure> PARSER;

    public static com.google.protobuf.Parser<StreamStructure> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamDataOperationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamDataOperation)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Defines the structure of the stream
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
     */
    boolean hasStreamStructure();
    /**
     * <pre>
     * Defines the structure of the stream
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure getStreamStructure();

    /**
     * <pre>
     * The payload (content) of the DataOperation.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
     */
    boolean hasStreamPayload();
    /**
     * <pre>
     * The payload (content) of the DataOperation.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload getStreamPayload();
  }
  /**
   * <pre>
   * The internal version of a DataOperation.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamDataOperation}
   */
  public  static final class StreamDataOperation extends
      com.google.protobuf.GeneratedMessageLite<
          StreamDataOperation, StreamDataOperation.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamDataOperation)
      StreamDataOperationOrBuilder {
    private StreamDataOperation() {
    }
    private int bitField0_;
    public static final int STREAM_STRUCTURE_FIELD_NUMBER = 1;
    private org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure streamStructure_;
    /**
     * <pre>
     * Defines the structure of the stream
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
     */
    public boolean hasStreamStructure() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Defines the structure of the stream
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure getStreamStructure() {
      return streamStructure_ == null ? org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.getDefaultInstance() : streamStructure_;
    }
    /**
     * <pre>
     * Defines the structure of the stream
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
     */
    private void setStreamStructure(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure value) {
      if (value == null) {
        throw new NullPointerException();
      }
      streamStructure_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Defines the structure of the stream
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
     */
    private void setStreamStructure(
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Builder builderForValue) {
      streamStructure_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Defines the structure of the stream
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
     */
    private void mergeStreamStructure(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure value) {
      if (streamStructure_ != null &&
          streamStructure_ != org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.getDefaultInstance()) {
        streamStructure_ =
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.newBuilder(streamStructure_).mergeFrom(value).buildPartial();
      } else {
        streamStructure_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Defines the structure of the stream
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
     */
    private void clearStreamStructure() {  streamStructure_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int STREAM_PAYLOAD_FIELD_NUMBER = 2;
    private org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload streamPayload_;
    /**
     * <pre>
     * The payload (content) of the DataOperation.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
     */
    public boolean hasStreamPayload() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The payload (content) of the DataOperation.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload getStreamPayload() {
      return streamPayload_ == null ? org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.getDefaultInstance() : streamPayload_;
    }
    /**
     * <pre>
     * The payload (content) of the DataOperation.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
     */
    private void setStreamPayload(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload value) {
      if (value == null) {
        throw new NullPointerException();
      }
      streamPayload_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * The payload (content) of the DataOperation.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
     */
    private void setStreamPayload(
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.Builder builderForValue) {
      streamPayload_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The payload (content) of the DataOperation.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
     */
    private void mergeStreamPayload(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload value) {
      if (streamPayload_ != null &&
          streamPayload_ != org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.getDefaultInstance()) {
        streamPayload_ =
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.newBuilder(streamPayload_).mergeFrom(value).buildPartial();
      } else {
        streamPayload_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The payload (content) of the DataOperation.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
     */
    private void clearStreamPayload() {  streamPayload_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getStreamStructure());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getStreamPayload());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStreamStructure());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStreamPayload());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * The internal version of a DataOperation.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamDataOperation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamDataOperation)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperationOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Defines the structure of the stream
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
       */
      public boolean hasStreamStructure() {
        return instance.hasStreamStructure();
      }
      /**
       * <pre>
       * Defines the structure of the stream
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure getStreamStructure() {
        return instance.getStreamStructure();
      }
      /**
       * <pre>
       * Defines the structure of the stream
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
       */
      public Builder setStreamStructure(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure value) {
        copyOnWrite();
        instance.setStreamStructure(value);
        return this;
        }
      /**
       * <pre>
       * Defines the structure of the stream
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
       */
      public Builder setStreamStructure(
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Builder builderForValue) {
        copyOnWrite();
        instance.setStreamStructure(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Defines the structure of the stream
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
       */
      public Builder mergeStreamStructure(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure value) {
        copyOnWrite();
        instance.mergeStreamStructure(value);
        return this;
      }
      /**
       * <pre>
       * Defines the structure of the stream
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamStructure stream_structure = 1;</code>
       */
      public Builder clearStreamStructure() {  copyOnWrite();
        instance.clearStreamStructure();
        return this;
      }

      /**
       * <pre>
       * The payload (content) of the DataOperation.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
       */
      public boolean hasStreamPayload() {
        return instance.hasStreamPayload();
      }
      /**
       * <pre>
       * The payload (content) of the DataOperation.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload getStreamPayload() {
        return instance.getStreamPayload();
      }
      /**
       * <pre>
       * The payload (content) of the DataOperation.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
       */
      public Builder setStreamPayload(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload value) {
        copyOnWrite();
        instance.setStreamPayload(value);
        return this;
        }
      /**
       * <pre>
       * The payload (content) of the DataOperation.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
       */
      public Builder setStreamPayload(
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.Builder builderForValue) {
        copyOnWrite();
        instance.setStreamPayload(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The payload (content) of the DataOperation.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
       */
      public Builder mergeStreamPayload(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload value) {
        copyOnWrite();
        instance.mergeStreamPayload(value);
        return this;
      }
      /**
       * <pre>
       * The payload (content) of the DataOperation.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamPayload stream_payload = 2;</code>
       */
      public Builder clearStreamPayload() {  copyOnWrite();
        instance.clearStreamPayload();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamDataOperation)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasStreamStructure()) {
            if (!getStreamStructure().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasStreamPayload()) {
            if (!getStreamPayload().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation) arg1;
          streamStructure_ = visitor.visitMessage(streamStructure_, other.streamStructure_);
          streamPayload_ = visitor.visitMessage(streamPayload_, other.streamPayload_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = streamStructure_.toBuilder();
                  }
                  streamStructure_ = input.readMessage(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamStructure.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(streamStructure_);
                    streamStructure_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = streamPayload_.toBuilder();
                  }
                  streamPayload_ = input.readMessage(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(streamPayload_);
                    streamPayload_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamDataOperation)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamDataOperation();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamDataOperation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamDataOperation> PARSER;

    public static com.google.protobuf.Parser<StreamDataOperation> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamPayload)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * This contains a feature within the tree.  These are stored based upon
     * the server defined StreamContentId (created by the ProtocolAdapter).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
     */
    boolean hasStreamFeature();
    /**
     * <pre>
     * This contains a feature within the tree.  These are stored based upon
     * the server defined StreamContentId (created by the ProtocolAdapter).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature getStreamFeature();

    /**
     * <pre>
     * This contains a shared state, such as the Piet shared state.  The
     * Feed store prepends a prefix (see
     * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
     * through a prefix query.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
     */
    boolean hasStreamSharedState();
    /**
     * <pre>
     * This contains a shared state, such as the Piet shared state.  The
     * Feed store prepends a prefix (see
     * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
     * through a prefix query.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState getStreamSharedState();

    /**
     * <pre>
     * Continuation Token for a parent.  These are stored in the same way other
     * the stream_feature are stored.  They are treated the same as other
     * feature content when persisted.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
     */
    boolean hasStreamToken();
    /**
     * <pre>
     * Continuation Token for a parent.  These are stored in the same way other
     * the stream_feature are stored.  They are treated the same as other
     * feature content when persisted.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken getStreamToken();

    /**
     * <pre>
     * This is stored as a single content record.  It contains information about
     * each known session including $HEAD.  This is a list of the individual
     * sessions which are currently active.  This has a StreamContentId defined
     * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
     */
    boolean hasStreamSessions();
    /**
     * <pre>
     * This is stored as a single content record.  It contains information about
     * each known session including $HEAD.  This is a list of the individual
     * sessions which are currently active.  This has a StreamContentId defined
     * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions getStreamSessions();

    /**
     * <pre>
     * The semantic data associated with a Feature.  These are stored as content
     * with a prefix added by the Store (see
     * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
     * </pre>
     *
     * <code>optional bytes semantic_data = 7;</code>
     */
    boolean hasSemanticData();
    /**
     * <pre>
     * The semantic data associated with a Feature.  These are stored as content
     * with a prefix added by the Store (see
     * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
     * </pre>
     *
     * <code>optional bytes semantic_data = 7;</code>
     */
    com.google.protobuf.ByteString getSemanticData();

    /**
     * <pre>
     * The consistency token used to ensure that we are recording actions to
     * the same server store.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
     */
    boolean hasConsistencyToken();
    /**
     * <pre>
     * The consistency token used to ensure that we are recording actions to
     * the same server store.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
     */
    org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken getConsistencyToken();

    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.PayloadCase getPayloadCase();
  }
  /**
   * <pre>
   * This defines the content payload associated with a StreamDataOperation.
   * Payload is what is stored in the Content portion of the persisted storage
   * layer.  Each of the items defined here are persisted using the
   * StreamContentId (String) as the key to the payload.  By default, the
   * StreamContentId is formed by concatenation of the ContentId Table, followed
   * by ContentDomain, then Id.  In addition, for content requiring prefix based
   * queries, the Store will prefix the StreamContentId.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamPayload}
   */
  public  static final class StreamPayload extends
      com.google.protobuf.GeneratedMessageLite<
          StreamPayload, StreamPayload.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamPayload)
      StreamPayloadOrBuilder {
    private StreamPayload() {
    }
    private int bitField0_;
    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite {
      STREAM_FEATURE(3),
      STREAM_SHARED_STATE(4),
      STREAM_TOKEN(5),
      STREAM_SESSIONS(6),
      SEMANTIC_DATA(7),
      CONSISTENCY_TOKEN(9),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 3: return STREAM_FEATURE;
          case 4: return STREAM_SHARED_STATE;
          case 5: return STREAM_TOKEN;
          case 6: return STREAM_SESSIONS;
          case 7: return SEMANTIC_DATA;
          case 9: return CONSISTENCY_TOKEN;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    private void clearPayload() {
      payloadCase_ = 0;
      payload_ = null;
    }

    public static final int STREAM_FEATURE_FIELD_NUMBER = 3;
    /**
     * <pre>
     * This contains a feature within the tree.  These are stored based upon
     * the server defined StreamContentId (created by the ProtocolAdapter).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
     */
    public boolean hasStreamFeature() {
      return payloadCase_ == 3;
    }
    /**
     * <pre>
     * This contains a feature within the tree.  These are stored based upon
     * the server defined StreamContentId (created by the ProtocolAdapter).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature getStreamFeature() {
      if (payloadCase_ == 3) {
         return (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature) payload_;
      }
      return org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.getDefaultInstance();
    }
    /**
     * <pre>
     * This contains a feature within the tree.  These are stored based upon
     * the server defined StreamContentId (created by the ProtocolAdapter).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
     */
    private void setStreamFeature(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      payloadCase_ = 3;
    }
    /**
     * <pre>
     * This contains a feature within the tree.  These are stored based upon
     * the server defined StreamContentId (created by the ProtocolAdapter).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
     */
    private void setStreamFeature(
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.Builder builderForValue) {
      payload_ = builderForValue.build();
      payloadCase_ = 3;
    }
    /**
     * <pre>
     * This contains a feature within the tree.  These are stored based upon
     * the server defined StreamContentId (created by the ProtocolAdapter).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
     */
    private void mergeStreamFeature(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature value) {
      if (payloadCase_ == 3 &&
          payload_ != org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.getDefaultInstance()) {
        payload_ = org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.newBuilder((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature) payload_)
            .mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      payloadCase_ = 3;
    }
    /**
     * <pre>
     * This contains a feature within the tree.  These are stored based upon
     * the server defined StreamContentId (created by the ProtocolAdapter).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
     */
    private void clearStreamFeature() {
      if (payloadCase_ == 3) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public static final int STREAM_SHARED_STATE_FIELD_NUMBER = 4;
    /**
     * <pre>
     * This contains a shared state, such as the Piet shared state.  The
     * Feed store prepends a prefix (see
     * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
     * through a prefix query.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
     */
    public boolean hasStreamSharedState() {
      return payloadCase_ == 4;
    }
    /**
     * <pre>
     * This contains a shared state, such as the Piet shared state.  The
     * Feed store prepends a prefix (see
     * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
     * through a prefix query.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState getStreamSharedState() {
      if (payloadCase_ == 4) {
         return (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState) payload_;
      }
      return org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.getDefaultInstance();
    }
    /**
     * <pre>
     * This contains a shared state, such as the Piet shared state.  The
     * Feed store prepends a prefix (see
     * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
     * through a prefix query.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
     */
    private void setStreamSharedState(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      payloadCase_ = 4;
    }
    /**
     * <pre>
     * This contains a shared state, such as the Piet shared state.  The
     * Feed store prepends a prefix (see
     * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
     * through a prefix query.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
     */
    private void setStreamSharedState(
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.Builder builderForValue) {
      payload_ = builderForValue.build();
      payloadCase_ = 4;
    }
    /**
     * <pre>
     * This contains a shared state, such as the Piet shared state.  The
     * Feed store prepends a prefix (see
     * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
     * through a prefix query.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
     */
    private void mergeStreamSharedState(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState value) {
      if (payloadCase_ == 4 &&
          payload_ != org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.getDefaultInstance()) {
        payload_ = org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.newBuilder((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState) payload_)
            .mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      payloadCase_ = 4;
    }
    /**
     * <pre>
     * This contains a shared state, such as the Piet shared state.  The
     * Feed store prepends a prefix (see
     * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
     * through a prefix query.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
     */
    private void clearStreamSharedState() {
      if (payloadCase_ == 4) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public static final int STREAM_TOKEN_FIELD_NUMBER = 5;
    /**
     * <pre>
     * Continuation Token for a parent.  These are stored in the same way other
     * the stream_feature are stored.  They are treated the same as other
     * feature content when persisted.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
     */
    public boolean hasStreamToken() {
      return payloadCase_ == 5;
    }
    /**
     * <pre>
     * Continuation Token for a parent.  These are stored in the same way other
     * the stream_feature are stored.  They are treated the same as other
     * feature content when persisted.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken getStreamToken() {
      if (payloadCase_ == 5) {
         return (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken) payload_;
      }
      return org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken.getDefaultInstance();
    }
    /**
     * <pre>
     * Continuation Token for a parent.  These are stored in the same way other
     * the stream_feature are stored.  They are treated the same as other
     * feature content when persisted.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
     */
    private void setStreamToken(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      payloadCase_ = 5;
    }
    /**
     * <pre>
     * Continuation Token for a parent.  These are stored in the same way other
     * the stream_feature are stored.  They are treated the same as other
     * feature content when persisted.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
     */
    private void setStreamToken(
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken.Builder builderForValue) {
      payload_ = builderForValue.build();
      payloadCase_ = 5;
    }
    /**
     * <pre>
     * Continuation Token for a parent.  These are stored in the same way other
     * the stream_feature are stored.  They are treated the same as other
     * feature content when persisted.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
     */
    private void mergeStreamToken(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken value) {
      if (payloadCase_ == 5 &&
          payload_ != org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken.getDefaultInstance()) {
        payload_ = org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken.newBuilder((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken) payload_)
            .mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      payloadCase_ = 5;
    }
    /**
     * <pre>
     * Continuation Token for a parent.  These are stored in the same way other
     * the stream_feature are stored.  They are treated the same as other
     * feature content when persisted.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
     */
    private void clearStreamToken() {
      if (payloadCase_ == 5) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public static final int STREAM_SESSIONS_FIELD_NUMBER = 6;
    /**
     * <pre>
     * This is stored as a single content record.  It contains information about
     * each known session including $HEAD.  This is a list of the individual
     * sessions which are currently active.  This has a StreamContentId defined
     * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
     */
    public boolean hasStreamSessions() {
      return payloadCase_ == 6;
    }
    /**
     * <pre>
     * This is stored as a single content record.  It contains information about
     * each known session including $HEAD.  This is a list of the individual
     * sessions which are currently active.  This has a StreamContentId defined
     * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions getStreamSessions() {
      if (payloadCase_ == 6) {
         return (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions) payload_;
      }
      return org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions.getDefaultInstance();
    }
    /**
     * <pre>
     * This is stored as a single content record.  It contains information about
     * each known session including $HEAD.  This is a list of the individual
     * sessions which are currently active.  This has a StreamContentId defined
     * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
     */
    private void setStreamSessions(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      payloadCase_ = 6;
    }
    /**
     * <pre>
     * This is stored as a single content record.  It contains information about
     * each known session including $HEAD.  This is a list of the individual
     * sessions which are currently active.  This has a StreamContentId defined
     * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
     */
    private void setStreamSessions(
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions.Builder builderForValue) {
      payload_ = builderForValue.build();
      payloadCase_ = 6;
    }
    /**
     * <pre>
     * This is stored as a single content record.  It contains information about
     * each known session including $HEAD.  This is a list of the individual
     * sessions which are currently active.  This has a StreamContentId defined
     * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
     */
    private void mergeStreamSessions(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions value) {
      if (payloadCase_ == 6 &&
          payload_ != org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions.getDefaultInstance()) {
        payload_ = org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions.newBuilder((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions) payload_)
            .mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      payloadCase_ = 6;
    }
    /**
     * <pre>
     * This is stored as a single content record.  It contains information about
     * each known session including $HEAD.  This is a list of the individual
     * sessions which are currently active.  This has a StreamContentId defined
     * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
     */
    private void clearStreamSessions() {
      if (payloadCase_ == 6) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public static final int SEMANTIC_DATA_FIELD_NUMBER = 7;
    /**
     * <pre>
     * The semantic data associated with a Feature.  These are stored as content
     * with a prefix added by the Store (see
     * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
     * </pre>
     *
     * <code>optional bytes semantic_data = 7;</code>
     */
    public boolean hasSemanticData() {
      return payloadCase_ == 7;
    }
    /**
     * <pre>
     * The semantic data associated with a Feature.  These are stored as content
     * with a prefix added by the Store (see
     * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
     * </pre>
     *
     * <code>optional bytes semantic_data = 7;</code>
     */
    public com.google.protobuf.ByteString getSemanticData() {
      if (payloadCase_ == 7) {
        return (com.google.protobuf.ByteString) payload_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <pre>
     * The semantic data associated with a Feature.  These are stored as content
     * with a prefix added by the Store (see
     * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
     * </pre>
     *
     * <code>optional bytes semantic_data = 7;</code>
     */
    private void setSemanticData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  payloadCase_ = 7;
      payload_ = value;
    }
    /**
     * <pre>
     * The semantic data associated with a Feature.  These are stored as content
     * with a prefix added by the Store (see
     * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
     * </pre>
     *
     * <code>optional bytes semantic_data = 7;</code>
     */
    private void clearSemanticData() {
      if (payloadCase_ == 7) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public static final int CONSISTENCY_TOKEN_FIELD_NUMBER = 9;
    /**
     * <pre>
     * The consistency token used to ensure that we are recording actions to
     * the same server store.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
     */
    public boolean hasConsistencyToken() {
      return payloadCase_ == 9;
    }
    /**
     * <pre>
     * The consistency token used to ensure that we are recording actions to
     * the same server store.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
     */
    public org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken getConsistencyToken() {
      if (payloadCase_ == 9) {
         return (org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken) payload_;
      }
      return org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.getDefaultInstance();
    }
    /**
     * <pre>
     * The consistency token used to ensure that we are recording actions to
     * the same server store.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
     */
    private void setConsistencyToken(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      payloadCase_ = 9;
    }
    /**
     * <pre>
     * The consistency token used to ensure that we are recording actions to
     * the same server store.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
     */
    private void setConsistencyToken(
        org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.Builder builderForValue) {
      payload_ = builderForValue.build();
      payloadCase_ = 9;
    }
    /**
     * <pre>
     * The consistency token used to ensure that we are recording actions to
     * the same server store.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
     */
    private void mergeConsistencyToken(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken value) {
      if (payloadCase_ == 9 &&
          payload_ != org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.getDefaultInstance()) {
        payload_ = org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.newBuilder((org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken) payload_)
            .mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      payloadCase_ = 9;
    }
    /**
     * <pre>
     * The consistency token used to ensure that we are recording actions to
     * the same server store.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
     */
    private void clearConsistencyToken() {
      if (payloadCase_ == 9) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (payloadCase_ == 3) {
        output.writeMessage(3, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature) payload_);
      }
      if (payloadCase_ == 4) {
        output.writeMessage(4, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState) payload_);
      }
      if (payloadCase_ == 5) {
        output.writeMessage(5, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken) payload_);
      }
      if (payloadCase_ == 6) {
        output.writeMessage(6, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions) payload_);
      }
      if (payloadCase_ == 7) {
        output.writeBytes(
            7, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) payload_));
      }
      if (payloadCase_ == 9) {
        output.writeMessage(9, (org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken) payload_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (payloadCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature) payload_);
      }
      if (payloadCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState) payload_);
      }
      if (payloadCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken) payload_);
      }
      if (payloadCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions) payload_);
      }
      if (payloadCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              7, (com.google.protobuf.ByteString)((com.google.protobuf.ByteString) payload_));
      }
      if (payloadCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken) payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * This defines the content payload associated with a StreamDataOperation.
     * Payload is what is stored in the Content portion of the persisted storage
     * layer.  Each of the items defined here are persisted using the
     * StreamContentId (String) as the key to the payload.  By default, the
     * StreamContentId is formed by concatenation of the ContentId Table, followed
     * by ContentDomain, then Id.  In addition, for content requiring prefix based
     * queries, the Store will prefix the StreamContentId.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamPayload)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayloadOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public PayloadCase
          getPayloadCase() {
        return instance.getPayloadCase();
      }

      public Builder clearPayload() {
        copyOnWrite();
        instance.clearPayload();
        return this;
      }


      /**
       * <pre>
       * This contains a feature within the tree.  These are stored based upon
       * the server defined StreamContentId (created by the ProtocolAdapter).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
       */
      public boolean hasStreamFeature() {
        return instance.hasStreamFeature();
      }
      /**
       * <pre>
       * This contains a feature within the tree.  These are stored based upon
       * the server defined StreamContentId (created by the ProtocolAdapter).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature getStreamFeature() {
        return instance.getStreamFeature();
      }
      /**
       * <pre>
       * This contains a feature within the tree.  These are stored based upon
       * the server defined StreamContentId (created by the ProtocolAdapter).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
       */
      public Builder setStreamFeature(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature value) {
        copyOnWrite();
        instance.setStreamFeature(value);
        return this;
      }
      /**
       * <pre>
       * This contains a feature within the tree.  These are stored based upon
       * the server defined StreamContentId (created by the ProtocolAdapter).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
       */
      public Builder setStreamFeature(
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.Builder builderForValue) {
        copyOnWrite();
        instance.setStreamFeature(builderForValue);
        return this;
      }
      /**
       * <pre>
       * This contains a feature within the tree.  These are stored based upon
       * the server defined StreamContentId (created by the ProtocolAdapter).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
       */
      public Builder mergeStreamFeature(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature value) {
        copyOnWrite();
        instance.mergeStreamFeature(value);
        return this;
      }
      /**
       * <pre>
       * This contains a feature within the tree.  These are stored based upon
       * the server defined StreamContentId (created by the ProtocolAdapter).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamFeature stream_feature = 3;</code>
       */
      public Builder clearStreamFeature() {
        copyOnWrite();
        instance.clearStreamFeature();
        return this;
      }

      /**
       * <pre>
       * This contains a shared state, such as the Piet shared state.  The
       * Feed store prepends a prefix (see
       * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
       * through a prefix query.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
       */
      public boolean hasStreamSharedState() {
        return instance.hasStreamSharedState();
      }
      /**
       * <pre>
       * This contains a shared state, such as the Piet shared state.  The
       * Feed store prepends a prefix (see
       * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
       * through a prefix query.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState getStreamSharedState() {
        return instance.getStreamSharedState();
      }
      /**
       * <pre>
       * This contains a shared state, such as the Piet shared state.  The
       * Feed store prepends a prefix (see
       * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
       * through a prefix query.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
       */
      public Builder setStreamSharedState(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState value) {
        copyOnWrite();
        instance.setStreamSharedState(value);
        return this;
      }
      /**
       * <pre>
       * This contains a shared state, such as the Piet shared state.  The
       * Feed store prepends a prefix (see
       * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
       * through a prefix query.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
       */
      public Builder setStreamSharedState(
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.Builder builderForValue) {
        copyOnWrite();
        instance.setStreamSharedState(builderForValue);
        return this;
      }
      /**
       * <pre>
       * This contains a shared state, such as the Piet shared state.  The
       * Feed store prepends a prefix (see
       * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
       * through a prefix query.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
       */
      public Builder mergeStreamSharedState(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState value) {
        copyOnWrite();
        instance.mergeStreamSharedState(value);
        return this;
      }
      /**
       * <pre>
       * This contains a shared state, such as the Piet shared state.  The
       * Feed store prepends a prefix (see
       * FeedStoreConstants.SHARED_STATE_PREFIX) so these can be retrieved
       * through a prefix query.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSharedState stream_shared_state = 4;</code>
       */
      public Builder clearStreamSharedState() {
        copyOnWrite();
        instance.clearStreamSharedState();
        return this;
      }

      /**
       * <pre>
       * Continuation Token for a parent.  These are stored in the same way other
       * the stream_feature are stored.  They are treated the same as other
       * feature content when persisted.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
       */
      public boolean hasStreamToken() {
        return instance.hasStreamToken();
      }
      /**
       * <pre>
       * Continuation Token for a parent.  These are stored in the same way other
       * the stream_feature are stored.  They are treated the same as other
       * feature content when persisted.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken getStreamToken() {
        return instance.getStreamToken();
      }
      /**
       * <pre>
       * Continuation Token for a parent.  These are stored in the same way other
       * the stream_feature are stored.  They are treated the same as other
       * feature content when persisted.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
       */
      public Builder setStreamToken(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken value) {
        copyOnWrite();
        instance.setStreamToken(value);
        return this;
      }
      /**
       * <pre>
       * Continuation Token for a parent.  These are stored in the same way other
       * the stream_feature are stored.  They are treated the same as other
       * feature content when persisted.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
       */
      public Builder setStreamToken(
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken.Builder builderForValue) {
        copyOnWrite();
        instance.setStreamToken(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Continuation Token for a parent.  These are stored in the same way other
       * the stream_feature are stored.  They are treated the same as other
       * feature content when persisted.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
       */
      public Builder mergeStreamToken(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken value) {
        copyOnWrite();
        instance.mergeStreamToken(value);
        return this;
      }
      /**
       * <pre>
       * Continuation Token for a parent.  These are stored in the same way other
       * the stream_feature are stored.  They are treated the same as other
       * feature content when persisted.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamToken stream_token = 5;</code>
       */
      public Builder clearStreamToken() {
        copyOnWrite();
        instance.clearStreamToken();
        return this;
      }

      /**
       * <pre>
       * This is stored as a single content record.  It contains information about
       * each known session including $HEAD.  This is a list of the individual
       * sessions which are currently active.  This has a StreamContentId defined
       * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
       */
      public boolean hasStreamSessions() {
        return instance.hasStreamSessions();
      }
      /**
       * <pre>
       * This is stored as a single content record.  It contains information about
       * each known session including $HEAD.  This is a list of the individual
       * sessions which are currently active.  This has a StreamContentId defined
       * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions getStreamSessions() {
        return instance.getStreamSessions();
      }
      /**
       * <pre>
       * This is stored as a single content record.  It contains information about
       * each known session including $HEAD.  This is a list of the individual
       * sessions which are currently active.  This has a StreamContentId defined
       * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
       */
      public Builder setStreamSessions(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions value) {
        copyOnWrite();
        instance.setStreamSessions(value);
        return this;
      }
      /**
       * <pre>
       * This is stored as a single content record.  It contains information about
       * each known session including $HEAD.  This is a list of the individual
       * sessions which are currently active.  This has a StreamContentId defined
       * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
       */
      public Builder setStreamSessions(
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions.Builder builderForValue) {
        copyOnWrite();
        instance.setStreamSessions(builderForValue);
        return this;
      }
      /**
       * <pre>
       * This is stored as a single content record.  It contains information about
       * each known session including $HEAD.  This is a list of the individual
       * sessions which are currently active.  This has a StreamContentId defined
       * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
       */
      public Builder mergeStreamSessions(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions value) {
        copyOnWrite();
        instance.mergeStreamSessions(value);
        return this;
      }
      /**
       * <pre>
       * This is stored as a single content record.  It contains information about
       * each known session including $HEAD.  This is a list of the individual
       * sessions which are currently active.  This has a StreamContentId defined
       * by the SessionManager (see FeedSessionManager.STREAM_SESSION_CONTENT_ID).
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.StreamSessions stream_sessions = 6;</code>
       */
      public Builder clearStreamSessions() {
        copyOnWrite();
        instance.clearStreamSessions();
        return this;
      }

      /**
       * <pre>
       * The semantic data associated with a Feature.  These are stored as content
       * with a prefix added by the Store (see
       * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
       * </pre>
       *
       * <code>optional bytes semantic_data = 7;</code>
       */
      public boolean hasSemanticData() {
        return instance.hasSemanticData();
      }
      /**
       * <pre>
       * The semantic data associated with a Feature.  These are stored as content
       * with a prefix added by the Store (see
       * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
       * </pre>
       *
       * <code>optional bytes semantic_data = 7;</code>
       */
      public com.google.protobuf.ByteString getSemanticData() {
        return instance.getSemanticData();
      }
      /**
       * <pre>
       * The semantic data associated with a Feature.  These are stored as content
       * with a prefix added by the Store (see
       * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
       * </pre>
       *
       * <code>optional bytes semantic_data = 7;</code>
       */
      public Builder setSemanticData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSemanticData(value);
        return this;
      }
      /**
       * <pre>
       * The semantic data associated with a Feature.  These are stored as content
       * with a prefix added by the Store (see
       * FeedStoreConstants.SEMANTIC_PROPERTIES_PREFIX) allowing prefix queries.
       * </pre>
       *
       * <code>optional bytes semantic_data = 7;</code>
       */
      public Builder clearSemanticData() {
        copyOnWrite();
        instance.clearSemanticData();
        return this;
      }

      /**
       * <pre>
       * The consistency token used to ensure that we are recording actions to
       * the same server store.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
       */
      public boolean hasConsistencyToken() {
        return instance.hasConsistencyToken();
      }
      /**
       * <pre>
       * The consistency token used to ensure that we are recording actions to
       * the same server store.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
       */
      public org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken getConsistencyToken() {
        return instance.getConsistencyToken();
      }
      /**
       * <pre>
       * The consistency token used to ensure that we are recording actions to
       * the same server store.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
       */
      public Builder setConsistencyToken(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken value) {
        copyOnWrite();
        instance.setConsistencyToken(value);
        return this;
      }
      /**
       * <pre>
       * The consistency token used to ensure that we are recording actions to
       * the same server store.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
       */
      public Builder setConsistencyToken(
          org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.Builder builderForValue) {
        copyOnWrite();
        instance.setConsistencyToken(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The consistency token used to ensure that we are recording actions to
       * the same server store.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
       */
      public Builder mergeConsistencyToken(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken value) {
        copyOnWrite();
        instance.mergeConsistencyToken(value);
        return this;
      }
      /**
       * <pre>
       * The consistency token used to ensure that we are recording actions to
       * the same server store.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 9;</code>
       */
      public Builder clearConsistencyToken() {
        copyOnWrite();
        instance.clearConsistencyToken();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamPayload)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasStreamFeature()) {
            if (!getStreamFeature().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasStreamSharedState()) {
            if (!getStreamSharedState().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload) arg1;
          switch (other.getPayloadCase()) {
            case STREAM_FEATURE: {
              payload_ = visitor.visitOneofMessage(
                  payloadCase_ == 3,
                  payload_,
                  other.payload_);
              break;
            }
            case STREAM_SHARED_STATE: {
              payload_ = visitor.visitOneofMessage(
                  payloadCase_ == 4,
                  payload_,
                  other.payload_);
              break;
            }
            case STREAM_TOKEN: {
              payload_ = visitor.visitOneofMessage(
                  payloadCase_ == 5,
                  payload_,
                  other.payload_);
              break;
            }
            case STREAM_SESSIONS: {
              payload_ = visitor.visitOneofMessage(
                  payloadCase_ == 6,
                  payload_,
                  other.payload_);
              break;
            }
            case SEMANTIC_DATA: {
              payload_ = visitor.visitOneofByteString(
                  payloadCase_ == 7, payload_, other.payload_);
              break;
            }
            case CONSISTENCY_TOKEN: {
              payload_ = visitor.visitOneofMessage(
                  payloadCase_ == 9,
                  payload_,
                  other.payload_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              visitor.visitOneofNotSet(payloadCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.payloadCase_ != 0) {
              payloadCase_ = other.payloadCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 26: {
                  org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.Builder subBuilder = null;
                  if (payloadCase_ == 3) {
                    subBuilder = ((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature) payload_).toBuilder();
                  }
                  payload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamFeature) payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  payloadCase_ = 3;
                  break;
                }
                case 34: {
                  org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.Builder subBuilder = null;
                  if (payloadCase_ == 4) {
                    subBuilder = ((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState) payload_).toBuilder();
                  }
                  payload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSharedState) payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  payloadCase_ = 4;
                  break;
                }
                case 42: {
                  org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken.Builder subBuilder = null;
                  if (payloadCase_ == 5) {
                    subBuilder = ((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken) payload_).toBuilder();
                  }
                  payload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamToken) payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  payloadCase_ = 5;
                  break;
                }
                case 50: {
                  org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions.Builder subBuilder = null;
                  if (payloadCase_ == 6) {
                    subBuilder = ((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions) payload_).toBuilder();
                  }
                  payload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions) payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  payloadCase_ = 6;
                  break;
                }
                case 58: {
                  payloadCase_ = 7;
                  payload_ = input.readBytes();
                  break;
                }
                case 74: {
                  org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.Builder subBuilder = null;
                  if (payloadCase_ == 9) {
                    subBuilder = ((org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken) payload_).toBuilder();
                  }
                  payload_ =
                       input.readMessage(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken) payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  payloadCase_ = 9;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamPayload)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamPayload();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamPayload> PARSER;

    public static com.google.protobuf.Parser<StreamPayload> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamLegacyPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamLegacyPayload)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * String identifying the type of the legacy content.  This values is
     * opaque to the infrastructure.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * String identifying the type of the legacy content.  This values is
     * opaque to the infrastructure.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * String identifying the type of the legacy content.  This values is
     * opaque to the infrastructure.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * The data making up the Legacy payload. This value is opaque to the
     * infrastructure.
     * </pre>
     *
     * <code>optional bytes data = 2;</code>
     */
    boolean hasData();
    /**
     * <pre>
     * The data making up the Legacy payload. This value is opaque to the
     * infrastructure.
     * </pre>
     *
     * <code>optional bytes data = 2;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Allow the payload to contain Legacy Stream content.
   * TODO: Should this be removed, this was designed for legacy content
   * which is currently not supported anywhere.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamLegacyPayload}
   */
  public  static final class StreamLegacyPayload extends
      com.google.protobuf.GeneratedMessageLite<
          StreamLegacyPayload, StreamLegacyPayload.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamLegacyPayload)
      StreamLegacyPayloadOrBuilder {
    private StreamLegacyPayload() {
      type_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.lang.String type_;
    /**
     * <pre>
     * String identifying the type of the legacy content.  This values is
     * opaque to the infrastructure.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * String identifying the type of the legacy content.  This values is
     * opaque to the infrastructure.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public java.lang.String getType() {
      return type_;
    }
    /**
     * <pre>
     * String identifying the type of the legacy content.  This values is
     * opaque to the infrastructure.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(type_);
    }
    /**
     * <pre>
     * String identifying the type of the legacy content.  This values is
     * opaque to the infrastructure.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    private void setType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      type_ = value;
    }
    /**
     * <pre>
     * String identifying the type of the legacy content.  This values is
     * opaque to the infrastructure.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = getDefaultInstance().getType();
    }
    /**
     * <pre>
     * String identifying the type of the legacy content.  This values is
     * opaque to the infrastructure.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     */
    private void setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      type_ = value.toStringUtf8();
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * The data making up the Legacy payload. This value is opaque to the
     * infrastructure.
     * </pre>
     *
     * <code>optional bytes data = 2;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The data making up the Legacy payload. This value is opaque to the
     * infrastructure.
     * </pre>
     *
     * <code>optional bytes data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * The data making up the Legacy payload. This value is opaque to the
     * infrastructure.
     * </pre>
     *
     * <code>optional bytes data = 2;</code>
     */
    private void setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      data_ = value;
    }
    /**
     * <pre>
     * The data making up the Legacy payload. This value is opaque to the
     * infrastructure.
     * </pre>
     *
     * <code>optional bytes data = 2;</code>
     */
    private void clearData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      data_ = getDefaultInstance().getData();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getType());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, data_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getType());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Allow the payload to contain Legacy Stream content.
     * TODO: Should this be removed, this was designed for legacy content
     * which is currently not supported anywhere.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamLegacyPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamLegacyPayload)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayloadOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * String identifying the type of the legacy content.  This values is
       * opaque to the infrastructure.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <pre>
       * String identifying the type of the legacy content.  This values is
       * opaque to the infrastructure.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public java.lang.String getType() {
        return instance.getType();
      }
      /**
       * <pre>
       * String identifying the type of the legacy content.  This values is
       * opaque to the infrastructure.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        return instance.getTypeBytes();
      }
      /**
       * <pre>
       * String identifying the type of the legacy content.  This values is
       * opaque to the infrastructure.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder setType(
          java.lang.String value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       * String identifying the type of the legacy content.  This values is
       * opaque to the infrastructure.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }
      /**
       * <pre>
       * String identifying the type of the legacy content.  This values is
       * opaque to the infrastructure.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTypeBytes(value);
        return this;
      }

      /**
       * <pre>
       * The data making up the Legacy payload. This value is opaque to the
       * infrastructure.
       * </pre>
       *
       * <code>optional bytes data = 2;</code>
       */
      public boolean hasData() {
        return instance.hasData();
      }
      /**
       * <pre>
       * The data making up the Legacy payload. This value is opaque to the
       * infrastructure.
       * </pre>
       *
       * <code>optional bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <pre>
       * The data making up the Legacy payload. This value is opaque to the
       * infrastructure.
       * </pre>
       *
       * <code>optional bytes data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       * The data making up the Legacy payload. This value is opaque to the
       * infrastructure.
       * </pre>
       *
       * <code>optional bytes data = 2;</code>
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamLegacyPayload)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload) arg1;
          type_ = visitor.visitString(
              hasType(), type_,
              other.hasType(), other.type_);
          data_ = visitor.visitByteString(
              hasData(), data_,
              other.hasData(), other.data_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  type_ = s;
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  data_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamLegacyPayload)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamLegacyPayload();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLegacyPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamLegacyPayload> PARSER;

    public static com.google.protobuf.Parser<StreamLegacyPayload> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamSessionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamSessions)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession> 
        getStreamSessionList();
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession getStreamSession(int index);
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    int getStreamSessionCount();
  }
  /**
   * <pre>
   * List of all the sessions.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamSessions}
   */
  public  static final class StreamSessions extends
      com.google.protobuf.GeneratedMessageLite<
          StreamSessions, StreamSessions.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamSessions)
      StreamSessionsOrBuilder {
    private StreamSessions() {
      streamSession_ = emptyProtobufList();
    }
    public static final int STREAM_SESSION_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession> streamSession_;
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    public java.util.List<org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession> getStreamSessionList() {
      return streamSession_;
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessionOrBuilder> 
        getStreamSessionOrBuilderList() {
      return streamSession_;
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    public int getStreamSessionCount() {
      return streamSession_.size();
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession getStreamSession(int index) {
      return streamSession_.get(index);
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessionOrBuilder getStreamSessionOrBuilder(
        int index) {
      return streamSession_.get(index);
    }
    private void ensureStreamSessionIsMutable() {
      if (!streamSession_.isModifiable()) {
        streamSession_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(streamSession_);
       }
    }

    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    private void setStreamSession(
        int index, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStreamSessionIsMutable();
      streamSession_.set(index, value);
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    private void setStreamSession(
        int index, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession.Builder builderForValue) {
      ensureStreamSessionIsMutable();
      streamSession_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    private void addStreamSession(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStreamSessionIsMutable();
      streamSession_.add(value);
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    private void addStreamSession(
        int index, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStreamSessionIsMutable();
      streamSession_.add(index, value);
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    private void addStreamSession(
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession.Builder builderForValue) {
      ensureStreamSessionIsMutable();
      streamSession_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    private void addStreamSession(
        int index, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession.Builder builderForValue) {
      ensureStreamSessionIsMutable();
      streamSession_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    private void addAllStreamSession(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession> values) {
      ensureStreamSessionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, streamSession_);
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    private void clearStreamSession() {
      streamSession_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Represents the current sessions
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
     */
    private void removeStreamSession(int index) {
      ensureStreamSessionIsMutable();
      streamSession_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < streamSession_.size(); i++) {
        output.writeMessage(1, streamSession_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < streamSession_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, streamSession_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * List of all the sessions.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamSessions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamSessions)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessionsOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public java.util.List<org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession> getStreamSessionList() {
        return java.util.Collections.unmodifiableList(
            instance.getStreamSessionList());
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public int getStreamSessionCount() {
        return instance.getStreamSessionCount();
      }/**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession getStreamSession(int index) {
        return instance.getStreamSession(index);
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public Builder setStreamSession(
          int index, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession value) {
        copyOnWrite();
        instance.setStreamSession(index, value);
        return this;
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public Builder setStreamSession(
          int index, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession.Builder builderForValue) {
        copyOnWrite();
        instance.setStreamSession(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public Builder addStreamSession(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession value) {
        copyOnWrite();
        instance.addStreamSession(value);
        return this;
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public Builder addStreamSession(
          int index, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession value) {
        copyOnWrite();
        instance.addStreamSession(index, value);
        return this;
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public Builder addStreamSession(
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession.Builder builderForValue) {
        copyOnWrite();
        instance.addStreamSession(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public Builder addStreamSession(
          int index, org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession.Builder builderForValue) {
        copyOnWrite();
        instance.addStreamSession(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public Builder addAllStreamSession(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession> values) {
        copyOnWrite();
        instance.addAllStreamSession(values);
        return this;
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public Builder clearStreamSession() {
        copyOnWrite();
        instance.clearStreamSession();
        return this;
      }
      /**
       * <pre>
       * Represents the current sessions
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.libraries.api.internal.StreamSession stream_session = 1;</code>
       */
      public Builder removeStreamSession(int index) {
        copyOnWrite();
        instance.removeStreamSession(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamSessions)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          streamSession_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions) arg1;
          streamSession_= visitor.visitList(streamSession_, other.streamSession_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!streamSession_.isModifiable()) {
                    streamSession_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(streamSession_);
                  }
                  streamSession_.add(
                      input.readMessage(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamSessions)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamSessions();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamSessions> PARSER;

    public static com.google.protobuf.Parser<StreamSessions> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamSessionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamSession)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Unique identifier for the session.
     * </pre>
     *
     * <code>optional string session_id = 1;</code>
     */
    boolean hasSessionId();
    /**
     * <pre>
     * Unique identifier for the session.
     * </pre>
     *
     * <code>optional string session_id = 1;</code>
     */
    java.lang.String getSessionId();
    /**
     * <pre>
     * Unique identifier for the session.
     * </pre>
     *
     * <code>optional string session_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getSessionIdBytes();

    /**
     * <pre>
     * The milliseconds of either the time this session was created or the last
     * time content was added to the HEAD session.
     * </pre>
     *
     * <code>optional int64 legacy_time_millis = 2;</code>
     */
    boolean hasLegacyTimeMillis();
    /**
     * <pre>
     * The milliseconds of either the time this session was created or the last
     * time content was added to the HEAD session.
     * </pre>
     *
     * <code>optional int64 legacy_time_millis = 2;</code>
     */
    long getLegacyTimeMillis();

    /**
     * <pre>
     * Metadata for the session. If this field is absent then fallback to
     * #legacy_time_millis.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
     */
    boolean hasSessionMetadata();
    /**
     * <pre>
     * Metadata for the session. If this field is absent then fallback to
     * #legacy_time_millis.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
     */
    org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata getSessionMetadata();
  }
  /**
   * <pre>
   * Persistence for a Session. This allows the UI to create a ModelProvider
   * from an existing session.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamSession}
   */
  public  static final class StreamSession extends
      com.google.protobuf.GeneratedMessageLite<
          StreamSession, StreamSession.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamSession)
      StreamSessionOrBuilder {
    private StreamSession() {
      sessionId_ = "";
    }
    private int bitField0_;
    public static final int SESSION_ID_FIELD_NUMBER = 1;
    private java.lang.String sessionId_;
    /**
     * <pre>
     * Unique identifier for the session.
     * </pre>
     *
     * <code>optional string session_id = 1;</code>
     */
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Unique identifier for the session.
     * </pre>
     *
     * <code>optional string session_id = 1;</code>
     */
    public java.lang.String getSessionId() {
      return sessionId_;
    }
    /**
     * <pre>
     * Unique identifier for the session.
     * </pre>
     *
     * <code>optional string session_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(sessionId_);
    }
    /**
     * <pre>
     * Unique identifier for the session.
     * </pre>
     *
     * <code>optional string session_id = 1;</code>
     */
    private void setSessionId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      sessionId_ = value;
    }
    /**
     * <pre>
     * Unique identifier for the session.
     * </pre>
     *
     * <code>optional string session_id = 1;</code>
     */
    private void clearSessionId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      sessionId_ = getDefaultInstance().getSessionId();
    }
    /**
     * <pre>
     * Unique identifier for the session.
     * </pre>
     *
     * <code>optional string session_id = 1;</code>
     */
    private void setSessionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      sessionId_ = value.toStringUtf8();
    }

    public static final int LEGACY_TIME_MILLIS_FIELD_NUMBER = 2;
    private long legacyTimeMillis_;
    /**
     * <pre>
     * The milliseconds of either the time this session was created or the last
     * time content was added to the HEAD session.
     * </pre>
     *
     * <code>optional int64 legacy_time_millis = 2;</code>
     */
    public boolean hasLegacyTimeMillis() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The milliseconds of either the time this session was created or the last
     * time content was added to the HEAD session.
     * </pre>
     *
     * <code>optional int64 legacy_time_millis = 2;</code>
     */
    public long getLegacyTimeMillis() {
      return legacyTimeMillis_;
    }
    /**
     * <pre>
     * The milliseconds of either the time this session was created or the last
     * time content was added to the HEAD session.
     * </pre>
     *
     * <code>optional int64 legacy_time_millis = 2;</code>
     */
    private void setLegacyTimeMillis(long value) {
      bitField0_ |= 0x00000002;
      legacyTimeMillis_ = value;
    }
    /**
     * <pre>
     * The milliseconds of either the time this session was created or the last
     * time content was added to the HEAD session.
     * </pre>
     *
     * <code>optional int64 legacy_time_millis = 2;</code>
     */
    private void clearLegacyTimeMillis() {
      bitField0_ = (bitField0_ & ~0x00000002);
      legacyTimeMillis_ = 0L;
    }

    public static final int SESSION_METADATA_FIELD_NUMBER = 3;
    private org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata sessionMetadata_;
    /**
     * <pre>
     * Metadata for the session. If this field is absent then fallback to
     * #legacy_time_millis.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
     */
    public boolean hasSessionMetadata() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Metadata for the session. If this field is absent then fallback to
     * #legacy_time_millis.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
     */
    public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata getSessionMetadata() {
      return sessionMetadata_ == null ? org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata.getDefaultInstance() : sessionMetadata_;
    }
    /**
     * <pre>
     * Metadata for the session. If this field is absent then fallback to
     * #legacy_time_millis.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
     */
    private void setSessionMetadata(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata value) {
      if (value == null) {
        throw new NullPointerException();
      }
      sessionMetadata_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <pre>
     * Metadata for the session. If this field is absent then fallback to
     * #legacy_time_millis.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
     */
    private void setSessionMetadata(
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata.Builder builderForValue) {
      sessionMetadata_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Metadata for the session. If this field is absent then fallback to
     * #legacy_time_millis.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
     */
    private void mergeSessionMetadata(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata value) {
      if (sessionMetadata_ != null &&
          sessionMetadata_ != org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata.getDefaultInstance()) {
        sessionMetadata_ =
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata.newBuilder(sessionMetadata_).mergeFrom(value).buildPartial();
      } else {
        sessionMetadata_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <pre>
     * Metadata for the session. If this field is absent then fallback to
     * #legacy_time_millis.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
     */
    private void clearSessionMetadata() {  sessionMetadata_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getSessionId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, legacyTimeMillis_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getSessionMetadata());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSessionId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, legacyTimeMillis_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSessionMetadata());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Persistence for a Session. This allows the UI to create a ModelProvider
     * from an existing session.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamSession}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamSession)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSessionOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Unique identifier for the session.
       * </pre>
       *
       * <code>optional string session_id = 1;</code>
       */
      public boolean hasSessionId() {
        return instance.hasSessionId();
      }
      /**
       * <pre>
       * Unique identifier for the session.
       * </pre>
       *
       * <code>optional string session_id = 1;</code>
       */
      public java.lang.String getSessionId() {
        return instance.getSessionId();
      }
      /**
       * <pre>
       * Unique identifier for the session.
       * </pre>
       *
       * <code>optional string session_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSessionIdBytes() {
        return instance.getSessionIdBytes();
      }
      /**
       * <pre>
       * Unique identifier for the session.
       * </pre>
       *
       * <code>optional string session_id = 1;</code>
       */
      public Builder setSessionId(
          java.lang.String value) {
        copyOnWrite();
        instance.setSessionId(value);
        return this;
      }
      /**
       * <pre>
       * Unique identifier for the session.
       * </pre>
       *
       * <code>optional string session_id = 1;</code>
       */
      public Builder clearSessionId() {
        copyOnWrite();
        instance.clearSessionId();
        return this;
      }
      /**
       * <pre>
       * Unique identifier for the session.
       * </pre>
       *
       * <code>optional string session_id = 1;</code>
       */
      public Builder setSessionIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSessionIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * The milliseconds of either the time this session was created or the last
       * time content was added to the HEAD session.
       * </pre>
       *
       * <code>optional int64 legacy_time_millis = 2;</code>
       */
      public boolean hasLegacyTimeMillis() {
        return instance.hasLegacyTimeMillis();
      }
      /**
       * <pre>
       * The milliseconds of either the time this session was created or the last
       * time content was added to the HEAD session.
       * </pre>
       *
       * <code>optional int64 legacy_time_millis = 2;</code>
       */
      public long getLegacyTimeMillis() {
        return instance.getLegacyTimeMillis();
      }
      /**
       * <pre>
       * The milliseconds of either the time this session was created or the last
       * time content was added to the HEAD session.
       * </pre>
       *
       * <code>optional int64 legacy_time_millis = 2;</code>
       */
      public Builder setLegacyTimeMillis(long value) {
        copyOnWrite();
        instance.setLegacyTimeMillis(value);
        return this;
      }
      /**
       * <pre>
       * The milliseconds of either the time this session was created or the last
       * time content was added to the HEAD session.
       * </pre>
       *
       * <code>optional int64 legacy_time_millis = 2;</code>
       */
      public Builder clearLegacyTimeMillis() {
        copyOnWrite();
        instance.clearLegacyTimeMillis();
        return this;
      }

      /**
       * <pre>
       * Metadata for the session. If this field is absent then fallback to
       * #legacy_time_millis.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
       */
      public boolean hasSessionMetadata() {
        return instance.hasSessionMetadata();
      }
      /**
       * <pre>
       * Metadata for the session. If this field is absent then fallback to
       * #legacy_time_millis.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
       */
      public org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata getSessionMetadata() {
        return instance.getSessionMetadata();
      }
      /**
       * <pre>
       * Metadata for the session. If this field is absent then fallback to
       * #legacy_time_millis.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
       */
      public Builder setSessionMetadata(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata value) {
        copyOnWrite();
        instance.setSessionMetadata(value);
        return this;
        }
      /**
       * <pre>
       * Metadata for the session. If this field is absent then fallback to
       * #legacy_time_millis.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
       */
      public Builder setSessionMetadata(
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata.Builder builderForValue) {
        copyOnWrite();
        instance.setSessionMetadata(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Metadata for the session. If this field is absent then fallback to
       * #legacy_time_millis.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
       */
      public Builder mergeSessionMetadata(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata value) {
        copyOnWrite();
        instance.mergeSessionMetadata(value);
        return this;
      }
      /**
       * <pre>
       * Metadata for the session. If this field is absent then fallback to
       * #legacy_time_millis.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.libraries.api.internal.SessionMetadata session_metadata = 3;</code>
       */
      public Builder clearSessionMetadata() {  copyOnWrite();
        instance.clearSessionMetadata();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamSession)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession) arg1;
          sessionId_ = visitor.visitString(
              hasSessionId(), sessionId_,
              other.hasSessionId(), other.sessionId_);
          legacyTimeMillis_ = visitor.visitLong(
              hasLegacyTimeMillis(), legacyTimeMillis_,
              other.hasLegacyTimeMillis(), other.legacyTimeMillis_);
          sessionMetadata_ = visitor.visitMessage(sessionMetadata_, other.sessionMetadata_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  sessionId_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  legacyTimeMillis_ = input.readInt64();
                  break;
                }
                case 26: {
                  org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = sessionMetadata_.toBuilder();
                  }
                  sessionMetadata_ = input.readMessage(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(sessionMetadata_);
                    sessionMetadata_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamSession)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamSession();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamSession getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamSession> PARSER;

    public static com.google.protobuf.Parser<StreamSession> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SessionMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.SessionMetadata)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The time in milliseconds that the most recent content was added to this
     * session.
     * </pre>
     *
     * <code>optional int64 last_added_time_millis = 1;</code>
     */
    boolean hasLastAddedTimeMillis();
    /**
     * <pre>
     * The time in milliseconds that the most recent content was added to this
     * session.
     * </pre>
     *
     * <code>optional int64 last_added_time_millis = 1;</code>
     */
    long getLastAddedTimeMillis();

    /**
     * <pre>
     * The time in milliseconds that this session was created.
     * </pre>
     *
     * <code>optional int64 creation_time_millis = 2;</code>
     */
    boolean hasCreationTimeMillis();
    /**
     * <pre>
     * The time in milliseconds that this session was created.
     * </pre>
     *
     * <code>optional int64 creation_time_millis = 2;</code>
     */
    long getCreationTimeMillis();

    /**
     * <pre>
     * The schema used to create this session.
     * </pre>
     *
     * <code>optional int32 schema_version = 3;</code>
     */
    boolean hasSchemaVersion();
    /**
     * <pre>
     * The schema used to create this session.
     * </pre>
     *
     * <code>optional int32 schema_version = 3;</code>
     */
    int getSchemaVersion();
  }
  /**
   * <pre>
   * Metadata that describes a session.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.SessionMetadata}
   */
  public  static final class SessionMetadata extends
      com.google.protobuf.GeneratedMessageLite<
          SessionMetadata, SessionMetadata.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.SessionMetadata)
      SessionMetadataOrBuilder {
    private SessionMetadata() {
    }
    private int bitField0_;
    public static final int LAST_ADDED_TIME_MILLIS_FIELD_NUMBER = 1;
    private long lastAddedTimeMillis_;
    /**
     * <pre>
     * The time in milliseconds that the most recent content was added to this
     * session.
     * </pre>
     *
     * <code>optional int64 last_added_time_millis = 1;</code>
     */
    public boolean hasLastAddedTimeMillis() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The time in milliseconds that the most recent content was added to this
     * session.
     * </pre>
     *
     * <code>optional int64 last_added_time_millis = 1;</code>
     */
    public long getLastAddedTimeMillis() {
      return lastAddedTimeMillis_;
    }
    /**
     * <pre>
     * The time in milliseconds that the most recent content was added to this
     * session.
     * </pre>
     *
     * <code>optional int64 last_added_time_millis = 1;</code>
     */
    private void setLastAddedTimeMillis(long value) {
      bitField0_ |= 0x00000001;
      lastAddedTimeMillis_ = value;
    }
    /**
     * <pre>
     * The time in milliseconds that the most recent content was added to this
     * session.
     * </pre>
     *
     * <code>optional int64 last_added_time_millis = 1;</code>
     */
    private void clearLastAddedTimeMillis() {
      bitField0_ = (bitField0_ & ~0x00000001);
      lastAddedTimeMillis_ = 0L;
    }

    public static final int CREATION_TIME_MILLIS_FIELD_NUMBER = 2;
    private long creationTimeMillis_;
    /**
     * <pre>
     * The time in milliseconds that this session was created.
     * </pre>
     *
     * <code>optional int64 creation_time_millis = 2;</code>
     */
    public boolean hasCreationTimeMillis() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The time in milliseconds that this session was created.
     * </pre>
     *
     * <code>optional int64 creation_time_millis = 2;</code>
     */
    public long getCreationTimeMillis() {
      return creationTimeMillis_;
    }
    /**
     * <pre>
     * The time in milliseconds that this session was created.
     * </pre>
     *
     * <code>optional int64 creation_time_millis = 2;</code>
     */
    private void setCreationTimeMillis(long value) {
      bitField0_ |= 0x00000002;
      creationTimeMillis_ = value;
    }
    /**
     * <pre>
     * The time in milliseconds that this session was created.
     * </pre>
     *
     * <code>optional int64 creation_time_millis = 2;</code>
     */
    private void clearCreationTimeMillis() {
      bitField0_ = (bitField0_ & ~0x00000002);
      creationTimeMillis_ = 0L;
    }

    public static final int SCHEMA_VERSION_FIELD_NUMBER = 3;
    private int schemaVersion_;
    /**
     * <pre>
     * The schema used to create this session.
     * </pre>
     *
     * <code>optional int32 schema_version = 3;</code>
     */
    public boolean hasSchemaVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * The schema used to create this session.
     * </pre>
     *
     * <code>optional int32 schema_version = 3;</code>
     */
    public int getSchemaVersion() {
      return schemaVersion_;
    }
    /**
     * <pre>
     * The schema used to create this session.
     * </pre>
     *
     * <code>optional int32 schema_version = 3;</code>
     */
    private void setSchemaVersion(int value) {
      bitField0_ |= 0x00000004;
      schemaVersion_ = value;
    }
    /**
     * <pre>
     * The schema used to create this session.
     * </pre>
     *
     * <code>optional int32 schema_version = 3;</code>
     */
    private void clearSchemaVersion() {
      bitField0_ = (bitField0_ & ~0x00000004);
      schemaVersion_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, lastAddedTimeMillis_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, creationTimeMillis_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, schemaVersion_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, lastAddedTimeMillis_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, creationTimeMillis_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, schemaVersion_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Metadata that describes a session.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.SessionMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.SessionMetadata)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadataOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The time in milliseconds that the most recent content was added to this
       * session.
       * </pre>
       *
       * <code>optional int64 last_added_time_millis = 1;</code>
       */
      public boolean hasLastAddedTimeMillis() {
        return instance.hasLastAddedTimeMillis();
      }
      /**
       * <pre>
       * The time in milliseconds that the most recent content was added to this
       * session.
       * </pre>
       *
       * <code>optional int64 last_added_time_millis = 1;</code>
       */
      public long getLastAddedTimeMillis() {
        return instance.getLastAddedTimeMillis();
      }
      /**
       * <pre>
       * The time in milliseconds that the most recent content was added to this
       * session.
       * </pre>
       *
       * <code>optional int64 last_added_time_millis = 1;</code>
       */
      public Builder setLastAddedTimeMillis(long value) {
        copyOnWrite();
        instance.setLastAddedTimeMillis(value);
        return this;
      }
      /**
       * <pre>
       * The time in milliseconds that the most recent content was added to this
       * session.
       * </pre>
       *
       * <code>optional int64 last_added_time_millis = 1;</code>
       */
      public Builder clearLastAddedTimeMillis() {
        copyOnWrite();
        instance.clearLastAddedTimeMillis();
        return this;
      }

      /**
       * <pre>
       * The time in milliseconds that this session was created.
       * </pre>
       *
       * <code>optional int64 creation_time_millis = 2;</code>
       */
      public boolean hasCreationTimeMillis() {
        return instance.hasCreationTimeMillis();
      }
      /**
       * <pre>
       * The time in milliseconds that this session was created.
       * </pre>
       *
       * <code>optional int64 creation_time_millis = 2;</code>
       */
      public long getCreationTimeMillis() {
        return instance.getCreationTimeMillis();
      }
      /**
       * <pre>
       * The time in milliseconds that this session was created.
       * </pre>
       *
       * <code>optional int64 creation_time_millis = 2;</code>
       */
      public Builder setCreationTimeMillis(long value) {
        copyOnWrite();
        instance.setCreationTimeMillis(value);
        return this;
      }
      /**
       * <pre>
       * The time in milliseconds that this session was created.
       * </pre>
       *
       * <code>optional int64 creation_time_millis = 2;</code>
       */
      public Builder clearCreationTimeMillis() {
        copyOnWrite();
        instance.clearCreationTimeMillis();
        return this;
      }

      /**
       * <pre>
       * The schema used to create this session.
       * </pre>
       *
       * <code>optional int32 schema_version = 3;</code>
       */
      public boolean hasSchemaVersion() {
        return instance.hasSchemaVersion();
      }
      /**
       * <pre>
       * The schema used to create this session.
       * </pre>
       *
       * <code>optional int32 schema_version = 3;</code>
       */
      public int getSchemaVersion() {
        return instance.getSchemaVersion();
      }
      /**
       * <pre>
       * The schema used to create this session.
       * </pre>
       *
       * <code>optional int32 schema_version = 3;</code>
       */
      public Builder setSchemaVersion(int value) {
        copyOnWrite();
        instance.setSchemaVersion(value);
        return this;
      }
      /**
       * <pre>
       * The schema used to create this session.
       * </pre>
       *
       * <code>optional int32 schema_version = 3;</code>
       */
      public Builder clearSchemaVersion() {
        copyOnWrite();
        instance.clearSchemaVersion();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.SessionMetadata)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata) arg1;
          lastAddedTimeMillis_ = visitor.visitLong(
              hasLastAddedTimeMillis(), lastAddedTimeMillis_,
              other.hasLastAddedTimeMillis(), other.lastAddedTimeMillis_);
          creationTimeMillis_ = visitor.visitLong(
              hasCreationTimeMillis(), creationTimeMillis_,
              other.hasCreationTimeMillis(), other.creationTimeMillis_);
          schemaVersion_ = visitor.visitInt(
              hasSchemaVersion(), schemaVersion_,
              other.hasSchemaVersion(), other.schemaVersion_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  lastAddedTimeMillis_ = input.readInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  creationTimeMillis_ = input.readInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  schemaVersion_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.SessionMetadata)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SessionMetadata();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.SessionMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SessionMetadata> PARSER;

    public static com.google.protobuf.Parser<SessionMetadata> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamLocalActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamLocalAction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * See LocalActionMutation.ActionType
     * </pre>
     *
     * <code>optional int32 action = 1;</code>
     */
    boolean hasAction();
    /**
     * <pre>
     * See LocalActionMutation.ActionType
     * </pre>
     *
     * <code>optional int32 action = 1;</code>
     */
    int getAction();

    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    boolean hasFeatureContentId();
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    java.lang.String getFeatureContentId();
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getFeatureContentIdBytes();

    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 3;</code>
     */
    boolean hasTimestampSeconds();
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 3;</code>
     */
    long getTimestampSeconds();
  }
  /**
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamLocalAction}
   */
  public  static final class StreamLocalAction extends
      com.google.protobuf.GeneratedMessageLite<
          StreamLocalAction, StreamLocalAction.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamLocalAction)
      StreamLocalActionOrBuilder {
    private StreamLocalAction() {
      featureContentId_ = "";
    }
    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <pre>
     * See LocalActionMutation.ActionType
     * </pre>
     *
     * <code>optional int32 action = 1;</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * See LocalActionMutation.ActionType
     * </pre>
     *
     * <code>optional int32 action = 1;</code>
     */
    public int getAction() {
      return action_;
    }
    /**
     * <pre>
     * See LocalActionMutation.ActionType
     * </pre>
     *
     * <code>optional int32 action = 1;</code>
     */
    private void setAction(int value) {
      bitField0_ |= 0x00000001;
      action_ = value;
    }
    /**
     * <pre>
     * See LocalActionMutation.ActionType
     * </pre>
     *
     * <code>optional int32 action = 1;</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      action_ = 0;
    }

    public static final int FEATURE_CONTENT_ID_FIELD_NUMBER = 2;
    private java.lang.String featureContentId_;
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    public boolean hasFeatureContentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    public java.lang.String getFeatureContentId() {
      return featureContentId_;
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFeatureContentIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(featureContentId_);
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    private void setFeatureContentId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      featureContentId_ = value;
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    private void clearFeatureContentId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      featureContentId_ = getDefaultInstance().getFeatureContentId();
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    private void setFeatureContentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      featureContentId_ = value.toStringUtf8();
    }

    public static final int TIMESTAMP_SECONDS_FIELD_NUMBER = 3;
    private long timestampSeconds_;
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 3;</code>
     */
    public boolean hasTimestampSeconds() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 3;</code>
     */
    public long getTimestampSeconds() {
      return timestampSeconds_;
    }
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 3;</code>
     */
    private void setTimestampSeconds(long value) {
      bitField0_ |= 0x00000004;
      timestampSeconds_ = value;
    }
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 3;</code>
     */
    private void clearTimestampSeconds() {
      bitField0_ = (bitField0_ & ~0x00000004);
      timestampSeconds_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getFeatureContentId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, timestampSeconds_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getFeatureContentId());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timestampSeconds_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamLocalAction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamLocalAction)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalActionOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * See LocalActionMutation.ActionType
       * </pre>
       *
       * <code>optional int32 action = 1;</code>
       */
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <pre>
       * See LocalActionMutation.ActionType
       * </pre>
       *
       * <code>optional int32 action = 1;</code>
       */
      public int getAction() {
        return instance.getAction();
      }
      /**
       * <pre>
       * See LocalActionMutation.ActionType
       * </pre>
       *
       * <code>optional int32 action = 1;</code>
       */
      public Builder setAction(int value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <pre>
       * See LocalActionMutation.ActionType
       * </pre>
       *
       * <code>optional int32 action = 1;</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }

      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public boolean hasFeatureContentId() {
        return instance.hasFeatureContentId();
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public java.lang.String getFeatureContentId() {
        return instance.getFeatureContentId();
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFeatureContentIdBytes() {
        return instance.getFeatureContentIdBytes();
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public Builder setFeatureContentId(
          java.lang.String value) {
        copyOnWrite();
        instance.setFeatureContentId(value);
        return this;
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public Builder clearFeatureContentId() {
        copyOnWrite();
        instance.clearFeatureContentId();
        return this;
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public Builder setFeatureContentIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFeatureContentIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * When the action was recorded
       * </pre>
       *
       * <code>optional int64 timestamp_seconds = 3;</code>
       */
      public boolean hasTimestampSeconds() {
        return instance.hasTimestampSeconds();
      }
      /**
       * <pre>
       * When the action was recorded
       * </pre>
       *
       * <code>optional int64 timestamp_seconds = 3;</code>
       */
      public long getTimestampSeconds() {
        return instance.getTimestampSeconds();
      }
      /**
       * <pre>
       * When the action was recorded
       * </pre>
       *
       * <code>optional int64 timestamp_seconds = 3;</code>
       */
      public Builder setTimestampSeconds(long value) {
        copyOnWrite();
        instance.setTimestampSeconds(value);
        return this;
      }
      /**
       * <pre>
       * When the action was recorded
       * </pre>
       *
       * <code>optional int64 timestamp_seconds = 3;</code>
       */
      public Builder clearTimestampSeconds() {
        copyOnWrite();
        instance.clearTimestampSeconds();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamLocalAction)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction) arg1;
          action_ = visitor.visitInt(
              hasAction(), action_,
              other.hasAction(), other.action_);
          featureContentId_ = visitor.visitString(
              hasFeatureContentId(), featureContentId_,
              other.hasFeatureContentId(), other.featureContentId_);
          timestampSeconds_ = visitor.visitLong(
              hasTimestampSeconds(), timestampSeconds_,
              other.hasTimestampSeconds(), other.timestampSeconds_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  action_ = input.readInt32();
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  featureContentId_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  timestampSeconds_ = input.readInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamLocalAction)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamLocalAction();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamLocalAction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamLocalAction> PARSER;

    public static com.google.protobuf.Parser<StreamLocalAction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StreamUploadableActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.StreamUploadableAction)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    boolean hasFeatureContentId();
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    java.lang.String getFeatureContentId();
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getFeatureContentIdBytes();

    /**
     * <pre>
     * The number of time this action was attempted to be recorded
     * </pre>
     *
     * <code>optional int32 upload_attempts = 3;</code>
     */
    boolean hasUploadAttempts();
    /**
     * <pre>
     * The number of time this action was attempted to be recorded
     * </pre>
     *
     * <code>optional int32 upload_attempts = 3;</code>
     */
    int getUploadAttempts();

    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 4;</code>
     */
    boolean hasTimestampSeconds();
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 4;</code>
     */
    long getTimestampSeconds();

    /**
     * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
     */
    boolean hasPayload();
    /**
     * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
     */
    org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload getPayload();
  }
  /**
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamUploadableAction}
   */
  public  static final class StreamUploadableAction extends
      com.google.protobuf.GeneratedMessageLite<
          StreamUploadableAction, StreamUploadableAction.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.StreamUploadableAction)
      StreamUploadableActionOrBuilder {
    private StreamUploadableAction() {
      featureContentId_ = "";
    }
    private int bitField0_;
    public static final int FEATURE_CONTENT_ID_FIELD_NUMBER = 2;
    private java.lang.String featureContentId_;
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    public boolean hasFeatureContentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    public java.lang.String getFeatureContentId() {
      return featureContentId_;
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFeatureContentIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(featureContentId_);
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    private void setFeatureContentId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      featureContentId_ = value;
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    private void clearFeatureContentId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      featureContentId_ = getDefaultInstance().getFeatureContentId();
    }
    /**
     * <code>optional string feature_content_id = 2;</code>
     */
    private void setFeatureContentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      featureContentId_ = value.toStringUtf8();
    }

    public static final int UPLOAD_ATTEMPTS_FIELD_NUMBER = 3;
    private int uploadAttempts_;
    /**
     * <pre>
     * The number of time this action was attempted to be recorded
     * </pre>
     *
     * <code>optional int32 upload_attempts = 3;</code>
     */
    public boolean hasUploadAttempts() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The number of time this action was attempted to be recorded
     * </pre>
     *
     * <code>optional int32 upload_attempts = 3;</code>
     */
    public int getUploadAttempts() {
      return uploadAttempts_;
    }
    /**
     * <pre>
     * The number of time this action was attempted to be recorded
     * </pre>
     *
     * <code>optional int32 upload_attempts = 3;</code>
     */
    private void setUploadAttempts(int value) {
      bitField0_ |= 0x00000002;
      uploadAttempts_ = value;
    }
    /**
     * <pre>
     * The number of time this action was attempted to be recorded
     * </pre>
     *
     * <code>optional int32 upload_attempts = 3;</code>
     */
    private void clearUploadAttempts() {
      bitField0_ = (bitField0_ & ~0x00000002);
      uploadAttempts_ = 0;
    }

    public static final int TIMESTAMP_SECONDS_FIELD_NUMBER = 4;
    private long timestampSeconds_;
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 4;</code>
     */
    public boolean hasTimestampSeconds() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 4;</code>
     */
    public long getTimestampSeconds() {
      return timestampSeconds_;
    }
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 4;</code>
     */
    private void setTimestampSeconds(long value) {
      bitField0_ |= 0x00000004;
      timestampSeconds_ = value;
    }
    /**
     * <pre>
     * When the action was recorded
     * </pre>
     *
     * <code>optional int64 timestamp_seconds = 4;</code>
     */
    private void clearTimestampSeconds() {
      bitField0_ = (bitField0_ & ~0x00000004);
      timestampSeconds_ = 0L;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 6;
    private org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload payload_;
    /**
     * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
     */
    public org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload getPayload() {
      return payload_ == null ? org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload.getDefaultInstance() : payload_;
    }
    /**
     * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
     */
    private void setPayload(org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
     */
    private void setPayload(
        org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload.Builder builderForValue) {
      payload_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
     */
    private void mergePayload(org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload value) {
      if (payload_ != null &&
          payload_ != org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload.getDefaultInstance()) {
        payload_ =
          org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload.newBuilder(payload_).mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
     */
    private void clearPayload() {  payload_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(2, getFeatureContentId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, uploadAttempts_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, timestampSeconds_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(6, getPayload());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getFeatureContentId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, uploadAttempts_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, timestampSeconds_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPayload());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.StreamUploadableAction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.StreamUploadableAction)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableActionOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public boolean hasFeatureContentId() {
        return instance.hasFeatureContentId();
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public java.lang.String getFeatureContentId() {
        return instance.getFeatureContentId();
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFeatureContentIdBytes() {
        return instance.getFeatureContentIdBytes();
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public Builder setFeatureContentId(
          java.lang.String value) {
        copyOnWrite();
        instance.setFeatureContentId(value);
        return this;
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public Builder clearFeatureContentId() {
        copyOnWrite();
        instance.clearFeatureContentId();
        return this;
      }
      /**
       * <code>optional string feature_content_id = 2;</code>
       */
      public Builder setFeatureContentIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFeatureContentIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * The number of time this action was attempted to be recorded
       * </pre>
       *
       * <code>optional int32 upload_attempts = 3;</code>
       */
      public boolean hasUploadAttempts() {
        return instance.hasUploadAttempts();
      }
      /**
       * <pre>
       * The number of time this action was attempted to be recorded
       * </pre>
       *
       * <code>optional int32 upload_attempts = 3;</code>
       */
      public int getUploadAttempts() {
        return instance.getUploadAttempts();
      }
      /**
       * <pre>
       * The number of time this action was attempted to be recorded
       * </pre>
       *
       * <code>optional int32 upload_attempts = 3;</code>
       */
      public Builder setUploadAttempts(int value) {
        copyOnWrite();
        instance.setUploadAttempts(value);
        return this;
      }
      /**
       * <pre>
       * The number of time this action was attempted to be recorded
       * </pre>
       *
       * <code>optional int32 upload_attempts = 3;</code>
       */
      public Builder clearUploadAttempts() {
        copyOnWrite();
        instance.clearUploadAttempts();
        return this;
      }

      /**
       * <pre>
       * When the action was recorded
       * </pre>
       *
       * <code>optional int64 timestamp_seconds = 4;</code>
       */
      public boolean hasTimestampSeconds() {
        return instance.hasTimestampSeconds();
      }
      /**
       * <pre>
       * When the action was recorded
       * </pre>
       *
       * <code>optional int64 timestamp_seconds = 4;</code>
       */
      public long getTimestampSeconds() {
        return instance.getTimestampSeconds();
      }
      /**
       * <pre>
       * When the action was recorded
       * </pre>
       *
       * <code>optional int64 timestamp_seconds = 4;</code>
       */
      public Builder setTimestampSeconds(long value) {
        copyOnWrite();
        instance.setTimestampSeconds(value);
        return this;
      }
      /**
       * <pre>
       * When the action was recorded
       * </pre>
       *
       * <code>optional int64 timestamp_seconds = 4;</code>
       */
      public Builder clearTimestampSeconds() {
        copyOnWrite();
        instance.clearTimestampSeconds();
        return this;
      }

      /**
       * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
       */
      public boolean hasPayload() {
        return instance.hasPayload();
      }
      /**
       * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
       */
      public org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload getPayload() {
        return instance.getPayload();
      }
      /**
       * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
       */
      public Builder setPayload(org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload value) {
        copyOnWrite();
        instance.setPayload(value);
        return this;
        }
      /**
       * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
       */
      public Builder setPayload(
          org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload.Builder builderForValue) {
        copyOnWrite();
        instance.setPayload(builderForValue);
        return this;
      }
      /**
       * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
       */
      public Builder mergePayload(org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload value) {
        copyOnWrite();
        instance.mergePayload(value);
        return this;
      }
      /**
       * <code>optional .components.feed.core.proto.wire.ActionPayload payload = 6;</code>
       */
      public Builder clearPayload() {  copyOnWrite();
        instance.clearPayload();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.StreamUploadableAction)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasPayload()) {
            if (!getPayload().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction) arg1;
          featureContentId_ = visitor.visitString(
              hasFeatureContentId(), featureContentId_,
              other.hasFeatureContentId(), other.featureContentId_);
          uploadAttempts_ = visitor.visitInt(
              hasUploadAttempts(), uploadAttempts_,
              other.hasUploadAttempts(), other.uploadAttempts_);
          timestampSeconds_ = visitor.visitLong(
              hasTimestampSeconds(), timestampSeconds_,
              other.hasTimestampSeconds(), other.timestampSeconds_);
          payload_ = visitor.visitMessage(payload_, other.payload_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  featureContentId_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  uploadAttempts_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000004;
                  timestampSeconds_ = input.readInt64();
                  break;
                }
                case 50: {
                  org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = payload_.toBuilder();
                  }
                  payload_ = input.readMessage(org.chromium.components.feed.core.proto.wire.ActionPayloadProto.ActionPayload.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.StreamUploadableAction)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new StreamUploadableAction();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.StreamUploadableAction getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StreamUploadableAction> PARSER;

    public static com.google.protobuf.Parser<StreamUploadableAction> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ClientBasicLoggingMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.libraries.api.internal.ClientBasicLoggingMetadata)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Time server filled out content.
     * </pre>
     *
     * <code>optional int64 availability_time_seconds = 1;</code>
     */
    boolean hasAvailabilityTimeSeconds();
    /**
     * <pre>
     * Time server filled out content.
     * </pre>
     *
     * <code>optional int64 availability_time_seconds = 1;</code>
     */
    long getAvailabilityTimeSeconds();
  }
  /**
   * <pre>
   * An extension to the BasicLoggingMetadata which is used to hide the notion of
   * the client needing this data in other places.
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.libraries.api.internal.ClientBasicLoggingMetadata}
   */
  public  static final class ClientBasicLoggingMetadata extends
      com.google.protobuf.GeneratedMessageLite<
          ClientBasicLoggingMetadata, ClientBasicLoggingMetadata.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.libraries.api.internal.ClientBasicLoggingMetadata)
      ClientBasicLoggingMetadataOrBuilder {
    private ClientBasicLoggingMetadata() {
    }
    private int bitField0_;
    public static final int AVAILABILITY_TIME_SECONDS_FIELD_NUMBER = 1;
    private long availabilityTimeSeconds_;
    /**
     * <pre>
     * Time server filled out content.
     * </pre>
     *
     * <code>optional int64 availability_time_seconds = 1;</code>
     */
    public boolean hasAvailabilityTimeSeconds() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Time server filled out content.
     * </pre>
     *
     * <code>optional int64 availability_time_seconds = 1;</code>
     */
    public long getAvailabilityTimeSeconds() {
      return availabilityTimeSeconds_;
    }
    /**
     * <pre>
     * Time server filled out content.
     * </pre>
     *
     * <code>optional int64 availability_time_seconds = 1;</code>
     */
    private void setAvailabilityTimeSeconds(long value) {
      bitField0_ |= 0x00000001;
      availabilityTimeSeconds_ = value;
    }
    /**
     * <pre>
     * Time server filled out content.
     * </pre>
     *
     * <code>optional int64 availability_time_seconds = 1;</code>
     */
    private void clearAvailabilityTimeSeconds() {
      bitField0_ = (bitField0_ & ~0x00000001);
      availabilityTimeSeconds_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, availabilityTimeSeconds_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, availabilityTimeSeconds_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * An extension to the BasicLoggingMetadata which is used to hide the notion of
     * the client needing this data in other places.
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.libraries.api.internal.ClientBasicLoggingMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.libraries.api.internal.ClientBasicLoggingMetadata)
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadataOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Time server filled out content.
       * </pre>
       *
       * <code>optional int64 availability_time_seconds = 1;</code>
       */
      public boolean hasAvailabilityTimeSeconds() {
        return instance.hasAvailabilityTimeSeconds();
      }
      /**
       * <pre>
       * Time server filled out content.
       * </pre>
       *
       * <code>optional int64 availability_time_seconds = 1;</code>
       */
      public long getAvailabilityTimeSeconds() {
        return instance.getAvailabilityTimeSeconds();
      }
      /**
       * <pre>
       * Time server filled out content.
       * </pre>
       *
       * <code>optional int64 availability_time_seconds = 1;</code>
       */
      public Builder setAvailabilityTimeSeconds(long value) {
        copyOnWrite();
        instance.setAvailabilityTimeSeconds(value);
        return this;
      }
      /**
       * <pre>
       * Time server filled out content.
       * </pre>
       *
       * <code>optional int64 availability_time_seconds = 1;</code>
       */
      public Builder clearAvailabilityTimeSeconds() {
        copyOnWrite();
        instance.clearAvailabilityTimeSeconds();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.libraries.api.internal.ClientBasicLoggingMetadata)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata other = (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata) arg1;
          availabilityTimeSeconds_ = visitor.visitLong(
              hasAvailabilityTimeSeconds(), availabilityTimeSeconds_,
              other.hasAvailabilityTimeSeconds(), other.availabilityTimeSeconds_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  availabilityTimeSeconds_ = input.readInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.libraries.api.internal.ClientBasicLoggingMetadata)
    private static final org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ClientBasicLoggingMetadata();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ClientBasicLoggingMetadata> PARSER;

    public static com.google.protobuf.Parser<ClientBasicLoggingMetadata> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
    public static final int CLIENT_BASIC_LOGGING_METADATA_FIELD_NUMBER = 206218502;
    /**
     * <code>extend .components.feed.core.proto.ui.stream.BasicLoggingMetadata { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
        org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.BasicLoggingMetadata,
        org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata> clientBasicLoggingMetadata = com.google.protobuf.GeneratedMessageLite
            .newSingularGeneratedExtension(
          org.chromium.components.feed.core.proto.ui.stream.StreamStructureProto.BasicLoggingMetadata.getDefaultInstance(),
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata.getDefaultInstance(),
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata.getDefaultInstance(),
          null,
          206218502,
          com.google.protobuf.WireFormat.FieldType.MESSAGE,
          org.chromium.components.feed.core.proto.libraries.api.internal.StreamDataProto.ClientBasicLoggingMetadata.class);
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
