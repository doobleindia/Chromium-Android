// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/feed/core/proto/wire/feed_action_request.proto

package org.chromium.components.feed.core.proto.wire;

public final class FeedActionRequestProto {
  private FeedActionRequestProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest.feedActionRequest);
  }
  public interface FeedActionRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:components.feed.core.proto.wire.FeedActionRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    java.util.List<org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction> 
        getFeedActionList();
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction getFeedAction(int index);
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    int getFeedActionCount();

    /**
     * <pre>
     * Token used to write to the same storage.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
     */
    boolean hasConsistencyToken();
    /**
     * <pre>
     * Token used to write to the same storage.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
     */
    org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken getConsistencyToken();
  }
  /**
   * <pre>
   * Request to upload new actions to the Actions Endpoint
   * </pre>
   *
   * Protobuf type {@code components.feed.core.proto.wire.FeedActionRequest}
   */
  public  static final class FeedActionRequest extends
      com.google.protobuf.GeneratedMessageLite<
          FeedActionRequest, FeedActionRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:components.feed.core.proto.wire.FeedActionRequest)
      FeedActionRequestOrBuilder {
    private FeedActionRequest() {
      feedAction_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int FEED_ACTION_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction> feedAction_;
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    public java.util.List<org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction> getFeedActionList() {
      return feedAction_;
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    public java.util.List<? extends org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedActionOrBuilder> 
        getFeedActionOrBuilderList() {
      return feedAction_;
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    public int getFeedActionCount() {
      return feedAction_.size();
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    public org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction getFeedAction(int index) {
      return feedAction_.get(index);
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    public org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedActionOrBuilder getFeedActionOrBuilder(
        int index) {
      return feedAction_.get(index);
    }
    private void ensureFeedActionIsMutable() {
      if (!feedAction_.isModifiable()) {
        feedAction_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(feedAction_);
       }
    }

    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    private void setFeedAction(
        int index, org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFeedActionIsMutable();
      feedAction_.set(index, value);
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    private void setFeedAction(
        int index, org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction.Builder builderForValue) {
      ensureFeedActionIsMutable();
      feedAction_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    private void addFeedAction(org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFeedActionIsMutable();
      feedAction_.add(value);
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    private void addFeedAction(
        int index, org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFeedActionIsMutable();
      feedAction_.add(index, value);
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    private void addFeedAction(
        org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction.Builder builderForValue) {
      ensureFeedActionIsMutable();
      feedAction_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    private void addFeedAction(
        int index, org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction.Builder builderForValue) {
      ensureFeedActionIsMutable();
      feedAction_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    private void addAllFeedAction(
        java.lang.Iterable<? extends org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction> values) {
      ensureFeedActionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, feedAction_);
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    private void clearFeedAction() {
      feedAction_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Data related to recordable actions performed on the client.
     * </pre>
     *
     * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
     */
    private void removeFeedAction(int index) {
      ensureFeedActionIsMutable();
      feedAction_.remove(index);
    }

    public static final int CONSISTENCY_TOKEN_FIELD_NUMBER = 2;
    private org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken consistencyToken_;
    /**
     * <pre>
     * Token used to write to the same storage.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
     */
    public boolean hasConsistencyToken() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Token used to write to the same storage.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
     */
    public org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken getConsistencyToken() {
      return consistencyToken_ == null ? org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.getDefaultInstance() : consistencyToken_;
    }
    /**
     * <pre>
     * Token used to write to the same storage.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
     */
    private void setConsistencyToken(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken value) {
      if (value == null) {
        throw new NullPointerException();
      }
      consistencyToken_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * Token used to write to the same storage.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
     */
    private void setConsistencyToken(
        org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.Builder builderForValue) {
      consistencyToken_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Token used to write to the same storage.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
     */
    private void mergeConsistencyToken(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken value) {
      if (consistencyToken_ != null &&
          consistencyToken_ != org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.getDefaultInstance()) {
        consistencyToken_ =
          org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.newBuilder(consistencyToken_).mergeFrom(value).buildPartial();
      } else {
        consistencyToken_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * Token used to write to the same storage.
     * </pre>
     *
     * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
     */
    private void clearConsistencyToken() {  consistencyToken_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < feedAction_.size(); i++) {
        output.writeMessage(1, feedAction_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, getConsistencyToken());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < feedAction_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, feedAction_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConsistencyToken());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Request to upload new actions to the Actions Endpoint
     * </pre>
     *
     * Protobuf type {@code components.feed.core.proto.wire.FeedActionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:components.feed.core.proto.wire.FeedActionRequest)
        org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequestOrBuilder {
      // Construct using org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public java.util.List<org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction> getFeedActionList() {
        return java.util.Collections.unmodifiableList(
            instance.getFeedActionList());
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public int getFeedActionCount() {
        return instance.getFeedActionCount();
      }/**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction getFeedAction(int index) {
        return instance.getFeedAction(index);
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public Builder setFeedAction(
          int index, org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction value) {
        copyOnWrite();
        instance.setFeedAction(index, value);
        return this;
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public Builder setFeedAction(
          int index, org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction.Builder builderForValue) {
        copyOnWrite();
        instance.setFeedAction(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public Builder addFeedAction(org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction value) {
        copyOnWrite();
        instance.addFeedAction(value);
        return this;
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public Builder addFeedAction(
          int index, org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction value) {
        copyOnWrite();
        instance.addFeedAction(index, value);
        return this;
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public Builder addFeedAction(
          org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction.Builder builderForValue) {
        copyOnWrite();
        instance.addFeedAction(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public Builder addFeedAction(
          int index, org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction.Builder builderForValue) {
        copyOnWrite();
        instance.addFeedAction(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public Builder addAllFeedAction(
          java.lang.Iterable<? extends org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction> values) {
        copyOnWrite();
        instance.addAllFeedAction(values);
        return this;
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public Builder clearFeedAction() {
        copyOnWrite();
        instance.clearFeedAction();
        return this;
      }
      /**
       * <pre>
       * Data related to recordable actions performed on the client.
       * </pre>
       *
       * <code>repeated .components.feed.core.proto.wire.FeedAction feed_action = 1;</code>
       */
      public Builder removeFeedAction(int index) {
        copyOnWrite();
        instance.removeFeedAction(index);
        return this;
      }

      /**
       * <pre>
       * Token used to write to the same storage.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
       */
      public boolean hasConsistencyToken() {
        return instance.hasConsistencyToken();
      }
      /**
       * <pre>
       * Token used to write to the same storage.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
       */
      public org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken getConsistencyToken() {
        return instance.getConsistencyToken();
      }
      /**
       * <pre>
       * Token used to write to the same storage.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
       */
      public Builder setConsistencyToken(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken value) {
        copyOnWrite();
        instance.setConsistencyToken(value);
        return this;
        }
      /**
       * <pre>
       * Token used to write to the same storage.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
       */
      public Builder setConsistencyToken(
          org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.Builder builderForValue) {
        copyOnWrite();
        instance.setConsistencyToken(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Token used to write to the same storage.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
       */
      public Builder mergeConsistencyToken(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken value) {
        copyOnWrite();
        instance.mergeConsistencyToken(value);
        return this;
      }
      /**
       * <pre>
       * Token used to write to the same storage.
       * </pre>
       *
       * <code>optional .components.feed.core.proto.wire.ConsistencyToken consistency_token = 2;</code>
       */
      public Builder clearConsistencyToken() {  copyOnWrite();
        instance.clearConsistencyToken();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:components.feed.core.proto.wire.FeedActionRequest)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getFeedActionCount(); i++) {
            if (!getFeedAction(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          feedAction_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest other = (org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest) arg1;
          feedAction_= visitor.visitList(feedAction_, other.feedAction_);
          consistencyToken_ = visitor.visitMessage(consistencyToken_, other.consistencyToken_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!feedAction_.isModifiable()) {
                    feedAction_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(feedAction_);
                  }
                  feedAction_.add(
                      input.readMessage(org.chromium.components.feed.core.proto.wire.FeedActionProto.FeedAction.parser(), extensionRegistry));
                  break;
                }
                case 18: {
                  org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = consistencyToken_.toBuilder();
                  }
                  consistencyToken_ = input.readMessage(org.chromium.components.feed.core.proto.wire.ConsistencyTokenProto.ConsistencyToken.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(consistencyToken_);
                    consistencyToken_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:components.feed.core.proto.wire.FeedActionRequest)
    private static final org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FeedActionRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FeedActionRequest> PARSER;

    public static com.google.protobuf.Parser<FeedActionRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
    public static final int FEED_ACTION_REQUEST_FIELD_NUMBER = 1001;
    /**
     * <code>extend .components.feed.core.proto.wire.ActionRequest { ... }</code>
     */
    public static final
      com.google.protobuf.GeneratedMessageLite.GeneratedExtension<
        org.chromium.components.feed.core.proto.wire.ActionRequestProto.ActionRequest,
        org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest> feedActionRequest = com.google.protobuf.GeneratedMessageLite
            .newSingularGeneratedExtension(
          org.chromium.components.feed.core.proto.wire.ActionRequestProto.ActionRequest.getDefaultInstance(),
          org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest.getDefaultInstance(),
          org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest.getDefaultInstance(),
          null,
          1001,
          com.google.protobuf.WireFormat.FieldType.MESSAGE,
          org.chromium.components.feed.core.proto.wire.FeedActionRequestProto.FeedActionRequest.class);
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
